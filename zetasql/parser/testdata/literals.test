select NULL, TRUE, "x", b"y", 1, 1.0
--
QueryStatement [0-36] [select NULL...y", 1, 1.0]
  Query [0-36] [select NULL...y", 1, 1.0]
    Select [0-36] [select NULL...y", 1, 1.0]
      SelectList [7-36] [NULL, TRUE, "x", b"y", 1, 1.0]
        SelectColumn [7-11] [NULL]
          NullLiteral(NULL) [7-11] [NULL]
        SelectColumn [13-17] [TRUE]
          BooleanLiteral(TRUE) [13-17] [TRUE]
        SelectColumn [19-22] ["x"]
          StringLiteral [19-22] ["x"]
            StringLiteralComponent("x") [19-22] ["x"]
        SelectColumn [24-28] [b"y"]
          BytesLiteral [24-28] [b"y"]
            BytesLiteralComponent(b"y") [24-28] [b"y"]
        SelectColumn [30-31] [1]
          IntLiteral(1) [30-31] [1]
        SelectColumn [33-36] [1.0]
          FloatLiteral(1.0) [33-36] [1.0]
--
SELECT
  NULL,
  TRUE,
  "x",
  b"y",
  1,
  1.0
==

select 1e10, .1e10, 0.1e10, 1.e10, 1e+10, .1e-10, 0.1e+10, 1.e-10;
--
QueryStatement [0-65] [select 1e10...10, 1.e-10]
  Query [0-65] [select 1e10...10, 1.e-10]
    Select [0-65] [select 1e10...10, 1.e-10]
      SelectList [7-65] [1e10, .1e10...10, 1.e-10]
        SelectColumn [7-11] [1e10]
          FloatLiteral(1e10) [7-11] [1e10]
        SelectColumn [13-18] [.1e10]
          FloatLiteral(.1e10) [13-18] [.1e10]
        SelectColumn [20-26] [0.1e10]
          FloatLiteral(0.1e10) [20-26] [0.1e10]
        SelectColumn [28-33] [1.e10]
          FloatLiteral(1.e10) [28-33] [1.e10]
        SelectColumn [35-40] [1e+10]
          FloatLiteral(1e+10) [35-40] [1e+10]
        SelectColumn [42-48] [.1e-10]
          FloatLiteral(.1e-10) [42-48] [.1e-10]
        SelectColumn [50-57] [0.1e+10]
          FloatLiteral(0.1e+10) [50-57] [0.1e+10]
        SelectColumn [59-65] [1.e-10]
          FloatLiteral(1.e-10) [59-65] [1.e-10]
--
SELECT
  1e10,
  .1e10,
  0.1e10,
  1.e10,
  1e+10,
  .1e-10,
  0.1e+10,
  1.e-10
==

select 'abc', 'a\b', "def", '\\x53', '\\u1235', "\\U00012346"
--
QueryStatement [0-61] [select 'abc...U00012346"]
  Query [0-61] [select 'abc...U00012346"]
    Select [0-61] [select 'abc...U00012346"]
      SelectList [7-61] ['abc', 'a\...U00012346"]
        SelectColumn [7-12] ['abc']
          StringLiteral [7-12] ['abc']
            StringLiteralComponent('abc') [7-12] ['abc']
        SelectColumn [14-19] ['a\b']
          StringLiteral [14-19] ['a\b']
            StringLiteralComponent('a\b') [14-19] ['a\b']
        SelectColumn [21-26] ["def"]
          StringLiteral [21-26] ["def"]
            StringLiteralComponent("def") [21-26] ["def"]
        SelectColumn [28-35] ['\\x53']
          StringLiteral [28-35] ['\\x53']
            StringLiteralComponent('\\x53') [28-35] ['\\x53']
        SelectColumn [37-46] ['\\u1235']
          StringLiteral [37-46] ['\\u1235']
            StringLiteralComponent('\\u1235') [37-46] ['\\u1235']
        SelectColumn [48-61] ["\\U00012346"]
          StringLiteral [48-61] ["\\U00012346"]
            StringLiteralComponent("\\U00012346") [48-61] ["\\U00012346"]
--
SELECT
  'abc',
  'a\b',
  "def",
  '\\x53',
  '\\u1235',
  "\\U00012346"
==

select """line1""", '''line1'''
--
QueryStatement [0-31] [select """...''line1''']
  Query [0-31] [select """...''line1''']
    Select [0-31] [select """...''line1''']
      SelectList [7-31] ["""line1""", '''line1''']
        SelectColumn [7-18] ["""line1"""]
          StringLiteral [7-18] ["""line1"""]
            StringLiteralComponent("""line1""") [7-18] ["""line1"""]
        SelectColumn [20-31] ['''line1''']
          StringLiteral [20-31] ['''line1''']
            StringLiteralComponent('''line1''') [20-31] ['''line1''']
--
SELECT
  """line1""",
  '''line1'''
==

select '''abc\'''', '''abc\\'''
--
QueryStatement [0-31] [select '''...''abc\\''']
  Query [0-31] [select '''...''abc\\''']
    Select [0-31] [select '''...''abc\\''']
      SelectList [7-31] ['''abc\'''', '''abc\\''']
        SelectColumn [7-18] ['''abc\'''']
          StringLiteral [7-18] ['''abc\'''']
            StringLiteralComponent('''abc\'''') [7-18] ['''abc\'''']
        SelectColumn [20-31] ['''abc\\''']
          StringLiteral [20-31] ['''abc\\''']
            StringLiteralComponent('''abc\\''') [20-31] ['''abc\\''']
--
SELECT
  '''abc\'''',
  '''abc\\'''
==

# Escaped quotes prevent triple-quote detection.
select '''abc'\\''def''', '''abc''\\'def'''
--
QueryStatement [0-43] [select '''...'\\'def''']
  Query [0-43] [select '''...'\\'def''']
    Select [0-43] [select '''...'\\'def''']
      SelectList [7-43] ['''abc'\\'...'\\'def''']
        SelectColumn [7-24] ['''abc'\\''def''']
          StringLiteral [7-24] ['''abc'\\''def''']
            StringLiteralComponent('''abc'\\''def''') [7-24] ['''abc'\\''def''']
        SelectColumn [26-43] ['''abc''\\'def''']
          StringLiteral [26-43] ['''abc''\\'def''']
            StringLiteralComponent('''abc''\\'def''') [26-43] ['''abc''\\'def''']
--
SELECT
  '''abc'\\''def''',
  '''abc''\\'def'''
==

# Escaped quotes prevent triple-quote detection.
select """abc"\\""def""", """abc""\\"def"""
--
QueryStatement [0-43] [select """..."\\"def"""]
  Query [0-43] [select """..."\\"def"""]
    Select [0-43] [select """..."\\"def"""]
      SelectList [7-43] ["""abc"\\"..."\\"def"""]
        SelectColumn [7-24] ["""abc"\\""def"""]
          StringLiteral [7-24] ["""abc"\\""def"""]
            StringLiteralComponent("""abc"\\""def""") [7-24] ["""abc"\\""def"""]
        SelectColumn [26-43] ["""abc""\\"def"""]
          StringLiteral [26-43] ["""abc""\\"def"""]
            StringLiteralComponent("""abc""\\"def""") [26-43] ["""abc""\\"def"""]
--
SELECT
  """abc"\\""def""",
  """abc""\\"def"""
==

# "a" inside """ quotes won't work as well.
select """"a""""
--
ERROR: Syntax error: Unclosed string literal [at 1:16]
select """"a""""
               ^
==

select """"a" """
--
QueryStatement [0-17] [select """"a" """]
  Query [0-17] [select """"a" """]
    Select [0-17] [select """"a" """]
      SelectList [7-17] [""""a" """]
        SelectColumn [7-17] [""""a" """]
          StringLiteral [7-17] [""""a" """]
            StringLiteralComponent(""""a" """) [7-17] [""""a" """]
--
SELECT
  """"a" """
==

select """line1 'single_quote' "double_quote" \\x41g \\u22FD \\U000022FD"""
--
QueryStatement [0-75] [select """...U000022FD"""]
  Query [0-75] [select """...U000022FD"""]
    Select [0-75] [select """...U000022FD"""]
      SelectList [7-75] ["""line1 '...U000022FD"""]
        SelectColumn [7-75] ["""line1 '...U000022FD"""]
          StringLiteral [7-75] ["""line1 '...U000022FD"""]
            StringLiteralComponent("""line1 'single_quote' "double_quote" \\x41g \\u22FD \\U000022FD""") [7-75] ["""line1 '...U000022FD"""]
--
SELECT
  """line1 'single_quote' "double_quote" \\x41g \\u22FD \\U000022FD"""
==

select '''line1 'single_quote' "double_quote" \\x41g \\u22FD \\U000022FD'''
--
QueryStatement [0-75] [select '''...U000022FD''']
  Query [0-75] [select '''...U000022FD''']
    Select [0-75] [select '''...U000022FD''']
      SelectList [7-75] ['''line1 '...U000022FD''']
        SelectColumn [7-75] ['''line1 '...U000022FD''']
          StringLiteral [7-75] ['''line1 '...U000022FD''']
            StringLiteralComponent('''line1 'single_quote' "double_quote" \\x41g \\u22FD \\U000022FD''') [7-75] ['''line1 '...U000022FD''']
--
SELECT
  '''line1 'single_quote' "double_quote" \\x41g \\u22FD \\U000022FD'''
==

select """\u123"""
--
ERROR: Syntax error: Illegal escape sequence: \u must be followed by 4 hex digits but saw: \u123 [at 1:11]
select """\u123"""
          ^
==

select """\U123"""
--
ERROR: Syntax error: Illegal escape sequence: \U must be followed by 8 hex digits but saw: \U123 [at 1:11]
select """\U123"""
          ^
==

#Test that unaccepted escaped characters error out.
SELECT "a\qc"
--
ERROR: Syntax error: Illegal escape sequence: \q [at 1:10]
SELECT "a\qc"
         ^
==

SELECT "a\~b"
--
ERROR: Syntax error: Illegal escape sequence: \~ [at 1:10]
SELECT "a\~b"
         ^
==

SELECT "a\+b"
--
ERROR: Syntax error: Illegal escape sequence: \+ [at 1:10]
SELECT "a\+b"
         ^
==

SELECT "a\/b"
--
ERROR: Syntax error: Illegal escape sequence: \/ [at 1:10]
SELECT "a\/b"
         ^
==

#UTF-8 Tests
SELECT "\uE!82"
--
ERROR: Syntax error: Illegal escape sequence: \u must be followed by 4 hex digits but saw: \uE!82 [at 1:9]
SELECT "\uE!82"
        ^
==

SELECT "\UE282E282"
--
ERROR: Syntax error: Illegal escape sequence: Value of \UE282E282 exceeds Unicode limit (0x0010FFFF) [at 1:9]
SELECT "\UE282E282"
        ^
==

SELECT "\U0!00E282"
--
ERROR: Syntax error: Illegal escape sequence: \U must be followed by 8 hex digits but saw: \U0!00E282 [at 1:9]
SELECT "\U0!00E282"
        ^
==

select """line1
line2
line3""",
'--------------------------',
'''line1
line2
line3'''
--
QueryStatement [0-85] [select """...line2 line3''']
  Query [0-85] [select """...line2 line3''']
    Select [0-85] [select """...line2 line3''']
      SelectList [7-85] ["""line1 line2...ine2 line3''']
        SelectColumn [7-30] ["""line1 line2 line3"""]
          StringLiteral [7-30] ["""line1 line2 line3"""]
            StringLiteralComponent("""line1
line2
line3""") [7-30] ["""line1 line2 line3"""]
        SelectColumn [32-60] ['--------------------------']
          StringLiteral [32-60] ['--------------------------']
            StringLiteralComponent('--------------------------') [32-60] ['--------------------------']
        SelectColumn [62-85] ['''line1 line2 line3''']
          StringLiteral [62-85] ['''line1 line2 line3''']
            StringLiteralComponent('''line1
line2
line3''') [62-85] ['''line1 line2 line3''']
--
SELECT
  """line1
line2
line3""",
  '--------------------------',
  '''line1
line2
line3'''
==

select """line1\
line2"""
--
ERROR: Syntax error: Illegal escaped newline [at 1:16]
select """line1\
               ^
==

select '''line1\
line2'''
--
ERROR: Syntax error: Illegal escaped newline [at 1:16]
select '''line1\
               ^
==

select """line1\\
line2""",
'-----------------------------',
'''line1\\
line2'''
--
QueryStatement [0-80] [select """...\ line2''']
  Query [0-80] [select """...\ line2''']
    Select [0-80] [select """...\ line2''']
      SelectList [7-80] ["""line1\\...\ line2''']
        SelectColumn [7-26] ["""line1\\ line2"""]
          StringLiteral [7-26] ["""line1\\ line2"""]
            StringLiteralComponent("""line1\\
line2""") [7-26] ["""line1\\ line2"""]
        SelectColumn [28-59] ['---------...---------']
          StringLiteral [28-59] ['---------...---------']
            StringLiteralComponent('-----------------------------') [28-59] ['---------...---------']
        SelectColumn [61-80] ['''line1\\ line2''']
          StringLiteral [61-80] ['''line1\\ line2''']
            StringLiteralComponent('''line1\\
line2''') [61-80] ['''line1\\ line2''']
--
SELECT
  """line1\\
line2""",
  '-----------------------------',
  '''line1\\
line2'''
==

select """line1
line2\
line3"""
--
ERROR: Syntax error: Illegal escaped newline [at 2:6]
line2\
     ^
==

select """a'''a'''a"""
--
QueryStatement [0-22] [select """a'''a'''a"""]
  Query [0-22] [select """a'''a'''a"""]
    Select [0-22] [select """a'''a'''a"""]
      SelectList [7-22] ["""a'''a'''a"""]
        SelectColumn [7-22] ["""a'''a'''a"""]
          StringLiteral [7-22] ["""a'''a'''a"""]
            StringLiteralComponent("""a'''a'''a""") [7-22] ["""a'''a'''a"""]
--
SELECT
  """a'''a'''a"""
==

select '''a"""a"""a'''
--
QueryStatement [0-22] [select '''a"""a"""a''']
  Query [0-22] [select '''a"""a"""a''']
    Select [0-22] [select '''a"""a"""a''']
      SelectList [7-22] ['''a"""a"""a''']
        SelectColumn [7-22] ['''a"""a"""a''']
          StringLiteral [7-22] ['''a"""a"""a''']
            StringLiteralComponent('''a"""a"""a''') [7-22] ['''a"""a"""a''']
--
SELECT
  '''a"""a"""a'''
==

select
"""line1""",
"""line2""",
"""line3"""
--
QueryStatement [0-44] [select """...""line3"""]
  Query [0-44] [select """...""line3"""]
    Select [0-44] [select """...""line3"""]
      SelectList [7-44] ["""line1""...""line3"""]
        SelectColumn [7-18] ["""line1"""]
          StringLiteral [7-18] ["""line1"""]
            StringLiteralComponent("""line1""") [7-18] ["""line1"""]
        SelectColumn [20-31] ["""line2"""]
          StringLiteral [20-31] ["""line2"""]
            StringLiteralComponent("""line2""") [20-31] ["""line2"""]
        SelectColumn [33-44] ["""line3"""]
          StringLiteral [33-44] ["""line3"""]
            StringLiteralComponent("""line3""") [33-44] ["""line3"""]
--
SELECT
  """line1""",
  """line2""",
  """line3"""
==

select /* comment "a"*/ "a", /* comment """a*/ """a"""
--
QueryStatement [0-54] [select /*...*/ """a"""]
  Query [0-54] [select /*...*/ """a"""]
    Select [0-54] [select /*...*/ """a"""]
      SelectList [24-54] ["a", /* comment """a*/ """a"""]
        SelectColumn [24-27] ["a"]
          StringLiteral [24-27] ["a"]
            StringLiteralComponent("a") [24-27] ["a"]
        SelectColumn [47-54] ["""a"""]
          StringLiteral [47-54] ["""a"""]
            StringLiteralComponent("""a""") [47-54] ["""a"""]
--
SELECT
  "a",
  """a"""
==

select "a /* comment */ ", """a /* comment */"""
--
QueryStatement [0-48] [select "a...comment */"""]
  Query [0-48] [select "a...comment */"""]
    Select [0-48] [select "a...comment */"""]
      SelectList [7-48] ["a /* comment...comment */"""]
        SelectColumn [7-25] ["a /* comment */ "]
          StringLiteral [7-25] ["a /* comment */ "]
            StringLiteralComponent("a /* comment */ ") [7-25] ["a /* comment */ "]
        SelectColumn [27-48] ["""a /* comment */"""]
          StringLiteral [27-48] ["""a /* comment */"""]
            StringLiteralComponent("""a /* comment */""") [27-48] ["""a /* comment */"""]
--
SELECT
  "a /* comment */ ",
  """a /* comment */"""
==

select """abc # """, """ def -- """, """ ghi /* """, """ */ jkl """
--
QueryStatement [0-67] [select """...*/ jkl """]
  Query [0-67] [select """...*/ jkl """]
    Select [0-67] [select """...*/ jkl """]
      SelectList [7-67] ["""abc # "...*/ jkl """]
        SelectColumn [7-19] ["""abc # """]
          StringLiteral [7-19] ["""abc # """]
            StringLiteralComponent("""abc # """) [7-19] ["""abc # """]
        SelectColumn [21-35] [""" def -- """]
          StringLiteral [21-35] [""" def -- """]
            StringLiteralComponent(""" def -- """) [21-35] [""" def -- """]
        SelectColumn [37-51] [""" ghi /* """]
          StringLiteral [37-51] [""" ghi /* """]
            StringLiteralComponent(""" ghi /* """) [37-51] [""" ghi /* """]
        SelectColumn [53-67] [""" */ jkl """]
          StringLiteral [53-67] [""" */ jkl """]
            StringLiteralComponent(""" */ jkl """) [53-67] [""" */ jkl """]
--
SELECT
  """abc # """,
  """ def -- """,
  """ ghi /* """,
  """ */ jkl """
==

# Basic tests for all the valid escapes.
select '\x53'        as OneHexByte
      ,'\X41'        as AnotherHexByte
      ,'\001'        as OneOctalByte
      ,'\a...'       as a
      ,'\b...'       as b
      ,'\f...'       as f
      ,'\n...'       as n
      ,'\r...'       as r
      ,'\t...'       as t
      ,'\v...'       as v
      ,'\\...'      as backslash
      ,'\?...'       as question
      ,'\"...'       as single_double_quote
      ,'\'...'       as single_single_quote
      ,'\`...'       as single_back_tick
      ,"\"..."       as double_double_quote
      ,"\'..."       as double_single_quote
      ,"\`..."       as double_back_tick
      ,'\uabcd'      as short_UTF8_char
      ,'\U0010FFFF'  as long_UTF8_char
--
QueryStatement [0-695] [select '\x53...long_UTF8_char]
  Query [0-695] [select '\x53...long_UTF8_char]
    Select [0-695] [select '\x53...long_UTF8_char]
      SelectList [7-695] ['\x53'...long_UTF8_char]
        SelectColumn [7-34] ['\x53'        as OneHexByte]
          StringLiteral [7-13] ['\x53']
            StringLiteralComponent('\x53') [7-13] ['\x53']
          Alias [21-34] [as OneHexByte]
            Identifier(OneHexByte) [24-34] [OneHexByte]
        SelectColumn [42-73] ['\X41'...AnotherHexByte]
          StringLiteral [42-48] ['\X41']
            StringLiteralComponent('\X41') [42-48] ['\X41']
          Alias [56-73] [as AnotherHexByte]
            Identifier(AnotherHexByte) [59-73] [AnotherHexByte]
        SelectColumn [81-110] ['\001'        as OneOctalByte]
          StringLiteral [81-87] ['\001']
            StringLiteralComponent('\001') [81-87] ['\001']
          Alias [95-110] [as OneOctalByte]
            Identifier(OneOctalByte) [98-110] [OneOctalByte]
        SelectColumn [118-136] ['\a...'       as a]
          StringLiteral [118-125] ['\a...']
            StringLiteralComponent('\a...') [118-125] ['\a...']
          Alias [132-136] [as a]
            Identifier(a) [135-136] [a]
        SelectColumn [144-162] ['\b...'       as b]
          StringLiteral [144-151] ['\b...']
            StringLiteralComponent('\b...') [144-151] ['\b...']
          Alias [158-162] [as b]
            Identifier(b) [161-162] [b]
        SelectColumn [170-188] ['\f...'       as f]
          StringLiteral [170-177] ['\f...']
            StringLiteralComponent('\f...') [170-177] ['\f...']
          Alias [184-188] [as f]
            Identifier(f) [187-188] [f]
        SelectColumn [196-214] ['\n...'       as n]
          StringLiteral [196-203] ['\n...']
            StringLiteralComponent('\n...') [196-203] ['\n...']
          Alias [210-214] [as n]
            Identifier(n) [213-214] [n]
        SelectColumn [222-240] ['\r...'       as r]
          StringLiteral [222-229] ['\r...']
            StringLiteralComponent('\r...') [222-229] ['\r...']
          Alias [236-240] [as r]
            Identifier(r) [239-240] [r]
        SelectColumn [248-266] ['\t...'       as t]
          StringLiteral [248-255] ['\t...']
            StringLiteralComponent('\t...') [248-255] ['\t...']
          Alias [262-266] [as t]
            Identifier(t) [265-266] [t]
        SelectColumn [274-292] ['\v...'       as v]
          StringLiteral [274-281] ['\v...']
            StringLiteralComponent('\v...') [274-281] ['\v...']
          Alias [288-292] [as v]
            Identifier(v) [291-292] [v]
        SelectColumn [300-325] ['\\...'      as backslash]
          StringLiteral [300-307] ['\\...']
            StringLiteralComponent('\\...') [300-307] ['\\...']
          Alias [313-325] [as backslash]
            Identifier(backslash) [316-325] [backslash]
        SelectColumn [333-358] ['\?...'       as question]
          StringLiteral [333-340] ['\?...']
            StringLiteralComponent('\?...') [333-340] ['\?...']
          Alias [347-358] [as question]
            Identifier(question) [350-358] [question]
        SelectColumn [366-402] ['\"...'...single_double_quote]
          StringLiteral [366-373] ['\"...']
            StringLiteralComponent('\"...') [366-373] ['\"...']
          Alias [380-402] [as single_double_quote]
            Identifier(single_double_quote) [383-402] [single_double_quote]
        SelectColumn [410-446] ['\'...'...single_single_quote]
          StringLiteral [410-417] ['\'...']
            StringLiteralComponent('\'...') [410-417] ['\'...']
          Alias [424-446] [as single_single_quote]
            Identifier(single_single_quote) [427-446] [single_single_quote]
        SelectColumn [454-487] ['\`...'...single_back_tick]
          StringLiteral [454-461] ['\`...']
            StringLiteralComponent('\`...') [454-461] ['\`...']
          Alias [468-487] [as single_back_tick]
            Identifier(single_back_tick) [471-487] [single_back_tick]
        SelectColumn [495-531] ["\"..."...double_double_quote]
          StringLiteral [495-502] ["\"..."]
            StringLiteralComponent("\"...") [495-502] ["\"..."]
          Alias [509-531] [as double_double_quote]
            Identifier(double_double_quote) [512-531] [double_double_quote]
        SelectColumn [539-575] ["\'..."...double_single_quote]
          StringLiteral [539-546] ["\'..."]
            StringLiteralComponent("\'...") [539-546] ["\'..."]
          Alias [553-575] [as double_single_quote]
            Identifier(double_single_quote) [556-575] [double_single_quote]
        SelectColumn [583-616] ["\`..."...double_back_tick]
          StringLiteral [583-590] ["\`..."]
            StringLiteralComponent("\`...") [583-590] ["\`..."]
          Alias [597-616] [as double_back_tick]
            Identifier(double_back_tick) [600-616] [double_back_tick]
        SelectColumn [624-656] ['\uabcd'...short_UTF8_char]
          StringLiteral [624-632] ['\uabcd']
            StringLiteralComponent('\uabcd') [624-632] ['\uabcd']
          Alias [638-656] [as short_UTF8_char]
            Identifier(short_UTF8_char) [641-656] [short_UTF8_char]
        SelectColumn [664-695] ['\U0010FFFF...long_UTF8_char]
          StringLiteral [664-676] ['\U0010FFFF']
            StringLiteralComponent('\U0010FFFF') [664-676] ['\U0010FFFF']
          Alias [678-695] [as long_UTF8_char]
            Identifier(long_UTF8_char) [681-695] [long_UTF8_char]
--
SELECT
  '\x53' AS OneHexByte,
  '\X41' AS AnotherHexByte,
  '\001' AS OneOctalByte,
  '\a...' AS a,
  '\b...' AS b,
  '\f...' AS f,
  '\n...' AS n,
  '\r...' AS r,
  '\t...' AS t,
  '\v...' AS v,
  '\\...' AS backslash,
  '\?...' AS question,
  '\"...' AS single_double_quote,
  '\'...' AS single_single_quote,
  '\`...' AS single_back_tick,
  "\"..." AS double_double_quote,
  "\'..." AS double_single_quote,
  "\`..." AS double_back_tick,
  '\uabcd' AS short_UTF8_char,
  '\U0010FFFF' AS long_UTF8_char
==

# Some more interesting valid escape sequences.
select 'ab\x41g'
--
QueryStatement [0-16] [select 'ab\x41g']
  Query [0-16] [select 'ab\x41g']
    Select [0-16] [select 'ab\x41g']
      SelectList [7-16] ['ab\x41g']
        SelectColumn [7-16] ['ab\x41g']
          StringLiteral [7-16] ['ab\x41g']
            StringLiteralComponent('ab\x41g') [7-16] ['ab\x41g']
--
SELECT
  'ab\x41g'
==

# 'ab' followed by 3 octal characters.
select 'ab\012\345\067'
--
QueryStatement [0-23] [select 'ab\012\345\067']
  Query [0-23] [select 'ab\012\345\067']
    Select [0-23] [select 'ab\012\345\067']
      SelectList [7-23] ['ab\012\345\067']
        SelectColumn [7-23] ['ab\012\345\067']
          StringLiteral [7-23] ['ab\012\345\067']
            StringLiteralComponent('ab\012\345\067') [7-23] ['ab\012\345\067']
--
SELECT
  'ab\012\345\067'
==

# Valid octal escape limited from \000 - \377
select 'ab\000A', 'ab\377B'
--
QueryStatement [0-27] [select 'ab\000A', 'ab\377B']
  Query [0-27] [select 'ab\000A', 'ab\377B']
    Select [0-27] [select 'ab\000A', 'ab\377B']
      SelectList [7-27] ['ab\000A', 'ab\377B']
        SelectColumn [7-16] ['ab\000A']
          StringLiteral [7-16] ['ab\000A']
            StringLiteralComponent('ab\000A') [7-16] ['ab\000A']
        SelectColumn [18-27] ['ab\377B']
          StringLiteral [18-27] ['ab\377B']
            StringLiteralComponent('ab\377B') [18-27] ['ab\377B']
--
SELECT
  'ab\000A',
  'ab\377B'
==

# Valid octal escapes are limited to \000 - \377
select 'ab\444A'
--
ERROR: Syntax error: Illegal escape sequence: \4 [at 1:11]
select 'ab\444A'
          ^
==

select 'ab\378A'
--
ERROR: Syntax error: Illegal escape sequence: Octal escape must be followed by 3 octal digits but saw: \378 [at 1:11]
select 'ab\378A'
          ^
==

select 'ab\37AA'
--
ERROR: Syntax error: Illegal escape sequence: Octal escape must be followed by 3 octal digits but saw: \37A [at 1:11]
select 'ab\37AA'
          ^
==

SELECT b"\12"
--
ERROR: Syntax error: Illegal escape sequence: Octal escape must be followed by 3 octal digits but saw: \12 [at 1:10]
SELECT b"\12"
         ^
==

# Invalid escape sequence, \c not valid.
select 'ab\cA'
--
ERROR: Syntax error: Illegal escape sequence: \c [at 1:11]
select 'ab\cA'
          ^
==

select "line1\
line2"
--
ERROR: Syntax error: Illegal escaped newline [at 1:14]
select "line1\
             ^
==

select 'line1\
line2'
--
ERROR: Syntax error: Illegal escaped newline [at 1:14]
select 'line1\
             ^
==

select "line1
line2"
--
ERROR: Syntax error: Unclosed string literal [at 1:8]
select "line1
       ^
==

select 'line1
line2'
--
ERROR: Syntax error: Unclosed string literal [at 1:8]
select 'line1
       ^
==

select '...
        ...'
--
ERROR: Syntax error: Unclosed string literal [at 1:8]
select '...
       ^

==

select 'abc\U00100\x4100'
--
ERROR: Syntax error: Illegal escape sequence: \U must be followed by 8 hex digits but saw: \U00100\x4 [at 1:12]
select 'abc\U00100\x4100'
           ^
==

select 'abc\U'
--
ERROR: Syntax error: Illegal escape sequence: \U must be followed by 8 hex digits but saw: \U [at 1:12]
select 'abc\U'
           ^
==

select 'abc\U00100',
--
ERROR: Syntax error: Illegal escape sequence: \U must be followed by 8 hex digits but saw: \U00100 [at 1:12]
select 'abc\U00100',
           ^
==

select 'abc\U00100G00',
--
ERROR: Syntax error: Illegal escape sequence: \U must be followed by 8 hex digits but saw: \U00100G00 [at 1:12]
select 'abc\U00100G00',
           ^
==

select 'abc\U00110000A'
--
ERROR: Syntax error: Illegal escape sequence: Value of \U00110000 exceeds Unicode limit (0x0010FFFF) [at 1:12]
select 'abc\U00110000A'
           ^
==

select '\Uffffffff'
--
ERROR: Syntax error: Illegal escape sequence: Value of \Uffffffff exceeds Unicode limit (0x0010FFFF) [at 1:9]
select '\Uffffffff'
        ^
==

select '\ude8c'
--
ERROR: Syntax error: Illegal escape sequence: Unicode value \ude8c is invalid [at 1:9]
select '\ude8c'
        ^
==

select '\U0000D83D'
--
ERROR: Syntax error: Illegal escape sequence: Unicode value \U0000D83D is invalid [at 1:9]
select '\U0000D83D'
        ^
==

# Valid hex escapes are from \x00 - \xff.
select 'abc\x00\x99\xffd'
--
QueryStatement [0-25] [select 'abc\x00\x99\xffd']
  Query [0-25] [select 'abc\x00\x99\xffd']
    Select [0-25] [select 'abc\x00\x99\xffd']
      SelectList [7-25] ['abc\x00\x99\xffd']
        SelectColumn [7-25] ['abc\x00\x99\xffd']
          StringLiteral [7-25] ['abc\x00\x99\xffd']
            StringLiteralComponent('abc\x00\x99\xffd') [7-25] ['abc\x00\x99\xffd']
--
SELECT
  'abc\x00\x99\xffd'
==

select 'abc\x'
--
ERROR: Syntax error: Illegal escape sequence: Hex escape must be followed by 2 hex digits but saw: \x [at 1:12]
select 'abc\x'
           ^
==

select 'abc\xF'
--
ERROR: Syntax error: Illegal escape sequence: Hex escape must be followed by 2 hex digits but saw: \xF [at 1:12]
select 'abc\xF'
           ^
==

select 'abc\xFG'
--
ERROR: Syntax error: Illegal escape sequence: Hex escape must be followed by 2 hex digits but saw: \xFG [at 1:12]
select 'abc\xFG'
           ^
==

SELECT "\x4"
--
ERROR: Syntax error: Illegal escape sequence: Hex escape must be followed by 2 hex digits but saw: \x4 [at 1:9]
SELECT "\x4"
        ^
==

#Test hex
SELECT "\X4"
--
ERROR: Syntax error: Illegal escape sequence: Hex escape must be followed by 2 hex digits but saw: \X4 [at 1:9]
SELECT "\X4"
        ^
==

select 'abc\u'
--
ERROR: Syntax error: Illegal escape sequence: \u must be followed by 4 hex digits but saw: \u [at 1:12]
select 'abc\u'
           ^
==

select 'abc\u0'
--
ERROR: Syntax error: Illegal escape sequence: \u must be followed by 4 hex digits but saw: \u0 [at 1:12]
select 'abc\u0'
           ^
==

select 'abc\u02'
--
ERROR: Syntax error: Illegal escape sequence: \u must be followed by 4 hex digits but saw: \u02 [at 1:12]
select 'abc\u02'
           ^
==

select 'abc\u002'
--
ERROR: Syntax error: Illegal escape sequence: \u must be followed by 4 hex digits but saw: \u002 [at 1:12]
select 'abc\u002'
           ^
==

select 'abc\u002G'
--
ERROR: Syntax error: Illegal escape sequence: \u must be followed by 4 hex digits but saw: \u002G [at 1:12]
select 'abc\u002G'
           ^
==

select "bad string escape \u123";
--
ERROR: Syntax error: Illegal escape sequence: \u must be followed by 4 hex digits but saw: \u123 [at 1:27]
select "bad string escape \u123";
                          ^
==

select 'bad string escape \U12345678';
--
ERROR: Syntax error: Illegal escape sequence: Value of \U12345678 exceeds Unicode limit (0x0010FFFF) [at 1:27]
select 'bad string escape \U12345678';
                          ^
==

# TODO: See if we could mandate a space between string literals and
# their corresponding aliases in the parser.
select ""a
--
QueryStatement [0-10] [select ""a]
  Query [0-10] [select ""a]
    Select [0-10] [select ""a]
      SelectList [7-10] [""a]
        SelectColumn [7-10] [""a]
          StringLiteral [7-9] [""]
            StringLiteralComponent("") [7-9] [""]
          Alias [9-10] [a]
            Identifier(a) [9-10] [a]
--
SELECT
  "" AS a
==

# Zero length strings
select '', "", """""", ''''''
--
QueryStatement [0-29] [select '', "", """""", '''''']
  Query [0-29] [select '', "", """""", '''''']
    Select [0-29] [select '', "", """""", '''''']
      SelectList [7-29] ['', "", """""", '''''']
        SelectColumn [7-9] ['']
          StringLiteral [7-9] ['']
            StringLiteralComponent('') [7-9] ['']
        SelectColumn [11-13] [""]
          StringLiteral [11-13] [""]
            StringLiteralComponent("") [11-13] [""]
        SelectColumn [15-21] [""""""]
          StringLiteral [15-21] [""""""]
            StringLiteralComponent("""""") [15-21] [""""""]
        SelectColumn [23-29] ['''''']
          StringLiteral [23-29] ['''''']
            StringLiteralComponent('''''') [23-29] ['''''']
--
SELECT
  '',
  "",
  """""",
  ''''''
==

select b'abc', B"def", B'"', B"'", B'`', B"`"
--
QueryStatement [0-45] [select b'abc...B'`', B"`"]
  Query [0-45] [select b'abc...B'`', B"`"]
    Select [0-45] [select b'abc...B'`', B"`"]
      SelectList [7-45] [b'abc', B"...B'`', B"`"]
        SelectColumn [7-13] [b'abc']
          BytesLiteral [7-13] [b'abc']
            BytesLiteralComponent(b'abc') [7-13] [b'abc']
        SelectColumn [15-21] [B"def"]
          BytesLiteral [15-21] [B"def"]
            BytesLiteralComponent(B"def") [15-21] [B"def"]
        SelectColumn [23-27] [B'"']
          BytesLiteral [23-27] [B'"']
            BytesLiteralComponent(B'"') [23-27] [B'"']
        SelectColumn [29-33] [B"'"]
          BytesLiteral [29-33] [B"'"]
            BytesLiteralComponent(B"'") [29-33] [B"'"]
        SelectColumn [35-39] [B'`']
          BytesLiteral [35-39] [B'`']
            BytesLiteralComponent(B'`') [35-39] [B'`']
        SelectColumn [41-45] [B"`"]
          BytesLiteral [41-45] [B"`"]
            BytesLiteralComponent(B"`") [41-45] [B"`"]
--
SELECT
  b'abc',
  B"def",
  B'"',
  B"'",
  B'`',
  B"`"
==

select b"""abc""", B'''def''', B"""'''a'''""", b'''"a"''', B'''`''', B"""`"""
--
QueryStatement [0-77] [select b""..., B"""`"""]
  Query [0-77] [select b""..., B"""`"""]
    Select [0-77] [select b""..., B"""`"""]
      SelectList [7-77] [b"""abc"""..., B"""`"""]
        SelectColumn [7-17] [b"""abc"""]
          BytesLiteral [7-17] [b"""abc"""]
            BytesLiteralComponent(b"""abc""") [7-17] [b"""abc"""]
        SelectColumn [19-29] [B'''def''']
          BytesLiteral [19-29] [B'''def''']
            BytesLiteralComponent(B'''def''') [19-29] [B'''def''']
        SelectColumn [31-45] [B"""'''a'''"""]
          BytesLiteral [31-45] [B"""'''a'''"""]
            BytesLiteralComponent(B"""'''a'''""") [31-45] [B"""'''a'''"""]
        SelectColumn [47-57] [b'''"a"''']
          BytesLiteral [47-57] [b'''"a"''']
            BytesLiteralComponent(b'''"a"''') [47-57] [b'''"a"''']
        SelectColumn [59-67] [B'''`''']
          BytesLiteral [59-67] [B'''`''']
            BytesLiteralComponent(B'''`''') [59-67] [B'''`''']
        SelectColumn [69-77] [B"""`"""]
          BytesLiteral [69-77] [B"""`"""]
            BytesLiteralComponent(B"""`""") [69-77] [B"""`"""]
--
SELECT
  b"""abc""",
  B'''def''',
  B"""'''a'''""",
  b'''"a"''',
  B'''`''',
  B"""`"""
==

select b'\x53'   as OneHexByte
     , b'\001'   as OneOctalByte
     , b'\a...'  as a
     , b'\b...'  as b
     , b'\f...'  as f
     , b'\n...'  as n
     , b'\r...'  as r
     , b'\t...'  as t
     , b'\v...'  as v
     , b'\\...' as backslash
     , b'\?...'  as question
     , b'\"...'  as single_double_quote
     , b'\'...'  as single_single_quote
     , b'\`...'  as single_back_tick
     , b"\"..."  as double_double_quote
     , b"\'..."  as double_single_quote
     , b"\`..."  as double_back_tick
--
QueryStatement [0-509] [select b'\...double_back_tick]
  Query [0-509] [select b'\...double_back_tick]
    Select [0-509] [select b'\...double_back_tick]
      SelectList [7-509] [b'\x53'...double_back_tick]
        SelectColumn [7-30] [b'\x53'   as OneHexByte]
          BytesLiteral [7-14] [b'\x53']
            BytesLiteralComponent(b'\x53') [7-14] [b'\x53']
          Alias [17-30] [as OneHexByte]
            Identifier(OneHexByte) [20-30] [OneHexByte]
        SelectColumn [38-63] [b'\001'   as OneOctalByte]
          BytesLiteral [38-45] [b'\001']
            BytesLiteralComponent(b'\001') [38-45] [b'\001']
          Alias [48-63] [as OneOctalByte]
            Identifier(OneOctalByte) [51-63] [OneOctalByte]
        SelectColumn [71-85] [b'\a...'  as a]
          BytesLiteral [71-79] [b'\a...']
            BytesLiteralComponent(b'\a...') [71-79] [b'\a...']
          Alias [81-85] [as a]
            Identifier(a) [84-85] [a]
        SelectColumn [93-107] [b'\b...'  as b]
          BytesLiteral [93-101] [b'\b...']
            BytesLiteralComponent(b'\b...') [93-101] [b'\b...']
          Alias [103-107] [as b]
            Identifier(b) [106-107] [b]
        SelectColumn [115-129] [b'\f...'  as f]
          BytesLiteral [115-123] [b'\f...']
            BytesLiteralComponent(b'\f...') [115-123] [b'\f...']
          Alias [125-129] [as f]
            Identifier(f) [128-129] [f]
        SelectColumn [137-151] [b'\n...'  as n]
          BytesLiteral [137-145] [b'\n...']
            BytesLiteralComponent(b'\n...') [137-145] [b'\n...']
          Alias [147-151] [as n]
            Identifier(n) [150-151] [n]
        SelectColumn [159-173] [b'\r...'  as r]
          BytesLiteral [159-167] [b'\r...']
            BytesLiteralComponent(b'\r...') [159-167] [b'\r...']
          Alias [169-173] [as r]
            Identifier(r) [172-173] [r]
        SelectColumn [181-195] [b'\t...'  as t]
          BytesLiteral [181-189] [b'\t...']
            BytesLiteralComponent(b'\t...') [181-189] [b'\t...']
          Alias [191-195] [as t]
            Identifier(t) [194-195] [t]
        SelectColumn [203-217] [b'\v...'  as v]
          BytesLiteral [203-211] [b'\v...']
            BytesLiteralComponent(b'\v...') [203-211] [b'\v...']
          Alias [213-217] [as v]
            Identifier(v) [216-217] [v]
        SelectColumn [225-246] [b'\\...' as backslash]
          BytesLiteral [225-233] [b'\\...']
            BytesLiteralComponent(b'\\...') [225-233] [b'\\...']
          Alias [234-246] [as backslash]
            Identifier(backslash) [237-246] [backslash]
        SelectColumn [254-275] [b'\?...'  as question]
          BytesLiteral [254-262] [b'\?...']
            BytesLiteralComponent(b'\?...') [254-262] [b'\?...']
          Alias [264-275] [as question]
            Identifier(question) [267-275] [question]
        SelectColumn [283-315] [b'\"...'...single_double_quote]
          BytesLiteral [283-291] [b'\"...']
            BytesLiteralComponent(b'\"...') [283-291] [b'\"...']
          Alias [293-315] [as single_double_quote]
            Identifier(single_double_quote) [296-315] [single_double_quote]
        SelectColumn [323-355] [b'\'...'...single_single_quote]
          BytesLiteral [323-331] [b'\'...']
            BytesLiteralComponent(b'\'...') [323-331] [b'\'...']
          Alias [333-355] [as single_single_quote]
            Identifier(single_single_quote) [336-355] [single_single_quote]
        SelectColumn [363-392] [b'\`...'  as single_back_tick]
          BytesLiteral [363-371] [b'\`...']
            BytesLiteralComponent(b'\`...') [363-371] [b'\`...']
          Alias [373-392] [as single_back_tick]
            Identifier(single_back_tick) [376-392] [single_back_tick]
        SelectColumn [400-432] [b"\"..."...double_double_quote]
          BytesLiteral [400-408] [b"\"..."]
            BytesLiteralComponent(b"\"...") [400-408] [b"\"..."]
          Alias [410-432] [as double_double_quote]
            Identifier(double_double_quote) [413-432] [double_double_quote]
        SelectColumn [440-472] [b"\'..."...double_single_quote]
          BytesLiteral [440-448] [b"\'..."]
            BytesLiteralComponent(b"\'...") [440-448] [b"\'..."]
          Alias [450-472] [as double_single_quote]
            Identifier(double_single_quote) [453-472] [double_single_quote]
        SelectColumn [480-509] [b"\`..."  as double_back_tick]
          BytesLiteral [480-488] [b"\`..."]
            BytesLiteralComponent(b"\`...") [480-488] [b"\`..."]
          Alias [490-509] [as double_back_tick]
            Identifier(double_back_tick) [493-509] [double_back_tick]
--
SELECT
  b'\x53' AS OneHexByte,
  b'\001' AS OneOctalByte,
  b'\a...' AS a,
  b'\b...' AS b,
  b'\f...' AS f,
  b'\n...' AS n,
  b'\r...' AS r,
  b'\t...' AS t,
  b'\v...' AS v,
  b'\\...' AS backslash,
  b'\?...' AS question,
  b'\"...' AS single_double_quote,
  b'\'...' AS single_single_quote,
  b'\`...' AS single_back_tick,
  b"\"..." AS double_double_quote,
  b"\'..." AS double_single_quote,
  b"\`..." AS double_back_tick
==

select b'''\x53'''   as OneHexByte
     , b'''\001'''   as OneOctalByte
     , b'''\a...'''  as a
     , b'''\b...'''  as b
     , b'''\f...'''  as f
     , b'''\n...'''  as n
     , b'''\r...'''  as r
     , b'''\t...'''  as t
     , b'''\v...'''  as v
     , b'''\\...''' as backslash
     , b'''\?...'''  as question
     , b'''\"...'''  as single_double_quote
     , b'''\'...'''  as single_single_quote
     , b'''\`...'''  as single_back_tick
     , b"""\"..."""  as double_double_quote
     , b"""\'..."""  as double_single_quote
     , b"""\`..."""  as double_back_tick
--
QueryStatement [0-577] [select b''...double_back_tick]
  Query [0-577] [select b''...double_back_tick]
    Select [0-577] [select b''...double_back_tick]
      SelectList [7-577] [b'''\x53''...double_back_tick]
        SelectColumn [7-34] [b'''\x53'''   as OneHexByte]
          BytesLiteral [7-18] [b'''\x53''']
            BytesLiteralComponent(b'''\x53''') [7-18] [b'''\x53''']
          Alias [21-34] [as OneHexByte]
            Identifier(OneHexByte) [24-34] [OneHexByte]
        SelectColumn [42-71] [b'''\001'''   as OneOctalByte]
          BytesLiteral [42-53] [b'''\001''']
            BytesLiteralComponent(b'''\001''') [42-53] [b'''\001''']
          Alias [56-71] [as OneOctalByte]
            Identifier(OneOctalByte) [59-71] [OneOctalByte]
        SelectColumn [79-97] [b'''\a...'''  as a]
          BytesLiteral [79-91] [b'''\a...''']
            BytesLiteralComponent(b'''\a...''') [79-91] [b'''\a...''']
          Alias [93-97] [as a]
            Identifier(a) [96-97] [a]
        SelectColumn [105-123] [b'''\b...'''  as b]
          BytesLiteral [105-117] [b'''\b...''']
            BytesLiteralComponent(b'''\b...''') [105-117] [b'''\b...''']
          Alias [119-123] [as b]
            Identifier(b) [122-123] [b]
        SelectColumn [131-149] [b'''\f...'''  as f]
          BytesLiteral [131-143] [b'''\f...''']
            BytesLiteralComponent(b'''\f...''') [131-143] [b'''\f...''']
          Alias [145-149] [as f]
            Identifier(f) [148-149] [f]
        SelectColumn [157-175] [b'''\n...'''  as n]
          BytesLiteral [157-169] [b'''\n...''']
            BytesLiteralComponent(b'''\n...''') [157-169] [b'''\n...''']
          Alias [171-175] [as n]
            Identifier(n) [174-175] [n]
        SelectColumn [183-201] [b'''\r...'''  as r]
          BytesLiteral [183-195] [b'''\r...''']
            BytesLiteralComponent(b'''\r...''') [183-195] [b'''\r...''']
          Alias [197-201] [as r]
            Identifier(r) [200-201] [r]
        SelectColumn [209-227] [b'''\t...'''  as t]
          BytesLiteral [209-221] [b'''\t...''']
            BytesLiteralComponent(b'''\t...''') [209-221] [b'''\t...''']
          Alias [223-227] [as t]
            Identifier(t) [226-227] [t]
        SelectColumn [235-253] [b'''\v...'''  as v]
          BytesLiteral [235-247] [b'''\v...''']
            BytesLiteralComponent(b'''\v...''') [235-247] [b'''\v...''']
          Alias [249-253] [as v]
            Identifier(v) [252-253] [v]
        SelectColumn [261-286] [b'''\\...''' as backslash]
          BytesLiteral [261-273] [b'''\\...''']
            BytesLiteralComponent(b'''\\...''') [261-273] [b'''\\...''']
          Alias [274-286] [as backslash]
            Identifier(backslash) [277-286] [backslash]
        SelectColumn [294-319] [b'''\?...'''  as question]
          BytesLiteral [294-306] [b'''\?...''']
            BytesLiteralComponent(b'''\?...''') [294-306] [b'''\?...''']
          Alias [308-319] [as question]
            Identifier(question) [311-319] [question]
        SelectColumn [327-363] [b'''\"...'...ngle_double_quote]
          BytesLiteral [327-339] [b'''\"...''']
            BytesLiteralComponent(b'''\"...''') [327-339] [b'''\"...''']
          Alias [341-363] [as single_double_quote]
            Identifier(single_double_quote) [344-363] [single_double_quote]
        SelectColumn [371-407] [b'''\'...'...ngle_single_quote]
          BytesLiteral [371-383] [b'''\'...''']
            BytesLiteralComponent(b'''\'...''') [371-383] [b'''\'...''']
          Alias [385-407] [as single_single_quote]
            Identifier(single_single_quote) [388-407] [single_single_quote]
        SelectColumn [415-448] [b'''\`...'...single_back_tick]
          BytesLiteral [415-427] [b'''\`...''']
            BytesLiteralComponent(b'''\`...''') [415-427] [b'''\`...''']
          Alias [429-448] [as single_back_tick]
            Identifier(single_back_tick) [432-448] [single_back_tick]
        SelectColumn [456-492] [b"""\"..."...uble_double_quote]
          BytesLiteral [456-468] [b"""\"..."""]
            BytesLiteralComponent(b"""\"...""") [456-468] [b"""\"..."""]
          Alias [470-492] [as double_double_quote]
            Identifier(double_double_quote) [473-492] [double_double_quote]
        SelectColumn [500-536] [b"""\'..."...uble_single_quote]
          BytesLiteral [500-512] [b"""\'..."""]
            BytesLiteralComponent(b"""\'...""") [500-512] [b"""\'..."""]
          Alias [514-536] [as double_single_quote]
            Identifier(double_single_quote) [517-536] [double_single_quote]
        SelectColumn [544-577] [b"""\`..."...double_back_tick]
          BytesLiteral [544-556] [b"""\`..."""]
            BytesLiteralComponent(b"""\`...""") [544-556] [b"""\`..."""]
          Alias [558-577] [as double_back_tick]
            Identifier(double_back_tick) [561-577] [double_back_tick]
--
SELECT
  b'''\x53''' AS OneHexByte,
  b'''\001''' AS OneOctalByte,
  b'''\a...''' AS a,
  b'''\b...''' AS b,
  b'''\f...''' AS f,
  b'''\n...''' AS n,
  b'''\r...''' AS r,
  b'''\t...''' AS t,
  b'''\v...''' AS v,
  b'''\\...''' AS backslash,
  b'''\?...''' AS question,
  b'''\"...''' AS single_double_quote,
  b'''\'...''' AS single_single_quote,
  b'''\`...''' AS single_back_tick,
  b"""\"...""" AS double_double_quote,
  b"""\'...""" AS double_single_quote,
  b"""\`...""" AS double_back_tick
==

select b'\x5'   as OneHexByteRequiresTwoDigits
--
ERROR: Syntax error: Illegal escape sequence: Hex escape must be followed by 2 hex digits but saw: \x5 [at 1:10]
select b'\x5'   as OneHexByteRequiresTwoDigits
         ^
==

select b'''\x5''' as OneHexByteRequiresTwoDigits
--
ERROR: Syntax error: Illegal escape sequence: Hex escape must be followed by 2 hex digits but saw: \x5 [at 1:12]
select b'''\x5''' as OneHexByteRequiresTwoDigits
           ^
==

SELECT b"\x4"
--
ERROR: Syntax error: Illegal escape sequence: Hex escape must be followed by 2 hex digits but saw: \x4 [at 1:10]
SELECT b"\x4"
         ^
==

SELECT b"\X4"
--
ERROR: Syntax error: Illegal escape sequence: Hex escape must be followed by 2 hex digits but saw: \X4 [at 1:10]
SELECT b"\X4"
         ^
==

select b'\01'   as OneOctalByteRequiresThreeDigits
--
ERROR: Syntax error: Illegal escape sequence: Octal escape must be followed by 3 octal digits but saw: \01 [at 1:10]
select b'\01'   as OneOctalByteRequiresThreeDigits
         ^
==

select b'''\01''' as OneOctalByteRequiresThreeDigits
--
ERROR: Syntax error: Illegal escape sequence: Octal escape must be followed by 3 octal digits but saw: \01 [at 1:12]
select b'''\01''' as OneOctalByteRequiresThreeDigits
           ^
==

# Test octals.
SELECT "\12"
--
ERROR: Syntax error: Illegal escape sequence: Octal escape must be followed by 3 octal digits but saw: \12 [at 1:9]
SELECT "\12"
        ^
==

select b'\u0042';
--
ERROR: Syntax error: Illegal escape sequence: Unicode escape sequence \u cannot be used in bytes literals [at 1:10]
select b'\u0042';
         ^
==

select b'''\u0042'''
--
ERROR: Syntax error: Illegal escape sequence: Unicode escape sequence \u cannot be used in bytes literals [at 1:12]
select b'''\u0042'''
           ^
==

select b'\U00000042';
--
ERROR: Syntax error: Illegal escape sequence: Unicode escape sequence \U cannot be used in bytes literals [at 1:10]
select b'\U00000042';
         ^
==

select b'''\U00000042'''
--
ERROR: Syntax error: Illegal escape sequence: Unicode escape sequence \U cannot be used in bytes literals [at 1:12]
select b'''\U00000042'''
           ^
==

SELECT b"\uE282"
--
ERROR: Syntax error: Illegal escape sequence: Unicode escape sequence \u cannot be used in bytes literals [at 1:10]
SELECT b"\uE282"
         ^
==

select b'...
         ...'
--
ERROR: Syntax error: Unclosed bytes literal [at 1:8]
select b'...
       ^
==

SELECT b"a
c"
--
ERROR: Syntax error: Unclosed bytes literal [at 1:8]
SELECT b"a
       ^
==

select b'''...
           ...'''
--
QueryStatement [0-32] [select b''......''']
  Query [0-32] [select b''......''']
    Select [0-32] [select b''......''']
      SelectList [7-32] [b'''...            ...''']
        SelectColumn [7-32] [b'''...            ...''']
          BytesLiteral [7-32] [b'''...            ...''']
            BytesLiteralComponent(b'''...
           ...''') [7-32] [b'''...            ...''']
--
SELECT
  b'''...
           ...'''
==

# Zero length bytes.
select b'', B"", b'''''', B""""""
--
QueryStatement [0-33] [select b''...', B""""""]
  Query [0-33] [select b''...', B""""""]
    Select [0-33] [select b''...', B""""""]
      SelectList [7-33] [b'', B"", b'''''', B""""""]
        SelectColumn [7-10] [b'']
          BytesLiteral [7-10] [b'']
            BytesLiteralComponent(b'') [7-10] [b'']
        SelectColumn [12-15] [B""]
          BytesLiteral [12-15] [B""]
            BytesLiteralComponent(B"") [12-15] [B""]
        SelectColumn [17-24] [b'''''']
          BytesLiteral [17-24] [b'''''']
            BytesLiteralComponent(b'''''') [17-24] [b'''''']
        SelectColumn [26-33] [B""""""]
          BytesLiteral [26-33] [B""""""]
            BytesLiteralComponent(B"""""") [26-33] [B""""""]
--
SELECT
  b'',
  B"",
  b'''''',
  B""""""
==

select b'''abc\'''', B'''abc\\'''
--
QueryStatement [0-33] [select b''...''abc\\''']
  Query [0-33] [select b''...''abc\\''']
    Select [0-33] [select b''...''abc\\''']
      SelectList [7-33] [b'''abc\'''', B'''abc\\''']
        SelectColumn [7-19] [b'''abc\'''']
          BytesLiteral [7-19] [b'''abc\'''']
            BytesLiteralComponent(b'''abc\'''') [7-19] [b'''abc\'''']
        SelectColumn [21-33] [B'''abc\\''']
          BytesLiteral [21-33] [B'''abc\\''']
            BytesLiteralComponent(B'''abc\\''') [21-33] [B'''abc\\''']
--
SELECT
  b'''abc\'''',
  B'''abc\\'''
==

select b"""line1
line2\
line3"""
--
ERROR: Syntax error: Illegal escaped newline [at 2:6]
line2\
     ^
==

[no_test_get_parse_tokens]
select r"1",
       r"\x53", r"\x123", r'\001', r'a\444A',
       r'a\e', r'\ea',
       r"\U1234", R"\u",
       r'\xc2\\', r'|\xc2|\\',
       r'f\(abc,(.*),def\?'
--
QueryStatement [0-165] [select r"1....*),def\?']
  Query [0-165] [select r"1....*),def\?']
    Select [0-165] [select r"1....*),def\?']
      SelectList [7-165] [r"1",....*),def\?']
        SelectColumn [7-11] [r"1"]
          StringLiteral [7-11] [r"1"]
            StringLiteralComponent(r"1") [7-11] [r"1"]
        SelectColumn [20-27] [r"\x53"]
          StringLiteral [20-27] [r"\x53"]
            StringLiteralComponent(r"\x53") [20-27] [r"\x53"]
        SelectColumn [29-37] [r"\x123"]
          StringLiteral [29-37] [r"\x123"]
            StringLiteralComponent(r"\x123") [29-37] [r"\x123"]
        SelectColumn [39-46] [r'\001']
          StringLiteral [39-46] [r'\001']
            StringLiteralComponent(r'\001') [39-46] [r'\001']
        SelectColumn [48-57] [r'a\444A']
          StringLiteral [48-57] [r'a\444A']
            StringLiteralComponent(r'a\444A') [48-57] [r'a\444A']
        SelectColumn [66-72] [r'a\e']
          StringLiteral [66-72] [r'a\e']
            StringLiteralComponent(r'a\e') [66-72] [r'a\e']
        SelectColumn [74-80] [r'\ea']
          StringLiteral [74-80] [r'\ea']
            StringLiteralComponent(r'\ea') [74-80] [r'\ea']
        SelectColumn [89-98] [r"\U1234"]
          StringLiteral [89-98] [r"\U1234"]
            StringLiteralComponent(r"\U1234") [89-98] [r"\U1234"]
        SelectColumn [100-105] [R"\u"]
          StringLiteral [100-105] [R"\u"]
            StringLiteralComponent(R"\u") [100-105] [R"\u"]
        SelectColumn [114-123] [r'\xc2\\']
          StringLiteral [114-123] [r'\xc2\\']
            StringLiteralComponent(r'\xc2\\') [114-123] [r'\xc2\\']
        SelectColumn [125-136] [r'|\xc2|\\']
          StringLiteral [125-136] [r'|\xc2|\\']
            StringLiteralComponent(r'|\xc2|\\') [125-136] [r'|\xc2|\\']
        SelectColumn [145-165] [r'f\(abc,(.*),def\?']
          StringLiteral [145-165] [r'f\(abc,(.*),def\?']
            StringLiteralComponent(r'f\(abc,(.*),def\?') [145-165] [r'f\(abc,(.*),def\?']
--
SELECT
  r"1",
  r"\x53",
  r"\x123",
  r'\001',
  r'a\444A',
  r'a\e',
  r'\ea',
  r"\U1234",
  R"\u",
  r'\xc2\\',
  r'|\xc2|\\',
  r'f\(abc,(.*),def\?'
==

[no_test_get_parse_tokens]
select rb"1",
       rb"\x53", rb"\x123", rb'\001', rb'a\444A',
       rb'a\e', rb'\ea',
       rb"\U1234", RB"\u",
       rb'\xc2\\', rb'|\xc2|\\',
       rb'f\(abc,(.*),def\?'
--
QueryStatement [0-177] [select rb"....*),def\?']
  Query [0-177] [select rb"....*),def\?']
    Select [0-177] [select rb"....*),def\?']
      SelectList [7-177] [rb"1",....*),def\?']
        SelectColumn [7-12] [rb"1"]
          BytesLiteral [7-12] [rb"1"]
            BytesLiteralComponent(rb"1") [7-12] [rb"1"]
        SelectColumn [21-29] [rb"\x53"]
          BytesLiteral [21-29] [rb"\x53"]
            BytesLiteralComponent(rb"\x53") [21-29] [rb"\x53"]
        SelectColumn [31-40] [rb"\x123"]
          BytesLiteral [31-40] [rb"\x123"]
            BytesLiteralComponent(rb"\x123") [31-40] [rb"\x123"]
        SelectColumn [42-50] [rb'\001']
          BytesLiteral [42-50] [rb'\001']
            BytesLiteralComponent(rb'\001') [42-50] [rb'\001']
        SelectColumn [52-62] [rb'a\444A']
          BytesLiteral [52-62] [rb'a\444A']
            BytesLiteralComponent(rb'a\444A') [52-62] [rb'a\444A']
        SelectColumn [71-78] [rb'a\e']
          BytesLiteral [71-78] [rb'a\e']
            BytesLiteralComponent(rb'a\e') [71-78] [rb'a\e']
        SelectColumn [80-87] [rb'\ea']
          BytesLiteral [80-87] [rb'\ea']
            BytesLiteralComponent(rb'\ea') [80-87] [rb'\ea']
        SelectColumn [96-106] [rb"\U1234"]
          BytesLiteral [96-106] [rb"\U1234"]
            BytesLiteralComponent(rb"\U1234") [96-106] [rb"\U1234"]
        SelectColumn [108-114] [RB"\u"]
          BytesLiteral [108-114] [RB"\u"]
            BytesLiteralComponent(RB"\u") [108-114] [RB"\u"]
        SelectColumn [123-133] [rb'\xc2\\']
          BytesLiteral [123-133] [rb'\xc2\\']
            BytesLiteralComponent(rb'\xc2\\') [123-133] [rb'\xc2\\']
        SelectColumn [135-147] [rb'|\xc2|\\']
          BytesLiteral [135-147] [rb'|\xc2|\\']
            BytesLiteralComponent(rb'|\xc2|\\') [135-147] [rb'|\xc2|\\']
        SelectColumn [156-177] [rb'f\(abc,(.*),def\?']
          BytesLiteral [156-177] [rb'f\(abc,(.*),def\?']
            BytesLiteralComponent(rb'f\(abc,(.*),def\?') [156-177] [rb'f\(abc,(.*),def\?']
--
SELECT
  rb"1",
  rb"\x53",
  rb"\x123",
  rb'\001',
  rb'a\444A',
  rb'a\e',
  rb'\ea',
  rb"\U1234",
  RB"\u",
  rb'\xc2\\',
  rb'|\xc2|\\',
  rb'f\(abc,(.*),def\?'
==

[no_test_get_parse_tokens]
select rb"""1""",
       rb"""\x53""", rb"""\x123""", rb'''\001''', rb'''a\444A''',
       rb'''a\e''', rb'''\ea''',
       rb"""\U1234""", RB"""\u""",
       rb'''\xc2\\''', rb'''|\xc2|\\''',
       rb'''f\(abc,(.*),def\?'''
--
QueryStatement [0-225] [select rb"...),def\?''']
  Query [0-225] [select rb"...),def\?''']
    Select [0-225] [select rb"...),def\?''']
      SelectList [7-225] [rb"""1""",...),def\?''']
        SelectColumn [7-16] [rb"""1"""]
          BytesLiteral [7-16] [rb"""1"""]
            BytesLiteralComponent(rb"""1""") [7-16] [rb"""1"""]
        SelectColumn [25-37] [rb"""\x53"""]
          BytesLiteral [25-37] [rb"""\x53"""]
            BytesLiteralComponent(rb"""\x53""") [25-37] [rb"""\x53"""]
        SelectColumn [39-52] [rb"""\x123"""]
          BytesLiteral [39-52] [rb"""\x123"""]
            BytesLiteralComponent(rb"""\x123""") [39-52] [rb"""\x123"""]
        SelectColumn [54-66] [rb'''\001''']
          BytesLiteral [54-66] [rb'''\001''']
            BytesLiteralComponent(rb'''\001''') [54-66] [rb'''\001''']
        SelectColumn [68-82] [rb'''a\444A''']
          BytesLiteral [68-82] [rb'''a\444A''']
            BytesLiteralComponent(rb'''a\444A''') [68-82] [rb'''a\444A''']
        SelectColumn [91-102] [rb'''a\e''']
          BytesLiteral [91-102] [rb'''a\e''']
            BytesLiteralComponent(rb'''a\e''') [91-102] [rb'''a\e''']
        SelectColumn [104-115] [rb'''\ea''']
          BytesLiteral [104-115] [rb'''\ea''']
            BytesLiteralComponent(rb'''\ea''') [104-115] [rb'''\ea''']
        SelectColumn [124-138] [rb"""\U1234"""]
          BytesLiteral [124-138] [rb"""\U1234"""]
            BytesLiteralComponent(rb"""\U1234""") [124-138] [rb"""\U1234"""]
        SelectColumn [140-150] [RB"""\u"""]
          BytesLiteral [140-150] [RB"""\u"""]
            BytesLiteralComponent(RB"""\u""") [140-150] [RB"""\u"""]
        SelectColumn [159-173] [rb'''\xc2\\''']
          BytesLiteral [159-173] [rb'''\xc2\\''']
            BytesLiteralComponent(rb'''\xc2\\''') [159-173] [rb'''\xc2\\''']
        SelectColumn [175-191] [rb'''|\xc2|\\''']
          BytesLiteral [175-191] [rb'''|\xc2|\\''']
            BytesLiteralComponent(rb'''|\xc2|\\''') [175-191] [rb'''|\xc2|\\''']
        SelectColumn [200-225] [rb'''f\(abc,(.*),def\?''']
          BytesLiteral [200-225] [rb'''f\(abc,(.*),def\?''']
            BytesLiteralComponent(rb'''f\(abc,(.*),def\?''') [200-225] [rb'''f\(abc,(.*),def\?''']
--
SELECT
  rb"""1""",
  rb"""\x53""",
  rb"""\x123""",
  rb'''\001''',
  rb'''a\444A''',
  rb'''a\e''',
  rb'''\ea''',
  rb"""\U1234""",
  RB"""\u""",
  rb'''\xc2\\''',
  rb'''|\xc2|\\''',
  rb'''f\(abc,(.*),def\?'''
==

[no_test_get_parse_tokens]
select br"1",
       br"\x53", br"\x123", br'\001', br'a\444A',
       br'a\e', br'\ea',
       br"\U1234", BR"\u",
       br'\xc2\\', br'|\xc2|\\',
       br'f\(abc,(.*),def\?'
--
QueryStatement [0-177] [select br"....*),def\?']
  Query [0-177] [select br"....*),def\?']
    Select [0-177] [select br"....*),def\?']
      SelectList [7-177] [br"1",....*),def\?']
        SelectColumn [7-12] [br"1"]
          BytesLiteral [7-12] [br"1"]
            BytesLiteralComponent(br"1") [7-12] [br"1"]
        SelectColumn [21-29] [br"\x53"]
          BytesLiteral [21-29] [br"\x53"]
            BytesLiteralComponent(br"\x53") [21-29] [br"\x53"]
        SelectColumn [31-40] [br"\x123"]
          BytesLiteral [31-40] [br"\x123"]
            BytesLiteralComponent(br"\x123") [31-40] [br"\x123"]
        SelectColumn [42-50] [br'\001']
          BytesLiteral [42-50] [br'\001']
            BytesLiteralComponent(br'\001') [42-50] [br'\001']
        SelectColumn [52-62] [br'a\444A']
          BytesLiteral [52-62] [br'a\444A']
            BytesLiteralComponent(br'a\444A') [52-62] [br'a\444A']
        SelectColumn [71-78] [br'a\e']
          BytesLiteral [71-78] [br'a\e']
            BytesLiteralComponent(br'a\e') [71-78] [br'a\e']
        SelectColumn [80-87] [br'\ea']
          BytesLiteral [80-87] [br'\ea']
            BytesLiteralComponent(br'\ea') [80-87] [br'\ea']
        SelectColumn [96-106] [br"\U1234"]
          BytesLiteral [96-106] [br"\U1234"]
            BytesLiteralComponent(br"\U1234") [96-106] [br"\U1234"]
        SelectColumn [108-114] [BR"\u"]
          BytesLiteral [108-114] [BR"\u"]
            BytesLiteralComponent(BR"\u") [108-114] [BR"\u"]
        SelectColumn [123-133] [br'\xc2\\']
          BytesLiteral [123-133] [br'\xc2\\']
            BytesLiteralComponent(br'\xc2\\') [123-133] [br'\xc2\\']
        SelectColumn [135-147] [br'|\xc2|\\']
          BytesLiteral [135-147] [br'|\xc2|\\']
            BytesLiteralComponent(br'|\xc2|\\') [135-147] [br'|\xc2|\\']
        SelectColumn [156-177] [br'f\(abc,(.*),def\?']
          BytesLiteral [156-177] [br'f\(abc,(.*),def\?']
            BytesLiteralComponent(br'f\(abc,(.*),def\?') [156-177] [br'f\(abc,(.*),def\?']
--
SELECT
  br"1",
  br"\x53",
  br"\x123",
  br'\001',
  br'a\444A',
  br'a\e',
  br'\ea',
  br"\U1234",
  BR"\u",
  br'\xc2\\',
  br'|\xc2|\\',
  br'f\(abc,(.*),def\?'
==

[no_test_get_parse_tokens]
select br"""1""",
       br"""\x53""", br"""\x123""", br'''\001''', br'''a\444A''',
       br'''a\e''', br'''\ea''',
       br"""\U1234""", BR"""\u""",
       br'''\xc2\\''', br'''|\xc2|\\''',
       br'''f\(abc,(.*),def\?'''
--
QueryStatement [0-225] [select br"...),def\?''']
  Query [0-225] [select br"...),def\?''']
    Select [0-225] [select br"...),def\?''']
      SelectList [7-225] [br"""1""",...),def\?''']
        SelectColumn [7-16] [br"""1"""]
          BytesLiteral [7-16] [br"""1"""]
            BytesLiteralComponent(br"""1""") [7-16] [br"""1"""]
        SelectColumn [25-37] [br"""\x53"""]
          BytesLiteral [25-37] [br"""\x53"""]
            BytesLiteralComponent(br"""\x53""") [25-37] [br"""\x53"""]
        SelectColumn [39-52] [br"""\x123"""]
          BytesLiteral [39-52] [br"""\x123"""]
            BytesLiteralComponent(br"""\x123""") [39-52] [br"""\x123"""]
        SelectColumn [54-66] [br'''\001''']
          BytesLiteral [54-66] [br'''\001''']
            BytesLiteralComponent(br'''\001''') [54-66] [br'''\001''']
        SelectColumn [68-82] [br'''a\444A''']
          BytesLiteral [68-82] [br'''a\444A''']
            BytesLiteralComponent(br'''a\444A''') [68-82] [br'''a\444A''']
        SelectColumn [91-102] [br'''a\e''']
          BytesLiteral [91-102] [br'''a\e''']
            BytesLiteralComponent(br'''a\e''') [91-102] [br'''a\e''']
        SelectColumn [104-115] [br'''\ea''']
          BytesLiteral [104-115] [br'''\ea''']
            BytesLiteralComponent(br'''\ea''') [104-115] [br'''\ea''']
        SelectColumn [124-138] [br"""\U1234"""]
          BytesLiteral [124-138] [br"""\U1234"""]
            BytesLiteralComponent(br"""\U1234""") [124-138] [br"""\U1234"""]
        SelectColumn [140-150] [BR"""\u"""]
          BytesLiteral [140-150] [BR"""\u"""]
            BytesLiteralComponent(BR"""\u""") [140-150] [BR"""\u"""]
        SelectColumn [159-173] [br'''\xc2\\''']
          BytesLiteral [159-173] [br'''\xc2\\''']
            BytesLiteralComponent(br'''\xc2\\''') [159-173] [br'''\xc2\\''']
        SelectColumn [175-191] [br'''|\xc2|\\''']
          BytesLiteral [175-191] [br'''|\xc2|\\''']
            BytesLiteralComponent(br'''|\xc2|\\''') [175-191] [br'''|\xc2|\\''']
        SelectColumn [200-225] [br'''f\(abc,(.*),def\?''']
          BytesLiteral [200-225] [br'''f\(abc,(.*),def\?''']
            BytesLiteralComponent(br'''f\(abc,(.*),def\?''') [200-225] [br'''f\(abc,(.*),def\?''']
--
SELECT
  br"""1""",
  br"""\x53""",
  br"""\x123""",
  br'''\001''',
  br'''a\444A''',
  br'''a\e''',
  br'''\ea''',
  br"""\U1234""",
  BR"""\u""",
  br'''\xc2\\''',
  br'''|\xc2|\\''',
  br'''f\(abc,(.*),def\?'''
==

select r{{'\'|'\\\'}}
--
ALTERNATION GROUP: '\'
--
ERROR: Syntax error: Unclosed raw string literal [at 1:8]
select r'\'
       ^
--
ALTERNATION GROUP: '\\\'
--
ERROR: Syntax error: Unclosed raw string literal [at 1:8]
select r'\\\'
       ^
==

select r'\\', r'\\\\'
--
QueryStatement [0-21] [select r'\\', r'\\\\']
  Query [0-21] [select r'\\', r'\\\\']
    Select [0-21] [select r'\\', r'\\\\']
      SelectList [7-21] [r'\\', r'\\\\']
        SelectColumn [7-12] [r'\\']
          StringLiteral [7-12] [r'\\']
            StringLiteralComponent(r'\\') [7-12] [r'\\']
        SelectColumn [14-21] [r'\\\\']
          StringLiteral [14-21] [r'\\\\']
            StringLiteralComponent(r'\\\\') [14-21] [r'\\\\']
--
SELECT
  r'\\',
  r'\\\\'
==

select r{{'a'b'|"a"b"|'''a'''b'''|"""a"""b"""}}
--
ALTERNATION GROUP: 'a'b'
--
ERROR: Syntax error: Unclosed bytes literal [at 1:12]
select r'a'b'
           ^
--
ALTERNATION GROUP: "a"b"
--
ERROR: Syntax error: Unclosed bytes literal [at 1:12]
select r"a"b"
           ^
--
ALTERNATION GROUP: '''a'''b'''
--
ERROR: Syntax error: Unclosed triple-quoted bytes literal [at 1:16]
select r'''a'''b'''
               ^
--
ALTERNATION GROUP: """a"""b"""
--
ERROR: Syntax error: Unclosed triple-quoted bytes literal [at 1:16]
select r"""a"""b"""
               ^
==

select r'a\'b', r"a\"b",
       r'''a\'''b''', r'''a'\''b''', r'''a''\'b''',
       r"""a\"""b""", r"""a"\""b""", r"""a""\"b"""
--
QueryStatement [0-127] [select r'a..."a""\"b"""]
  Query [0-127] [select r'a..."a""\"b"""]
    Select [0-127] [select r'a..."a""\"b"""]
      SelectList [7-127] [r'a\'b', r..."a""\"b"""]
        SelectColumn [7-14] [r'a\'b']
          StringLiteral [7-14] [r'a\'b']
            StringLiteralComponent(r'a\'b') [7-14] [r'a\'b']
        SelectColumn [16-23] [r"a\"b"]
          StringLiteral [16-23] [r"a\"b"]
            StringLiteralComponent(r"a\"b") [16-23] [r"a\"b"]
        SelectColumn [32-45] [r'''a\'''b''']
          StringLiteral [32-45] [r'''a\'''b''']
            StringLiteralComponent(r'''a\'''b''') [32-45] [r'''a\'''b''']
        SelectColumn [47-60] [r'''a'\''b''']
          StringLiteral [47-60] [r'''a'\''b''']
            StringLiteralComponent(r'''a'\''b''') [47-60] [r'''a'\''b''']
        SelectColumn [62-75] [r'''a''\'b''']
          StringLiteral [62-75] [r'''a''\'b''']
            StringLiteralComponent(r'''a''\'b''') [62-75] [r'''a''\'b''']
        SelectColumn [84-97] [r"""a\"""b"""]
          StringLiteral [84-97] [r"""a\"""b"""]
            StringLiteralComponent(r"""a\"""b""") [84-97] [r"""a\"""b"""]
        SelectColumn [99-112] [r"""a"\""b"""]
          StringLiteral [99-112] [r"""a"\""b"""]
            StringLiteralComponent(r"""a"\""b""") [99-112] [r"""a"\""b"""]
        SelectColumn [114-127] [r"""a""\"b"""]
          StringLiteral [114-127] [r"""a""\"b"""]
            StringLiteralComponent(r"""a""\"b""") [114-127] [r"""a""\"b"""]
--
SELECT
  r'a\'b',
  r"a\"b",
  r'''a\'''b''',
  r'''a'\''b''',
  r'''a''\'b''',
  r"""a\"""b""",
  r"""a"\""b""",
  r"""a""\"b"""
==

select r'...
         ...'
--
ERROR: Syntax error: Unclosed raw string literal [at 1:8]
select r'...
       ^
==

select rb'...
          ...'
--
ERROR: Syntax error: Unclosed raw bytes literal [at 1:8]
select rb'...
       ^
==

select br'...
          ...'
--
ERROR: Syntax error: Unclosed raw bytes literal [at 1:8]
select br'...
       ^
==

select r'''...
           ...''',
       r'''...\
           ...''',
       br'''...
            ...''',
       br'''...\
            ...''',
       rb'''...
            ...''',
       rb'''...\
            ...'''
--
QueryStatement [0-213] [select r''......''']
  Query [0-213] [select r''......''']
    Select [0-213] [select r''......''']
      SelectList [7-213] [r'''.........''']
        SelectColumn [7-32] [r'''...            ...''']
          StringLiteral [7-32] [r'''...            ...''']
            StringLiteralComponent(r'''...
           ...''') [7-32] [r'''...            ...''']
        SelectColumn [41-67] [r'''...\            ...''']
          StringLiteral [41-67] [r'''...\            ...''']
            StringLiteralComponent(r'''...\
           ...''') [41-67] [r'''...\            ...''']
        SelectColumn [76-103] [br'''...             ...''']
          BytesLiteral [76-103] [br'''...             ...''']
            BytesLiteralComponent(br'''...
            ...''') [76-103] [br'''...             ...''']
        SelectColumn [112-140] [br'''...\             ...''']
          BytesLiteral [112-140] [br'''...\             ...''']
            BytesLiteralComponent(br'''...\
            ...''') [112-140] [br'''...\             ...''']
        SelectColumn [149-176] [rb'''...             ...''']
          BytesLiteral [149-176] [rb'''...             ...''']
            BytesLiteralComponent(rb'''...
            ...''') [149-176] [rb'''...             ...''']
        SelectColumn [185-213] [rb'''...\             ...''']
          BytesLiteral [185-213] [rb'''...\             ...''']
            BytesLiteralComponent(rb'''...\
            ...''') [185-213] [rb'''...\             ...''']
--
SELECT
  r'''...
           ...''',
  r'''...\
           ...''',
  br'''...
            ...''',
  br'''...\
            ...''',
  rb'''...
            ...''',
  rb'''...\
            ...'''
==

# Empty raw strings.
select r'', r"", r'''''', r""""""
--
QueryStatement [0-33] [select r''...', r""""""]
  Query [0-33] [select r''...', r""""""]
    Select [0-33] [select r''...', r""""""]
      SelectList [7-33] [r'', r"", r'''''', r""""""]
        SelectColumn [7-10] [r'']
          StringLiteral [7-10] [r'']
            StringLiteralComponent(r'') [7-10] [r'']
        SelectColumn [12-15] [r""]
          StringLiteral [12-15] [r""]
            StringLiteralComponent(r"") [12-15] [r""]
        SelectColumn [17-24] [r'''''']
          StringLiteral [17-24] [r'''''']
            StringLiteralComponent(r'''''') [17-24] [r'''''']
        SelectColumn [26-33] [r""""""]
          StringLiteral [26-33] [r""""""]
            StringLiteralComponent(r"""""") [26-33] [r""""""]
--
SELECT
  r'',
  r"",
  r'''''',
  r""""""
==

# b/239628302: String literals with ")" reducted correctly
select
  'Sentence with ) in it',
  "Also with ) and in double quotes",
  """with ) and in triple double quotes""",
  '''with ) and in triple single quotes'''
--
QueryStatement [0-158] [select   '...quotes''']
  Query [0-158] [select   '...quotes''']
    Select [0-158] [select   '...quotes''']
      SelectList [9-158] ['Sentence...quotes''']
        SelectColumn [9-32] ['Sentence with ) in it']
          StringLiteral [9-32] ['Sentence with ) in it']
            StringLiteralComponent('Sentence with ) in it') [9-32] ['Sentence with ) in it']
        SelectColumn [36-70] ["Also with...double quotes"]
          StringLiteral [36-70] ["Also with...double quotes"]
            StringLiteralComponent("Also with ) and in double quotes") [36-70] ["Also with...double quotes"]
        SelectColumn [74-114] ["""with )...quotes"""]
          StringLiteral [74-114] ["""with )...quotes"""]
            StringLiteralComponent("""with ) and in triple double quotes""") [74-114] ["""with )...quotes"""]
        SelectColumn [118-158] ['''with )...quotes''']
          StringLiteral [118-158] ['''with )...quotes''']
            StringLiteralComponent('''with ) and in triple single quotes''') [118-158] ['''with )...quotes''']
--
SELECT
  'Sentence with ) in it',
  "Also with ) and in double quotes",
  """with ) and in triple double quotes""",
  '''with ) and in triple single quotes'''
==

# Empty raw bytes.
select rb'', br'', rb"", br"", rb'''''', br'''''', rb"""""", br""""""
--
QueryStatement [0-69] [select rb'..., br""""""]
  Query [0-69] [select rb'..., br""""""]
    Select [0-69] [select rb'..., br""""""]
      SelectList [7-69] [rb'', br''..., br""""""]
        SelectColumn [7-11] [rb'']
          BytesLiteral [7-11] [rb'']
            BytesLiteralComponent(rb'') [7-11] [rb'']
        SelectColumn [13-17] [br'']
          BytesLiteral [13-17] [br'']
            BytesLiteralComponent(br'') [13-17] [br'']
        SelectColumn [19-23] [rb""]
          BytesLiteral [19-23] [rb""]
            BytesLiteralComponent(rb"") [19-23] [rb""]
        SelectColumn [25-29] [br""]
          BytesLiteral [25-29] [br""]
            BytesLiteralComponent(br"") [25-29] [br""]
        SelectColumn [31-39] [rb'''''']
          BytesLiteral [31-39] [rb'''''']
            BytesLiteralComponent(rb'''''') [31-39] [rb'''''']
        SelectColumn [41-49] [br'''''']
          BytesLiteral [41-49] [br'''''']
            BytesLiteralComponent(br'''''') [41-49] [br'''''']
        SelectColumn [51-59] [rb""""""]
          BytesLiteral [51-59] [rb""""""]
            BytesLiteralComponent(rb"""""") [51-59] [rb""""""]
        SelectColumn [61-69] [br""""""]
          BytesLiteral [61-69] [br""""""]
            BytesLiteralComponent(br"""""") [61-69] [br""""""]
--
SELECT
  rb'',
  br'',
  rb"",
  br"",
  rb'''''',
  br'''''',
  rb"""""",
  br""""""
==

# This passes parse but fails GetNextTokens because of integer overflow.
[no_test_get_parse_tokens]
select 0x0, -0x01 a, 0X000000001 as a, 0x0123456789AbCdEf,
       0xffffffffffffffffffffffffffffffffffffffff
--
QueryStatement [0-108] [select 0x0...fffffffffffffffff]
  Query [0-108] [select 0x0...fffffffffffffffff]
    Select [0-108] [select 0x0...fffffffffffffffff]
      SelectList [7-108] [0x0, -0x01...fffffffffffffffff]
        SelectColumn [7-10] [0x0]
          IntLiteral(0x0) [7-10] [0x0]
        SelectColumn [12-19] [-0x01 a]
          UnaryExpression(-) [12-17] [-0x01]
            IntLiteral(0x01) [13-17] [0x01]
          Alias [18-19] [a]
            Identifier(a) [18-19] [a]
        SelectColumn [21-37] [0X000000001 as a]
          IntLiteral(0X000000001) [21-32] [0X000000001]
          Alias [33-37] [as a]
            Identifier(a) [36-37] [a]
        SelectColumn [39-57] [0x0123456789AbCdEf]
          IntLiteral(0x0123456789AbCdEf) [39-57] [0x0123456789AbCdEf]
        SelectColumn [66-108] [0xfffffffffffffff...ffffffffff]
          IntLiteral(0xffffffffffffffffffffffffffffffffffffffff) [66-108] [0xfffffffffffffff...ffffffffff]
--
SELECT
  0x0,
  -0x01 AS a,
  0X000000001 AS a,
  0x0123456789AbCdEf,
  0xffffffffffffffffffffffffffffffffffffffff
==

select 0xg
--
ERROR: Syntax error: Missing whitespace between literal and alias [at 1:9]
select 0xg
        ^
==

select 00x0
--
ERROR: Syntax error: Missing whitespace between literal and alias [at 1:10]
select 00x0
         ^
==

select x0
--
QueryStatement [0-9] [select x0]
  Query [0-9] [select x0]
    Select [0-9] [select x0]
      SelectList [7-9] [x0]
        SelectColumn [7-9] [x0]
          PathExpression [7-9] [x0]
            Identifier(x0) [7-9] [x0]
--
SELECT
  x0
==

select 0x0g
--
ERROR: Syntax error: Missing whitespace between literal and alias [at 1:11]
select 0x0g
          ^
==

select 0x0 0x0
--
ERROR: Syntax error: Expected end of input but got integer literal "0x0" [at 1:12]
select 0x0 0x0
           ^
==

select 0x0 + 0x1
--
QueryStatement [0-16] [select 0x0 + 0x1]
  Query [0-16] [select 0x0 + 0x1]
    Select [0-16] [select 0x0 + 0x1]
      SelectList [7-16] [0x0 + 0x1]
        SelectColumn [7-16] [0x0 + 0x1]
          BinaryExpression(+) [7-16] [0x0 + 0x1]
            IntLiteral(0x0) [7-10] [0x0]
            IntLiteral(0x1) [13-16] [0x1]
--
SELECT
  0x0 + 0x1
==

select 0 x 0
--
ERROR: Syntax error: Expected end of input but got integer literal "0" [at 1:12]
select 0 x 0
           ^
==

select 0x
--
ERROR: Syntax error: Missing whitespace between literal and alias [at 1:9]
select 0x
        ^
==

select 1x1
--
ERROR: Syntax error: Missing whitespace between literal and alias [at 1:9]
select 1x1
        ^
==

select a, sum(b) from foo
group by 0x1
order by 0x2
limit 0x3
offset 0x4
--
QueryStatement [0-72] [select a,...offset 0x4]
  Query [0-72] [select a,...offset 0x4]
    Select [0-38] [select a,...group by 0x1]
      SelectList [7-16] [a, sum(b)]
        SelectColumn [7-8] [a]
          PathExpression [7-8] [a]
            Identifier(a) [7-8] [a]
        SelectColumn [10-16] [sum(b)]
          FunctionCall [10-16] [sum(b)]
            PathExpression [10-13] [sum]
              Identifier(sum) [10-13] [sum]
            PathExpression [14-15] [b]
              Identifier(b) [14-15] [b]
      FromClause [17-25] [from foo]
        TablePathExpression [22-25] [foo]
          PathExpression [22-25] [foo]
            Identifier(foo) [22-25] [foo]
      GroupBy [26-38] [group by 0x1]
        GroupingItem [35-38] [0x1]
          IntLiteral(0x1) [35-38] [0x1]
    OrderBy [39-51] [order by 0x2]
      OrderingExpression(ASC) [48-51] [0x2]
        IntLiteral(0x2) [48-51] [0x2]
    LimitOffset [52-72] [limit 0x3 offset 0x4]
      Limit [52-61] [limit 0x3]
        IntLiteral(0x3) [58-61] [0x3]
      IntLiteral(0x4) [69-72] [0x4]
--
SELECT
  a,
  sum(b)
FROM
  foo
GROUP BY 0x1
ORDER BY 0x2
LIMIT 0x3 OFFSET 0x4
==

# Bad escape sequences in multiline literals get a correct location marker.
SELECT """abc
def\u"""
--
ERROR: Syntax error: Illegal escape sequence: \u must be followed by 4 hex digits but saw: \u [at 2:4]
def\u"""
   ^
==

# Note that some of the literals here do not construct valid NUMERIC values.
# The validation happens in the resolver, though, and therefore all these
# forms are accepted by the parser.
select NUMERIC '1.1',
       NUMERIC '0.123',
       NUMERIC '456.0',
       NUMERIC '123',
       NUMERIC "123",
       NUMERIC '0',
       NUMERIC '-1.1',
       NUMERIC '-0.123',
       NUMERIC '-456.0',
       NUMERIC '-123',
       NUMERIC "-123",
       NUMERIC '0.999999999',
       NUMERIC '99999999999999999999999999999.999999999',
       NUMERIC '-0.999999999',
       NUMERIC '-99999999999999999999999999999.999999999',
       NUMERIC '-0',
       NUMERIC '+5',
       NUMERIC '+5.123',
       NUMERIC '',
       NUMERIC 'abc',
       NUMERIC '99999999999999999999999999999999999999',
       NUMERIC '0.99999999999999999999999999999999999999',
       NUMERIC '+',
       NUMERIC '-'
--
QueryStatement [0-693] [select NUMERIC...NUMERIC '-']
  Query [0-693] [select NUMERIC...NUMERIC '-']
    Select [0-693] [select NUMERIC...NUMERIC '-']
      SelectList [7-693] [NUMERIC '1...NUMERIC '-']
        SelectColumn [7-20] [NUMERIC '1.1']
          NumericLiteral [7-20] [NUMERIC '1.1']
            StringLiteral [15-20] ['1.1']
              StringLiteralComponent('1.1') [15-20] ['1.1']
        SelectColumn [29-44] [NUMERIC '0.123']
          NumericLiteral [29-44] [NUMERIC '0.123']
            StringLiteral [37-44] ['0.123']
              StringLiteralComponent('0.123') [37-44] ['0.123']
        SelectColumn [53-68] [NUMERIC '456.0']
          NumericLiteral [53-68] [NUMERIC '456.0']
            StringLiteral [61-68] ['456.0']
              StringLiteralComponent('456.0') [61-68] ['456.0']
        SelectColumn [77-90] [NUMERIC '123']
          NumericLiteral [77-90] [NUMERIC '123']
            StringLiteral [85-90] ['123']
              StringLiteralComponent('123') [85-90] ['123']
        SelectColumn [99-112] [NUMERIC "123"]
          NumericLiteral [99-112] [NUMERIC "123"]
            StringLiteral [107-112] ["123"]
              StringLiteralComponent("123") [107-112] ["123"]
        SelectColumn [121-132] [NUMERIC '0']
          NumericLiteral [121-132] [NUMERIC '0']
            StringLiteral [129-132] ['0']
              StringLiteralComponent('0') [129-132] ['0']
        SelectColumn [141-155] [NUMERIC '-1.1']
          NumericLiteral [141-155] [NUMERIC '-1.1']
            StringLiteral [149-155] ['-1.1']
              StringLiteralComponent('-1.1') [149-155] ['-1.1']
        SelectColumn [164-180] [NUMERIC '-0.123']
          NumericLiteral [164-180] [NUMERIC '-0.123']
            StringLiteral [172-180] ['-0.123']
              StringLiteralComponent('-0.123') [172-180] ['-0.123']
        SelectColumn [189-205] [NUMERIC '-456.0']
          NumericLiteral [189-205] [NUMERIC '-456.0']
            StringLiteral [197-205] ['-456.0']
              StringLiteralComponent('-456.0') [197-205] ['-456.0']
        SelectColumn [214-228] [NUMERIC '-123']
          NumericLiteral [214-228] [NUMERIC '-123']
            StringLiteral [222-228] ['-123']
              StringLiteralComponent('-123') [222-228] ['-123']
        SelectColumn [237-251] [NUMERIC "-123"]
          NumericLiteral [237-251] [NUMERIC "-123"]
            StringLiteral [245-251] ["-123"]
              StringLiteralComponent("-123") [245-251] ["-123"]
        SelectColumn [260-281] [NUMERIC '0.999999999']
          NumericLiteral [260-281] [NUMERIC '0.999999999']
            StringLiteral [268-281] ['0.999999999']
              StringLiteralComponent('0.999999999') [268-281] ['0.999999999']
        SelectColumn [290-339] [NUMERIC '99999999...999999999']
          NumericLiteral [290-339] [NUMERIC '99999999...999999999']
            StringLiteral [298-339] ['9999999999999999...999999999']
              StringLiteralComponent('99999999999999999999999999999.999999999') [298-339] ['9999999999999999...999999999']
        SelectColumn [348-370] [NUMERIC '-0.999999999']
          NumericLiteral [348-370] [NUMERIC '-0.999999999']
            StringLiteral [356-370] ['-0.999999999']
              StringLiteralComponent('-0.999999999') [356-370] ['-0.999999999']
        SelectColumn [379-429] [NUMERIC '-...999999999']
          NumericLiteral [379-429] [NUMERIC '-...999999999']
            StringLiteral [387-429] ['-999999999999999...999999999']
              StringLiteralComponent('-99999999999999999999999999999.999999999') [387-429] ['-999999999999999...999999999']
        SelectColumn [438-450] [NUMERIC '-0']
          NumericLiteral [438-450] [NUMERIC '-0']
            StringLiteral [446-450] ['-0']
              StringLiteralComponent('-0') [446-450] ['-0']
        SelectColumn [459-471] [NUMERIC '+5']
          NumericLiteral [459-471] [NUMERIC '+5']
            StringLiteral [467-471] ['+5']
              StringLiteralComponent('+5') [467-471] ['+5']
        SelectColumn [480-496] [NUMERIC '+5.123']
          NumericLiteral [480-496] [NUMERIC '+5.123']
            StringLiteral [488-496] ['+5.123']
              StringLiteralComponent('+5.123') [488-496] ['+5.123']
        SelectColumn [505-515] [NUMERIC '']
          NumericLiteral [505-515] [NUMERIC '']
            StringLiteral [513-515] ['']
              StringLiteralComponent('') [513-515] ['']
        SelectColumn [524-537] [NUMERIC 'abc']
          NumericLiteral [524-537] [NUMERIC 'abc']
            StringLiteral [532-537] ['abc']
              StringLiteralComponent('abc') [532-537] ['abc']
        SelectColumn [546-594] [NUMERIC '99999999...999999999']
          NumericLiteral [546-594] [NUMERIC '99999999...999999999']
            StringLiteral [554-594] ['9999999999999999...999999999']
              StringLiteralComponent('99999999999999999999999999999999999999') [554-594] ['9999999999999999...999999999']
        SelectColumn [603-653] [NUMERIC '0...9999999999999999']
          NumericLiteral [603-653] [NUMERIC '0...9999999999999999']
            StringLiteral [611-653] ['0.99999999999999...999999999']
              StringLiteralComponent('0.99999999999999999999999999999999999999') [611-653] ['0.99999999999999...999999999']
        SelectColumn [662-673] [NUMERIC '+']
          NumericLiteral [662-673] [NUMERIC '+']
            StringLiteral [670-673] ['+']
              StringLiteralComponent('+') [670-673] ['+']
        SelectColumn [682-693] [NUMERIC '-']
          NumericLiteral [682-693] [NUMERIC '-']
            StringLiteral [690-693] ['-']
              StringLiteralComponent('-') [690-693] ['-']
--
SELECT
  NUMERIC '1.1',
  NUMERIC '0.123',
  NUMERIC '456.0',
  NUMERIC '123',
  NUMERIC "123",
  NUMERIC '0',
  NUMERIC '-1.1',
  NUMERIC '-0.123',
  NUMERIC '-456.0',
  NUMERIC '-123',
  NUMERIC "-123",
  NUMERIC '0.999999999',
  NUMERIC '99999999999999999999999999999.999999999',
  NUMERIC '-0.999999999',
  NUMERIC '-99999999999999999999999999999.999999999',
  NUMERIC '-0',
  NUMERIC '+5',
  NUMERIC '+5.123',
  NUMERIC '',
  NUMERIC 'abc',
  NUMERIC '99999999999999999999999999999999999999',
  NUMERIC '0.99999999999999999999999999999999999999',
  NUMERIC '+',
  NUMERIC '-'
==

select NUMERIC '100' `NUMERIC`
--
QueryStatement [0-30] [select NUMERIC '100' `NUMERIC`]
  Query [0-30] [select NUMERIC '100' `NUMERIC`]
    Select [0-30] [select NUMERIC '100' `NUMERIC`]
      SelectList [7-30] [NUMERIC '100' `NUMERIC`]
        SelectColumn [7-30] [NUMERIC '100' `NUMERIC`]
          NumericLiteral [7-20] [NUMERIC '100']
            StringLiteral [15-20] ['100']
              StringLiteralComponent('100') [15-20] ['100']
          Alias [21-30] [`NUMERIC`]
            Identifier(NUMERIC) [21-30] [`NUMERIC`]
--
SELECT
  NUMERIC '100' AS NUMERIC
==

select NUMERIC '100' numeric
--
QueryStatement [0-28] [select NUMERIC '100' numeric]
  Query [0-28] [select NUMERIC '100' numeric]
    Select [0-28] [select NUMERIC '100' numeric]
      SelectList [7-28] [NUMERIC '100' numeric]
        SelectColumn [7-28] [NUMERIC '100' numeric]
          NumericLiteral [7-20] [NUMERIC '100']
            StringLiteral [15-20] ['100']
              StringLiteralComponent('100') [15-20] ['100']
          Alias [21-28] [numeric]
            Identifier(numeric) [21-28] [numeric]
--
SELECT
  NUMERIC '100' AS numeric
==

# We do not test the rebuilt query here because the tokenizer will
# strip the backticks and without the backticks NUMERIC gets parsed
# as a keyword and the query succeeds.
[no_test_get_parse_tokens]
select `NUMERIC` '100'
--
ERROR: Syntax error: Expected end of input but got string literal '100' [at 1:18]
select `NUMERIC` '100'
                 ^
==

select NUMERIC '100.1' + NUMERIC '200'
--
QueryStatement [0-38] [select NUMERIC...NUMERIC '200']
  Query [0-38] [select NUMERIC...NUMERIC '200']
    Select [0-38] [select NUMERIC...NUMERIC '200']
      SelectList [7-38] [NUMERIC '100...NUMERIC '200']
        SelectColumn [7-38] [NUMERIC '100...NUMERIC '200']
          BinaryExpression(+) [7-38] [NUMERIC '100...NUMERIC '200']
            NumericLiteral [7-22] [NUMERIC '100.1']
              StringLiteral [15-22] ['100.1']
                StringLiteralComponent('100.1') [15-22] ['100.1']
            NumericLiteral [25-38] [NUMERIC '200']
              StringLiteral [33-38] ['200']
                StringLiteralComponent('200') [33-38] ['200']
--
SELECT
  NUMERIC '100.1' + NUMERIC '200'
==

# This is a test for application of the unary minus operation to a NUMERIC
# literal. A negative literal can be always formed by writing a negative number
# within the quotes, e.g. NUMERIC '-100'.
select -NUMERIC '100'
--
QueryStatement [0-21] [select -NUMERIC '100']
  Query [0-21] [select -NUMERIC '100']
    Select [0-21] [select -NUMERIC '100']
      SelectList [7-21] [-NUMERIC '100']
        SelectColumn [7-21] [-NUMERIC '100']
          UnaryExpression(-) [7-21] [-NUMERIC '100']
            NumericLiteral [8-21] [NUMERIC '100']
              StringLiteral [16-21] ['100']
                StringLiteralComponent('100') [16-21] ['100']
--
SELECT
  -NUMERIC '100'
==

# Note that some of the literals here do not construct valid BIGNUMERIC values.
# The validation happens in the resolver, though, and therefore all these
# forms are accepted by the parser.
select BIGNUMERIC '1.1',
       BIGNUMERIC '0.123',
       BIGNUMERIC '456.0',
       BIGNUMERIC '123',
       BIGNUMERIC "123",
       BIGNUMERIC '0',
       BIGNUMERIC '-1.1',
       BIGNUMERIC '-0.123',
       BIGNUMERIC '-456.0',
       BIGNUMERIC '-123',
       BIGNUMERIC "-123",
       BIGNUMERIC '0.99999999999999999999999999999999999999',
       BIGNUMERIC '578960446186580977117854925043439539266.34992332820282019728792003956564819967',
       BIGNUMERIC '-0.99999999999999999999999999999999999999',
       BIGNUMERIC '-578960446186580977117854925043439539266.34992332820282019728792003956564819968',
       BIGNUMERIC '-0',
       BIGNUMERIC '+5',
       BIGNUMERIC '+5.123',
       BIGNUMERIC '',
       BIGNUMERIC 'abc',
       BIGNUMERIC '99999999999999999999999999999999999999999999999999999999999',
       BIGNUMERIC '0.999999999999999999999999999999999999999999999999999999999',
       BIGNUMERIC '+',
       BIGNUMERIC '-'
--
QueryStatement [0-941] [select BIGNUMERIC...UMERIC '-']
  Query [0-941] [select BIGNUMERIC...UMERIC '-']
    Select [0-941] [select BIGNUMERIC...UMERIC '-']
      SelectList [7-941] [BIGNUMERIC...BIGNUMERIC '-']
        SelectColumn [7-23] [BIGNUMERIC '1.1']
          BigNumericLiteral [7-23] [BIGNUMERIC '1.1']
            StringLiteral [18-23] ['1.1']
              StringLiteralComponent('1.1') [18-23] ['1.1']
        SelectColumn [32-50] [BIGNUMERIC '0.123']
          BigNumericLiteral [32-50] [BIGNUMERIC '0.123']
            StringLiteral [43-50] ['0.123']
              StringLiteralComponent('0.123') [43-50] ['0.123']
        SelectColumn [59-77] [BIGNUMERIC '456.0']
          BigNumericLiteral [59-77] [BIGNUMERIC '456.0']
            StringLiteral [70-77] ['456.0']
              StringLiteralComponent('456.0') [70-77] ['456.0']
        SelectColumn [86-102] [BIGNUMERIC '123']
          BigNumericLiteral [86-102] [BIGNUMERIC '123']
            StringLiteral [97-102] ['123']
              StringLiteralComponent('123') [97-102] ['123']
        SelectColumn [111-127] [BIGNUMERIC "123"]
          BigNumericLiteral [111-127] [BIGNUMERIC "123"]
            StringLiteral [122-127] ["123"]
              StringLiteralComponent("123") [122-127] ["123"]
        SelectColumn [136-150] [BIGNUMERIC '0']
          BigNumericLiteral [136-150] [BIGNUMERIC '0']
            StringLiteral [147-150] ['0']
              StringLiteralComponent('0') [147-150] ['0']
        SelectColumn [159-176] [BIGNUMERIC '-1.1']
          BigNumericLiteral [159-176] [BIGNUMERIC '-1.1']
            StringLiteral [170-176] ['-1.1']
              StringLiteralComponent('-1.1') [170-176] ['-1.1']
        SelectColumn [185-204] [BIGNUMERIC '-0.123']
          BigNumericLiteral [185-204] [BIGNUMERIC '-0.123']
            StringLiteral [196-204] ['-0.123']
              StringLiteralComponent('-0.123') [196-204] ['-0.123']
        SelectColumn [213-232] [BIGNUMERIC '-456.0']
          BigNumericLiteral [213-232] [BIGNUMERIC '-456.0']
            StringLiteral [224-232] ['-456.0']
              StringLiteralComponent('-456.0') [224-232] ['-456.0']
        SelectColumn [241-258] [BIGNUMERIC '-123']
          BigNumericLiteral [241-258] [BIGNUMERIC '-123']
            StringLiteral [252-258] ['-123']
              StringLiteralComponent('-123') [252-258] ['-123']
        SelectColumn [267-284] [BIGNUMERIC "-123"]
          BigNumericLiteral [267-284] [BIGNUMERIC "-123"]
            StringLiteral [278-284] ["-123"]
              StringLiteralComponent("-123") [278-284] ["-123"]
        SelectColumn [293-346] [BIGNUMERIC...9999999999999999']
          BigNumericLiteral [293-346] [BIGNUMERIC...9999999999999999']
            StringLiteral [304-346] ['0.99999999999999...999999999']
              StringLiteralComponent('0.99999999999999999999999999999999999999') [304-346] ['0.99999999999999...999999999']
        SelectColumn [355-446] [BIGNUMERIC...2003956564819967']
          BigNumericLiteral [355-446] [BIGNUMERIC...2003956564819967']
            StringLiteral [366-446] ['5789604461865809...564819967']
              StringLiteralComponent('578960446186580977117854925043439539266.34992332820282019728792003956564819967') [366-446] ['5789604461865809...564819967']
        SelectColumn [455-509] [BIGNUMERIC...9999999999999999']
          BigNumericLiteral [455-509] [BIGNUMERIC...9999999999999999']
            StringLiteral [466-509] ['-0.9999999999999...999999999']
              StringLiteralComponent('-0.99999999999999999999999999999999999999') [466-509] ['-0.9999999999999...999999999']
        SelectColumn [518-610] [BIGNUMERIC...2003956564819968']
          BigNumericLiteral [518-610] [BIGNUMERIC...2003956564819968']
            StringLiteral [529-610] ['-578960446186580...564819968']
              StringLiteralComponent('-578960446186580977117854925043439539266.34992332820282019728792003956564819968') [529-610] ['-578960446186580...564819968']
        SelectColumn [619-634] [BIGNUMERIC '-0']
          BigNumericLiteral [619-634] [BIGNUMERIC '-0']
            StringLiteral [630-634] ['-0']
              StringLiteralComponent('-0') [630-634] ['-0']
        SelectColumn [643-658] [BIGNUMERIC '+5']
          BigNumericLiteral [643-658] [BIGNUMERIC '+5']
            StringLiteral [654-658] ['+5']
              StringLiteralComponent('+5') [654-658] ['+5']
        SelectColumn [667-686] [BIGNUMERIC '+5.123']
          BigNumericLiteral [667-686] [BIGNUMERIC '+5.123']
            StringLiteral [678-686] ['+5.123']
              StringLiteralComponent('+5.123') [678-686] ['+5.123']
        SelectColumn [695-708] [BIGNUMERIC '']
          BigNumericLiteral [695-708] [BIGNUMERIC '']
            StringLiteral [706-708] ['']
              StringLiteralComponent('') [706-708] ['']
        SelectColumn [717-733] [BIGNUMERIC 'abc']
          BigNumericLiteral [717-733] [BIGNUMERIC 'abc']
            StringLiteral [728-733] ['abc']
              StringLiteralComponent('abc') [728-733] ['abc']
        SelectColumn [742-814] [BIGNUMERIC...9999999999999999']
          BigNumericLiteral [742-814] [BIGNUMERIC...9999999999999999']
            StringLiteral [753-814] ['9999999999999999...999999999']
              StringLiteralComponent('99999999999999999999999999999999999999999999999999999999999') [753-814] ['9999999999999999...999999999']
        SelectColumn [823-895] [BIGNUMERIC...9999999999999999']
          BigNumericLiteral [823-895] [BIGNUMERIC...9999999999999999']
            StringLiteral [834-895] ['0.99999999999999...999999999']
              StringLiteralComponent('0.999999999999999999999999999999999999999999999999999999999') [834-895] ['0.99999999999999...999999999']
        SelectColumn [904-918] [BIGNUMERIC '+']
          BigNumericLiteral [904-918] [BIGNUMERIC '+']
            StringLiteral [915-918] ['+']
              StringLiteralComponent('+') [915-918] ['+']
        SelectColumn [927-941] [BIGNUMERIC '-']
          BigNumericLiteral [927-941] [BIGNUMERIC '-']
            StringLiteral [938-941] ['-']
              StringLiteralComponent('-') [938-941] ['-']
--
SELECT
  BIGNUMERIC '1.1',
  BIGNUMERIC '0.123',
  BIGNUMERIC '456.0',
  BIGNUMERIC '123',
  BIGNUMERIC "123",
  BIGNUMERIC '0',
  BIGNUMERIC '-1.1',
  BIGNUMERIC '-0.123',
  BIGNUMERIC '-456.0',
  BIGNUMERIC '-123',
  BIGNUMERIC "-123",
  BIGNUMERIC '0.99999999999999999999999999999999999999',
  BIGNUMERIC '578960446186580977117854925043439539266.34992332820282019728792003956564819967',
  BIGNUMERIC '-0.99999999999999999999999999999999999999',
  BIGNUMERIC '-578960446186580977117854925043439539266.34992332820282019728792003956564819968',
  BIGNUMERIC '-0',
  BIGNUMERIC '+5',
  BIGNUMERIC '+5.123',
  BIGNUMERIC '',
  BIGNUMERIC 'abc',
  BIGNUMERIC '99999999999999999999999999999999999999999999999999999999999',
  BIGNUMERIC '0.999999999999999999999999999999999999999999999999999999999',
  BIGNUMERIC '+',
  BIGNUMERIC '-'
==

select BIGNUMERIC '100' `BIGNUMERIC`
--
QueryStatement [0-36] [select BIGNUMERIC...IGNUMERIC`]
  Query [0-36] [select BIGNUMERIC...IGNUMERIC`]
    Select [0-36] [select BIGNUMERIC...IGNUMERIC`]
      SelectList [7-36] [BIGNUMERIC '100' `BIGNUMERIC`]
        SelectColumn [7-36] [BIGNUMERIC '100' `BIGNUMERIC`]
          BigNumericLiteral [7-23] [BIGNUMERIC '100']
            StringLiteral [18-23] ['100']
              StringLiteralComponent('100') [18-23] ['100']
          Alias [24-36] [`BIGNUMERIC`]
            Identifier(BIGNUMERIC) [24-36] [`BIGNUMERIC`]
--
SELECT
  BIGNUMERIC '100' AS BIGNUMERIC
==

select BIGNUMERIC '100' numeric
--
QueryStatement [0-31] [select BIGNUMERIC...0' numeric]
  Query [0-31] [select BIGNUMERIC...0' numeric]
    Select [0-31] [select BIGNUMERIC...0' numeric]
      SelectList [7-31] [BIGNUMERIC '100' numeric]
        SelectColumn [7-31] [BIGNUMERIC '100' numeric]
          BigNumericLiteral [7-23] [BIGNUMERIC '100']
            StringLiteral [18-23] ['100']
              StringLiteralComponent('100') [18-23] ['100']
          Alias [24-31] [numeric]
            Identifier(numeric) [24-31] [numeric]
--
SELECT
  BIGNUMERIC '100' AS numeric
==

# We do not test the rebuilt query here because the tokenizer will
# strip the backticks and without the backticks BIGNUMERIC gets parsed
# as a keyword and the query succeeds.
[no_test_get_parse_tokens]
select `BIGNUMERIC` '100'
--
ERROR: Syntax error: Expected end of input but got string literal '100' [at 1:21]
select `BIGNUMERIC` '100'
                    ^
==

select BIGNUMERIC '100.1' + BIGNUMERIC '200'
--
QueryStatement [0-44] [select BIGNUMERIC...ERIC '200']
  Query [0-44] [select BIGNUMERIC...ERIC '200']
    Select [0-44] [select BIGNUMERIC...ERIC '200']
      SelectList [7-44] [BIGNUMERIC...BIGNUMERIC '200']
        SelectColumn [7-44] [BIGNUMERIC...BIGNUMERIC '200']
          BinaryExpression(+) [7-44] [BIGNUMERIC...BIGNUMERIC '200']
            BigNumericLiteral [7-25] [BIGNUMERIC '100.1']
              StringLiteral [18-25] ['100.1']
                StringLiteralComponent('100.1') [18-25] ['100.1']
            BigNumericLiteral [28-44] [BIGNUMERIC '200']
              StringLiteral [39-44] ['200']
                StringLiteralComponent('200') [39-44] ['200']
--
SELECT
  BIGNUMERIC '100.1' + BIGNUMERIC '200'
==

# This is a test for application of the unary minus operation to a BIGNUMERIC
# literal. A negative literal can be always formed by writing a negative number
# within the quotes, e.g. BIGNUMERIC '-100'.
select -BIGNUMERIC '100'
--
QueryStatement [0-24] [select -BIGNUMERIC '100']
  Query [0-24] [select -BIGNUMERIC '100']
    Select [0-24] [select -BIGNUMERIC '100']
      SelectList [7-24] [-BIGNUMERIC '100']
        SelectColumn [7-24] [-BIGNUMERIC '100']
          UnaryExpression(-) [7-24] [-BIGNUMERIC '100']
            BigNumericLiteral [8-24] [BIGNUMERIC '100']
              StringLiteral [19-24] ['100']
                StringLiteralComponent('100') [19-24] ['100']
--
SELECT
  -BIGNUMERIC '100'
==

select JSON '1'
--
QueryStatement [0-15] [select JSON '1']
  Query [0-15] [select JSON '1']
    Select [0-15] [select JSON '1']
      SelectList [7-15] [JSON '1']
        SelectColumn [7-15] [JSON '1']
          JSONLiteral [7-15] [JSON '1']
            StringLiteral [12-15] ['1']
              StringLiteralComponent('1') [12-15] ['1']
--
SELECT
  JSON '1'
==

select JSON "true",
       JSON '\'value\'',
       JSON "t",
       JSON 'true',
       JSON "'v'",
       JSON 'null',
       JSON '[1, 2, 3]',
       JSON '{ "k1": "v1", "k2": [true, false]}',
       JSON '{\n"k" : "v"\n}',
       JSON r'{"k\n1" : "v"}',
       JSON '',
       JSON '0.123',
       JSON '456.0',
       JSON '123',
       JSON "123",
       JSON '-1.1',
       JSON '-123',
       JSON "-123"
--
QueryStatement [0-412] [select JSON...JSON "-123"]
  Query [0-412] [select JSON...JSON "-123"]
    Select [0-412] [select JSON...JSON "-123"]
      SelectList [7-412] [JSON "true...JSON "-123"]
        SelectColumn [7-18] [JSON "true"]
          JSONLiteral [7-18] [JSON "true"]
            StringLiteral [12-18] ["true"]
              StringLiteralComponent("true") [12-18] ["true"]
        SelectColumn [27-43] [JSON '\'value\'']
          JSONLiteral [27-43] [JSON '\'value\'']
            StringLiteral [32-43] ['\'value\'']
              StringLiteralComponent('\'value\'') [32-43] ['\'value\'']
        SelectColumn [52-60] [JSON "t"]
          JSONLiteral [52-60] [JSON "t"]
            StringLiteral [57-60] ["t"]
              StringLiteralComponent("t") [57-60] ["t"]
        SelectColumn [69-80] [JSON 'true']
          JSONLiteral [69-80] [JSON 'true']
            StringLiteral [74-80] ['true']
              StringLiteralComponent('true') [74-80] ['true']
        SelectColumn [89-99] [JSON "'v'"]
          JSONLiteral [89-99] [JSON "'v'"]
            StringLiteral [94-99] ["'v'"]
              StringLiteralComponent("'v'") [94-99] ["'v'"]
        SelectColumn [108-119] [JSON 'null']
          JSONLiteral [108-119] [JSON 'null']
            StringLiteral [113-119] ['null']
              StringLiteralComponent('null') [113-119] ['null']
        SelectColumn [128-144] [JSON '[1, 2, 3]']
          JSONLiteral [128-144] [JSON '[1, 2, 3]']
            StringLiteral [133-144] ['[1, 2, 3]']
              StringLiteralComponent('[1, 2, 3]') [133-144] ['[1, 2, 3]']
        SelectColumn [153-194] [JSON '{ "k1..., false]}']
          JSONLiteral [153-194] [JSON '{ "k1..., false]}']
            StringLiteral [158-194] ['{ "k1": "..., false]}']
              StringLiteralComponent('{ "k1": "v1", "k2": [true, false]}') [158-194] ['{ "k1": "..., false]}']
        SelectColumn [203-225] [JSON '{\n"k" : "v"\n}']
          JSONLiteral [203-225] [JSON '{\n"k" : "v"\n}']
            StringLiteral [208-225] ['{\n"k" : "v"\n}']
              StringLiteralComponent('{\n"k" : "v"\n}') [208-225] ['{\n"k" : "v"\n}']
        SelectColumn [234-256] [JSON r'{"k\n1" : "v"}']
          JSONLiteral [234-256] [JSON r'{"k\n1" : "v"}']
            StringLiteral [239-256] [r'{"k\n1" : "v"}']
              StringLiteralComponent(r'{"k\n1" : "v"}') [239-256] [r'{"k\n1" : "v"}']
        SelectColumn [265-272] [JSON '']
          JSONLiteral [265-272] [JSON '']
            StringLiteral [270-272] ['']
              StringLiteralComponent('') [270-272] ['']
        SelectColumn [281-293] [JSON '0.123']
          JSONLiteral [281-293] [JSON '0.123']
            StringLiteral [286-293] ['0.123']
              StringLiteralComponent('0.123') [286-293] ['0.123']
        SelectColumn [302-314] [JSON '456.0']
          JSONLiteral [302-314] [JSON '456.0']
            StringLiteral [307-314] ['456.0']
              StringLiteralComponent('456.0') [307-314] ['456.0']
        SelectColumn [323-333] [JSON '123']
          JSONLiteral [323-333] [JSON '123']
            StringLiteral [328-333] ['123']
              StringLiteralComponent('123') [328-333] ['123']
        SelectColumn [342-352] [JSON "123"]
          JSONLiteral [342-352] [JSON "123"]
            StringLiteral [347-352] ["123"]
              StringLiteralComponent("123") [347-352] ["123"]
        SelectColumn [361-372] [JSON '-1.1']
          JSONLiteral [361-372] [JSON '-1.1']
            StringLiteral [366-372] ['-1.1']
              StringLiteralComponent('-1.1') [366-372] ['-1.1']
        SelectColumn [381-392] [JSON '-123']
          JSONLiteral [381-392] [JSON '-123']
            StringLiteral [386-392] ['-123']
              StringLiteralComponent('-123') [386-392] ['-123']
        SelectColumn [401-412] [JSON "-123"]
          JSONLiteral [401-412] [JSON "-123"]
            StringLiteral [406-412] ["-123"]
              StringLiteralComponent("-123") [406-412] ["-123"]
--
SELECT
  JSON "true",
  JSON '\'value\'',
  JSON "t",
  JSON 'true',
  JSON "'v'",
  JSON 'null',
  JSON '[1, 2, 3]',
  JSON '{ "k1": "v1", "k2": [true, false]}',
  JSON '{\n"k" : "v"\n}',
  JSON r'{"k\n1" : "v"}',
  JSON '',
  JSON '0.123',
  JSON '456.0',
  JSON '123',
  JSON "123",
  JSON '-1.1',
  JSON '-123',
  JSON "-123"
==

select JSON '100' json
--
QueryStatement [0-22] [select JSON '100' json]
  Query [0-22] [select JSON '100' json]
    Select [0-22] [select JSON '100' json]
      SelectList [7-22] [JSON '100' json]
        SelectColumn [7-22] [JSON '100' json]
          JSONLiteral [7-17] [JSON '100']
            StringLiteral [12-17] ['100']
              StringLiteralComponent('100') [12-17] ['100']
          Alias [18-22] [json]
            Identifier(json) [18-22] [json]
--
SELECT
  JSON '100' AS json

==

select DECIMAL '1.1',
       DECIMAL '0.123',
       DECIMAL '456.0',
       DECIMAL '123',
       DECIMAL "123",
       DECIMAL '0',
       DECIMAL '-1.1',
       DECIMAL '-0.123',
       DECIMAL '-456.0',
       DECIMAL '-123',
       DECIMAL "-123",
       DECIMAL '0.999999999',
       DECIMAL '99999999999999999999999999999.999999999',
       DECIMAL '-0.999999999',
       DECIMAL '-99999999999999999999999999999.999999999',
       DECIMAL '-0',
       DECIMAL '+5',
       DECIMAL '+5.123',
       DECIMAL '',
       DECIMAL 'abc',
       DECIMAL '99999999999999999999999999999999999999',
       DECIMAL '0.99999999999999999999999999999999999999',
       DECIMAL '+',
       DECIMAL '-'
--
QueryStatement [0-693] [select DECIMAL...DECIMAL '-']
  Query [0-693] [select DECIMAL...DECIMAL '-']
    Select [0-693] [select DECIMAL...DECIMAL '-']
      SelectList [7-693] [DECIMAL '1...DECIMAL '-']
        SelectColumn [7-20] [DECIMAL '1.1']
          NumericLiteral [7-20] [DECIMAL '1.1']
            StringLiteral [15-20] ['1.1']
              StringLiteralComponent('1.1') [15-20] ['1.1']
        SelectColumn [29-44] [DECIMAL '0.123']
          NumericLiteral [29-44] [DECIMAL '0.123']
            StringLiteral [37-44] ['0.123']
              StringLiteralComponent('0.123') [37-44] ['0.123']
        SelectColumn [53-68] [DECIMAL '456.0']
          NumericLiteral [53-68] [DECIMAL '456.0']
            StringLiteral [61-68] ['456.0']
              StringLiteralComponent('456.0') [61-68] ['456.0']
        SelectColumn [77-90] [DECIMAL '123']
          NumericLiteral [77-90] [DECIMAL '123']
            StringLiteral [85-90] ['123']
              StringLiteralComponent('123') [85-90] ['123']
        SelectColumn [99-112] [DECIMAL "123"]
          NumericLiteral [99-112] [DECIMAL "123"]
            StringLiteral [107-112] ["123"]
              StringLiteralComponent("123") [107-112] ["123"]
        SelectColumn [121-132] [DECIMAL '0']
          NumericLiteral [121-132] [DECIMAL '0']
            StringLiteral [129-132] ['0']
              StringLiteralComponent('0') [129-132] ['0']
        SelectColumn [141-155] [DECIMAL '-1.1']
          NumericLiteral [141-155] [DECIMAL '-1.1']
            StringLiteral [149-155] ['-1.1']
              StringLiteralComponent('-1.1') [149-155] ['-1.1']
        SelectColumn [164-180] [DECIMAL '-0.123']
          NumericLiteral [164-180] [DECIMAL '-0.123']
            StringLiteral [172-180] ['-0.123']
              StringLiteralComponent('-0.123') [172-180] ['-0.123']
        SelectColumn [189-205] [DECIMAL '-456.0']
          NumericLiteral [189-205] [DECIMAL '-456.0']
            StringLiteral [197-205] ['-456.0']
              StringLiteralComponent('-456.0') [197-205] ['-456.0']
        SelectColumn [214-228] [DECIMAL '-123']
          NumericLiteral [214-228] [DECIMAL '-123']
            StringLiteral [222-228] ['-123']
              StringLiteralComponent('-123') [222-228] ['-123']
        SelectColumn [237-251] [DECIMAL "-123"]
          NumericLiteral [237-251] [DECIMAL "-123"]
            StringLiteral [245-251] ["-123"]
              StringLiteralComponent("-123") [245-251] ["-123"]
        SelectColumn [260-281] [DECIMAL '0.999999999']
          NumericLiteral [260-281] [DECIMAL '0.999999999']
            StringLiteral [268-281] ['0.999999999']
              StringLiteralComponent('0.999999999') [268-281] ['0.999999999']
        SelectColumn [290-339] [DECIMAL '99999999...999999999']
          NumericLiteral [290-339] [DECIMAL '99999999...999999999']
            StringLiteral [298-339] ['9999999999999999...999999999']
              StringLiteralComponent('99999999999999999999999999999.999999999') [298-339] ['9999999999999999...999999999']
        SelectColumn [348-370] [DECIMAL '-0.999999999']
          NumericLiteral [348-370] [DECIMAL '-0.999999999']
            StringLiteral [356-370] ['-0.999999999']
              StringLiteralComponent('-0.999999999') [356-370] ['-0.999999999']
        SelectColumn [379-429] [DECIMAL '-...999999999']
          NumericLiteral [379-429] [DECIMAL '-...999999999']
            StringLiteral [387-429] ['-999999999999999...999999999']
              StringLiteralComponent('-99999999999999999999999999999.999999999') [387-429] ['-999999999999999...999999999']
        SelectColumn [438-450] [DECIMAL '-0']
          NumericLiteral [438-450] [DECIMAL '-0']
            StringLiteral [446-450] ['-0']
              StringLiteralComponent('-0') [446-450] ['-0']
        SelectColumn [459-471] [DECIMAL '+5']
          NumericLiteral [459-471] [DECIMAL '+5']
            StringLiteral [467-471] ['+5']
              StringLiteralComponent('+5') [467-471] ['+5']
        SelectColumn [480-496] [DECIMAL '+5.123']
          NumericLiteral [480-496] [DECIMAL '+5.123']
            StringLiteral [488-496] ['+5.123']
              StringLiteralComponent('+5.123') [488-496] ['+5.123']
        SelectColumn [505-515] [DECIMAL '']
          NumericLiteral [505-515] [DECIMAL '']
            StringLiteral [513-515] ['']
              StringLiteralComponent('') [513-515] ['']
        SelectColumn [524-537] [DECIMAL 'abc']
          NumericLiteral [524-537] [DECIMAL 'abc']
            StringLiteral [532-537] ['abc']
              StringLiteralComponent('abc') [532-537] ['abc']
        SelectColumn [546-594] [DECIMAL '99999999...999999999']
          NumericLiteral [546-594] [DECIMAL '99999999...999999999']
            StringLiteral [554-594] ['9999999999999999...999999999']
              StringLiteralComponent('99999999999999999999999999999999999999') [554-594] ['9999999999999999...999999999']
        SelectColumn [603-653] [DECIMAL '0...9999999999999999']
          NumericLiteral [603-653] [DECIMAL '0...9999999999999999']
            StringLiteral [611-653] ['0.99999999999999...999999999']
              StringLiteralComponent('0.99999999999999999999999999999999999999') [611-653] ['0.99999999999999...999999999']
        SelectColumn [662-673] [DECIMAL '+']
          NumericLiteral [662-673] [DECIMAL '+']
            StringLiteral [670-673] ['+']
              StringLiteralComponent('+') [670-673] ['+']
        SelectColumn [682-693] [DECIMAL '-']
          NumericLiteral [682-693] [DECIMAL '-']
            StringLiteral [690-693] ['-']
              StringLiteralComponent('-') [690-693] ['-']
--
SELECT
  NUMERIC '1.1',
  NUMERIC '0.123',
  NUMERIC '456.0',
  NUMERIC '123',
  NUMERIC "123",
  NUMERIC '0',
  NUMERIC '-1.1',
  NUMERIC '-0.123',
  NUMERIC '-456.0',
  NUMERIC '-123',
  NUMERIC "-123",
  NUMERIC '0.999999999',
  NUMERIC '99999999999999999999999999999.999999999',
  NUMERIC '-0.999999999',
  NUMERIC '-99999999999999999999999999999.999999999',
  NUMERIC '-0',
  NUMERIC '+5',
  NUMERIC '+5.123',
  NUMERIC '',
  NUMERIC 'abc',
  NUMERIC '99999999999999999999999999999999999999',
  NUMERIC '0.99999999999999999999999999999999999999',
  NUMERIC '+',
  NUMERIC '-'

==

select BIGDECIMAL '1.1',
       BIGDECIMAL '0.123',
       BIGDECIMAL '456.0',
       BIGDECIMAL '123',
       BIGDECIMAL "123",
       BIGDECIMAL '0',
       BIGDECIMAL '-1.1',
       BIGDECIMAL '-0.123',
       BIGDECIMAL '-456.0',
       BIGDECIMAL '-123',
       BIGDECIMAL "-123",
       BIGDECIMAL '0.99999999999999999999999999999999999999',
       BIGDECIMAL '578960446186580977117854925043439539266.34992332820282019728792003956564819967',
       BIGDECIMAL '-0.99999999999999999999999999999999999999',
       BIGDECIMAL '-578960446186580977117854925043439539266.34992332820282019728792003956564819968',
       BIGDECIMAL '-0',
       BIGDECIMAL '+5',
       BIGDECIMAL '+5.123',
       BIGDECIMAL '',
       BIGDECIMAL 'abc',
       BIGDECIMAL '99999999999999999999999999999999999999999999999999999999999',
       BIGDECIMAL '0.999999999999999999999999999999999999999999999999999999999',
       BIGDECIMAL '+',
       BIGDECIMAL '-'
--
QueryStatement [0-941] [select BIGDECIMAL...ECIMAL '-']
  Query [0-941] [select BIGDECIMAL...ECIMAL '-']
    Select [0-941] [select BIGDECIMAL...ECIMAL '-']
      SelectList [7-941] [BIGDECIMAL...BIGDECIMAL '-']
        SelectColumn [7-23] [BIGDECIMAL '1.1']
          BigNumericLiteral [7-23] [BIGDECIMAL '1.1']
            StringLiteral [18-23] ['1.1']
              StringLiteralComponent('1.1') [18-23] ['1.1']
        SelectColumn [32-50] [BIGDECIMAL '0.123']
          BigNumericLiteral [32-50] [BIGDECIMAL '0.123']
            StringLiteral [43-50] ['0.123']
              StringLiteralComponent('0.123') [43-50] ['0.123']
        SelectColumn [59-77] [BIGDECIMAL '456.0']
          BigNumericLiteral [59-77] [BIGDECIMAL '456.0']
            StringLiteral [70-77] ['456.0']
              StringLiteralComponent('456.0') [70-77] ['456.0']
        SelectColumn [86-102] [BIGDECIMAL '123']
          BigNumericLiteral [86-102] [BIGDECIMAL '123']
            StringLiteral [97-102] ['123']
              StringLiteralComponent('123') [97-102] ['123']
        SelectColumn [111-127] [BIGDECIMAL "123"]
          BigNumericLiteral [111-127] [BIGDECIMAL "123"]
            StringLiteral [122-127] ["123"]
              StringLiteralComponent("123") [122-127] ["123"]
        SelectColumn [136-150] [BIGDECIMAL '0']
          BigNumericLiteral [136-150] [BIGDECIMAL '0']
            StringLiteral [147-150] ['0']
              StringLiteralComponent('0') [147-150] ['0']
        SelectColumn [159-176] [BIGDECIMAL '-1.1']
          BigNumericLiteral [159-176] [BIGDECIMAL '-1.1']
            StringLiteral [170-176] ['-1.1']
              StringLiteralComponent('-1.1') [170-176] ['-1.1']
        SelectColumn [185-204] [BIGDECIMAL '-0.123']
          BigNumericLiteral [185-204] [BIGDECIMAL '-0.123']
            StringLiteral [196-204] ['-0.123']
              StringLiteralComponent('-0.123') [196-204] ['-0.123']
        SelectColumn [213-232] [BIGDECIMAL '-456.0']
          BigNumericLiteral [213-232] [BIGDECIMAL '-456.0']
            StringLiteral [224-232] ['-456.0']
              StringLiteralComponent('-456.0') [224-232] ['-456.0']
        SelectColumn [241-258] [BIGDECIMAL '-123']
          BigNumericLiteral [241-258] [BIGDECIMAL '-123']
            StringLiteral [252-258] ['-123']
              StringLiteralComponent('-123') [252-258] ['-123']
        SelectColumn [267-284] [BIGDECIMAL "-123"]
          BigNumericLiteral [267-284] [BIGDECIMAL "-123"]
            StringLiteral [278-284] ["-123"]
              StringLiteralComponent("-123") [278-284] ["-123"]
        SelectColumn [293-346] [BIGDECIMAL...9999999999999999']
          BigNumericLiteral [293-346] [BIGDECIMAL...9999999999999999']
            StringLiteral [304-346] ['0.99999999999999...999999999']
              StringLiteralComponent('0.99999999999999999999999999999999999999') [304-346] ['0.99999999999999...999999999']
        SelectColumn [355-446] [BIGDECIMAL...2003956564819967']
          BigNumericLiteral [355-446] [BIGDECIMAL...2003956564819967']
            StringLiteral [366-446] ['5789604461865809...564819967']
              StringLiteralComponent('578960446186580977117854925043439539266.34992332820282019728792003956564819967') [366-446] ['5789604461865809...564819967']
        SelectColumn [455-509] [BIGDECIMAL...9999999999999999']
          BigNumericLiteral [455-509] [BIGDECIMAL...9999999999999999']
            StringLiteral [466-509] ['-0.9999999999999...999999999']
              StringLiteralComponent('-0.99999999999999999999999999999999999999') [466-509] ['-0.9999999999999...999999999']
        SelectColumn [518-610] [BIGDECIMAL...2003956564819968']
          BigNumericLiteral [518-610] [BIGDECIMAL...2003956564819968']
            StringLiteral [529-610] ['-578960446186580...564819968']
              StringLiteralComponent('-578960446186580977117854925043439539266.34992332820282019728792003956564819968') [529-610] ['-578960446186580...564819968']
        SelectColumn [619-634] [BIGDECIMAL '-0']
          BigNumericLiteral [619-634] [BIGDECIMAL '-0']
            StringLiteral [630-634] ['-0']
              StringLiteralComponent('-0') [630-634] ['-0']
        SelectColumn [643-658] [BIGDECIMAL '+5']
          BigNumericLiteral [643-658] [BIGDECIMAL '+5']
            StringLiteral [654-658] ['+5']
              StringLiteralComponent('+5') [654-658] ['+5']
        SelectColumn [667-686] [BIGDECIMAL '+5.123']
          BigNumericLiteral [667-686] [BIGDECIMAL '+5.123']
            StringLiteral [678-686] ['+5.123']
              StringLiteralComponent('+5.123') [678-686] ['+5.123']
        SelectColumn [695-708] [BIGDECIMAL '']
          BigNumericLiteral [695-708] [BIGDECIMAL '']
            StringLiteral [706-708] ['']
              StringLiteralComponent('') [706-708] ['']
        SelectColumn [717-733] [BIGDECIMAL 'abc']
          BigNumericLiteral [717-733] [BIGDECIMAL 'abc']
            StringLiteral [728-733] ['abc']
              StringLiteralComponent('abc') [728-733] ['abc']
        SelectColumn [742-814] [BIGDECIMAL...9999999999999999']
          BigNumericLiteral [742-814] [BIGDECIMAL...9999999999999999']
            StringLiteral [753-814] ['9999999999999999...999999999']
              StringLiteralComponent('99999999999999999999999999999999999999999999999999999999999') [753-814] ['9999999999999999...999999999']
        SelectColumn [823-895] [BIGDECIMAL...9999999999999999']
          BigNumericLiteral [823-895] [BIGDECIMAL...9999999999999999']
            StringLiteral [834-895] ['0.99999999999999...999999999']
              StringLiteralComponent('0.999999999999999999999999999999999999999999999999999999999') [834-895] ['0.99999999999999...999999999']
        SelectColumn [904-918] [BIGDECIMAL '+']
          BigNumericLiteral [904-918] [BIGDECIMAL '+']
            StringLiteral [915-918] ['+']
              StringLiteralComponent('+') [915-918] ['+']
        SelectColumn [927-941] [BIGDECIMAL '-']
          BigNumericLiteral [927-941] [BIGDECIMAL '-']
            StringLiteral [938-941] ['-']
              StringLiteralComponent('-') [938-941] ['-']
--
SELECT
  BIGNUMERIC '1.1',
  BIGNUMERIC '0.123',
  BIGNUMERIC '456.0',
  BIGNUMERIC '123',
  BIGNUMERIC "123",
  BIGNUMERIC '0',
  BIGNUMERIC '-1.1',
  BIGNUMERIC '-0.123',
  BIGNUMERIC '-456.0',
  BIGNUMERIC '-123',
  BIGNUMERIC "-123",
  BIGNUMERIC '0.99999999999999999999999999999999999999',
  BIGNUMERIC '578960446186580977117854925043439539266.34992332820282019728792003956564819967',
  BIGNUMERIC '-0.99999999999999999999999999999999999999',
  BIGNUMERIC '-578960446186580977117854925043439539266.34992332820282019728792003956564819968',
  BIGNUMERIC '-0',
  BIGNUMERIC '+5',
  BIGNUMERIC '+5.123',
  BIGNUMERIC '',
  BIGNUMERIC 'abc',
  BIGNUMERIC '99999999999999999999999999999999999999999999999999999999999',
  BIGNUMERIC '0.999999999999999999999999999999999999999999999999999999999',
  BIGNUMERIC '+',
  BIGNUMERIC '-'
