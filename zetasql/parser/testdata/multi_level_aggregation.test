# The parser permits usage of {ROLLUP|CUBE|GROUPING SETS} in the grouping
# modifier and GROUP_ROWS() in the aggregate expression, but the resolver will
# not.
[language_features=NONE,+WITH_GROUP_ROWS]
select sum(avg(value)
group by {{key1|key1,key2|()|rollup (key1)|cube (key1)|grouping sets (key1)}}
) with group rows(select 1)
from T group by key3
--
ALTERNATION GROUP: key1
--
QueryStatement [0-84] [select sum...group by key3]
  Query [0-84] [select sum...group by key3]
    Select [0-84] [select sum...group by key3]
      SelectList [7-63] [sum(avg(value...(select 1)]
        SelectColumn [7-63] [sum(avg(value...(select 1)]
          FunctionCall [7-63] [sum(avg(value...(select 1)]
            PathExpression [7-10] [sum]
              Identifier(sum) [7-10] [sum]
            FunctionCall [11-21] [avg(value)]
              PathExpression [11-14] [avg]
                Identifier(avg) [11-14] [avg]
              PathExpression [15-20] [value]
                Identifier(value) [15-20] [value]
            GroupBy [22-35] [group by key1]
              GroupingItem [31-35] [key1]
                PathExpression [31-35] [key1]
                  Identifier(key1) [31-35] [key1]
            WithGroupRows [7-63] [sum(avg(value...(select 1)]
              Query [54-62] [select 1]
                Select [54-62] [select 1]
                  SelectList [61-62] [1]
                    SelectColumn [61-62] [1]
                      IntLiteral(1) [61-62] [1]
      FromClause [64-70] [from T]
        TablePathExpression [69-70] [T]
          PathExpression [69-70] [T]
            Identifier(T) [69-70] [T]
      GroupBy [71-84] [group by key3]
        GroupingItem [80-84] [key3]
          PathExpression [80-84] [key3]
            Identifier(key3) [80-84] [key3]
--
SELECT
  sum(avg(value)
    GROUP BY key1) WITH GROUP ROWS (
    SELECT
      1
  )
FROM
  T
GROUP BY key3
--
ALTERNATION GROUP: key1,key2
--
QueryStatement [0-89] [select sum...group by key3]
  Query [0-89] [select sum...group by key3]
    Select [0-89] [select sum...group by key3]
      SelectList [7-68] [sum(avg(value...(select 1)]
        SelectColumn [7-68] [sum(avg(value...(select 1)]
          FunctionCall [7-68] [sum(avg(value...(select 1)]
            PathExpression [7-10] [sum]
              Identifier(sum) [7-10] [sum]
            FunctionCall [11-21] [avg(value)]
              PathExpression [11-14] [avg]
                Identifier(avg) [11-14] [avg]
              PathExpression [15-20] [value]
                Identifier(value) [15-20] [value]
            GroupBy [22-40] [group by key1,key2]
              GroupingItem [31-35] [key1]
                PathExpression [31-35] [key1]
                  Identifier(key1) [31-35] [key1]
              GroupingItem [36-40] [key2]
                PathExpression [36-40] [key2]
                  Identifier(key2) [36-40] [key2]
            WithGroupRows [7-68] [sum(avg(value...(select 1)]
              Query [59-67] [select 1]
                Select [59-67] [select 1]
                  SelectList [66-67] [1]
                    SelectColumn [66-67] [1]
                      IntLiteral(1) [66-67] [1]
      FromClause [69-75] [from T]
        TablePathExpression [74-75] [T]
          PathExpression [74-75] [T]
            Identifier(T) [74-75] [T]
      GroupBy [76-89] [group by key3]
        GroupingItem [85-89] [key3]
          PathExpression [85-89] [key3]
            Identifier(key3) [85-89] [key3]
--
SELECT
  sum(avg(value)
    GROUP BY key1, key2) WITH GROUP ROWS (
    SELECT
      1
  )
FROM
  T
GROUP BY key3
--
ALTERNATION GROUP: ()
--
QueryStatement [0-82] [select sum...group by key3]
  Query [0-82] [select sum...group by key3]
    Select [0-82] [select sum...group by key3]
      SelectList [7-61] [sum(avg(value...(select 1)]
        SelectColumn [7-61] [sum(avg(value...(select 1)]
          FunctionCall [7-61] [sum(avg(value...(select 1)]
            PathExpression [7-10] [sum]
              Identifier(sum) [7-10] [sum]
            FunctionCall [11-21] [avg(value)]
              PathExpression [11-14] [avg]
                Identifier(avg) [11-14] [avg]
              PathExpression [15-20] [value]
                Identifier(value) [15-20] [value]
            GroupBy [22-33] [group by ()]
              GroupingItem [31-33] [()]
            WithGroupRows [7-61] [sum(avg(value...(select 1)]
              Query [52-60] [select 1]
                Select [52-60] [select 1]
                  SelectList [59-60] [1]
                    SelectColumn [59-60] [1]
                      IntLiteral(1) [59-60] [1]
      FromClause [62-68] [from T]
        TablePathExpression [67-68] [T]
          PathExpression [67-68] [T]
            Identifier(T) [67-68] [T]
      GroupBy [69-82] [group by key3]
        GroupingItem [78-82] [key3]
          PathExpression [78-82] [key3]
            Identifier(key3) [78-82] [key3]
--
SELECT
  sum(avg(value)
    GROUP BY ()) WITH GROUP ROWS (
    SELECT
      1
  )
FROM
  T
GROUP BY key3
--
ALTERNATION GROUP: rollup (key1)
--
QueryStatement [0-93] [select sum...group by key3]
  Query [0-93] [select sum...group by key3]
    Select [0-93] [select sum...group by key3]
      SelectList [7-72] [sum(avg(value...(select 1)]
        SelectColumn [7-72] [sum(avg(value...(select 1)]
          FunctionCall [7-72] [sum(avg(value...(select 1)]
            PathExpression [7-10] [sum]
              Identifier(sum) [7-10] [sum]
            FunctionCall [11-21] [avg(value)]
              PathExpression [11-14] [avg]
                Identifier(avg) [11-14] [avg]
              PathExpression [15-20] [value]
                Identifier(value) [15-20] [value]
            GroupBy [22-44] [group by rollup (key1)]
              GroupingItem [31-44] [rollup (key1)]
                Rollup [31-44] [rollup (key1)]
                  PathExpression [39-43] [key1]
                    Identifier(key1) [39-43] [key1]
            WithGroupRows [7-72] [sum(avg(value...(select 1)]
              Query [63-71] [select 1]
                Select [63-71] [select 1]
                  SelectList [70-71] [1]
                    SelectColumn [70-71] [1]
                      IntLiteral(1) [70-71] [1]
      FromClause [73-79] [from T]
        TablePathExpression [78-79] [T]
          PathExpression [78-79] [T]
            Identifier(T) [78-79] [T]
      GroupBy [80-93] [group by key3]
        GroupingItem [89-93] [key3]
          PathExpression [89-93] [key3]
            Identifier(key3) [89-93] [key3]
--
SELECT
  sum(avg(value)
    GROUP BY ROLLUP(key1)) WITH GROUP ROWS (
    SELECT
      1
  )
FROM
  T
GROUP BY key3
--
ALTERNATION GROUP: cube (key1)
--
QueryStatement [0-91] [select sum...group by key3]
  Query [0-91] [select sum...group by key3]
    Select [0-91] [select sum...group by key3]
      SelectList [7-70] [sum(avg(value...(select 1)]
        SelectColumn [7-70] [sum(avg(value...(select 1)]
          FunctionCall [7-70] [sum(avg(value...(select 1)]
            PathExpression [7-10] [sum]
              Identifier(sum) [7-10] [sum]
            FunctionCall [11-21] [avg(value)]
              PathExpression [11-14] [avg]
                Identifier(avg) [11-14] [avg]
              PathExpression [15-20] [value]
                Identifier(value) [15-20] [value]
            GroupBy [22-42] [group by cube (key1)]
              GroupingItem [31-42] [cube (key1)]
                Cube [31-42] [cube (key1)]
                  PathExpression [37-41] [key1]
                    Identifier(key1) [37-41] [key1]
            WithGroupRows [7-70] [sum(avg(value...(select 1)]
              Query [61-69] [select 1]
                Select [61-69] [select 1]
                  SelectList [68-69] [1]
                    SelectColumn [68-69] [1]
                      IntLiteral(1) [68-69] [1]
      FromClause [71-77] [from T]
        TablePathExpression [76-77] [T]
          PathExpression [76-77] [T]
            Identifier(T) [76-77] [T]
      GroupBy [78-91] [group by key3]
        GroupingItem [87-91] [key3]
          PathExpression [87-91] [key3]
            Identifier(key3) [87-91] [key3]
--
SELECT
  sum(avg(value)
    GROUP BY CUBE(key1)) WITH GROUP ROWS (
    SELECT
      1
  )
FROM
  T
GROUP BY key3
--
ALTERNATION GROUP: grouping sets (key1)
--
QueryStatement [0-100] [select sum...group by key3]
  Query [0-100] [select sum...group by key3]
    Select [0-100] [select sum...group by key3]
      SelectList [7-79] [sum(avg(value...(select 1)]
        SelectColumn [7-79] [sum(avg(value...(select 1)]
          FunctionCall [7-79] [sum(avg(value...(select 1)]
            PathExpression [7-10] [sum]
              Identifier(sum) [7-10] [sum]
            FunctionCall [11-21] [avg(value)]
              PathExpression [11-14] [avg]
                Identifier(avg) [11-14] [avg]
              PathExpression [15-20] [value]
                Identifier(value) [15-20] [value]
            GroupBy [22-51] [group by grouping sets (key1)]
              GroupingItem [31-51] [grouping sets (key1)]
                GroupingSetList [31-51] [grouping sets (key1)]
                  GroupingSet [46-50] [key1]
                    PathExpression [46-50] [key1]
                      Identifier(key1) [46-50] [key1]
            WithGroupRows [7-79] [sum(avg(value...(select 1)]
              Query [70-78] [select 1]
                Select [70-78] [select 1]
                  SelectList [77-78] [1]
                    SelectColumn [77-78] [1]
                      IntLiteral(1) [77-78] [1]
      FromClause [80-86] [from T]
        TablePathExpression [85-86] [T]
          PathExpression [85-86] [T]
            Identifier(T) [85-86] [T]
      GroupBy [87-100] [group by key3]
        GroupingItem [96-100] [key3]
          PathExpression [96-100] [key3]
            Identifier(key3) [96-100] [key3]
--
SELECT
  sum(avg(value)
    GROUP BY GROUPING SETS(key1)) WITH GROUP ROWS (
    SELECT
      1
  )
FROM
  T
GROUP BY key3
==

# The parser allows group by with a hint, but the resolver will not.
select sum(avg(value) group @1 by key1) from T
--
QueryStatement [0-46] [select sum...key1) from T]
  Query [0-46] [select sum...key1) from T]
    Select [0-46] [select sum...key1) from T]
      SelectList [7-39] [sum(avg(value...1 by key1)]
        SelectColumn [7-39] [sum(avg(value...1 by key1)]
          FunctionCall [7-39] [sum(avg(value...1 by key1)]
            PathExpression [7-10] [sum]
              Identifier(sum) [7-10] [sum]
            FunctionCall [11-21] [avg(value)]
              PathExpression [11-14] [avg]
                Identifier(avg) [11-14] [avg]
              PathExpression [15-20] [value]
                Identifier(value) [15-20] [value]
            GroupBy [22-38] [group @1 by key1]
              Hint [28-30] [@1]
                IntLiteral(1) [29-30] [1]
              GroupingItem [34-38] [key1]
                PathExpression [34-38] [key1]
                  Identifier(key1) [34-38] [key1]
      FromClause [40-46] [from T]
        TablePathExpression [45-46] [T]
          PathExpression [45-46] [T]
            Identifier(T) [45-46] [T]
--
SELECT
  sum(avg(value)
    GROUP @1 BY key1)
FROM
  T
==

# The parser allows group by alongside having min/max but the resolver will not.
select sum(avg(value) having {{max|min}} value2 group by key1) from T
--
ALTERNATION GROUP: max
--
QueryStatement [0-61] [select sum...key1) from T]
  Query [0-61] [select sum...key1) from T]
    Select [0-61] [select sum...key1) from T]
      SelectList [7-54] [sum(avg(value...group by key1)]
        SelectColumn [7-54] [sum(avg(value...group by key1)]
          FunctionCall [7-54] [sum(avg(value...group by key1)]
            PathExpression [7-10] [sum]
              Identifier(sum) [7-10] [sum]
            FunctionCall [11-21] [avg(value)]
              PathExpression [11-14] [avg]
                Identifier(avg) [11-14] [avg]
              PathExpression [15-20] [value]
                Identifier(value) [15-20] [value]
            HavingModifier [22-39] [having max value2]
              PathExpression [33-39] [value2]
                Identifier(value2) [33-39] [value2]
            GroupBy [40-53] [group by key1]
              GroupingItem [49-53] [key1]
                PathExpression [49-53] [key1]
                  Identifier(key1) [49-53] [key1]
      FromClause [55-61] [from T]
        TablePathExpression [60-61] [T]
          PathExpression [60-61] [T]
            Identifier(T) [60-61] [T]
--
SELECT
  sum(avg(value)
    HAVING MAX value2
    GROUP BY key1)
FROM
  T
--
ALTERNATION GROUP: min
--
QueryStatement [0-61] [select sum...key1) from T]
  Query [0-61] [select sum...key1) from T]
    Select [0-61] [select sum...key1) from T]
      SelectList [7-54] [sum(avg(value...group by key1)]
        SelectColumn [7-54] [sum(avg(value...group by key1)]
          FunctionCall [7-54] [sum(avg(value...group by key1)]
            PathExpression [7-10] [sum]
              Identifier(sum) [7-10] [sum]
            FunctionCall [11-21] [avg(value)]
              PathExpression [11-14] [avg]
                Identifier(avg) [11-14] [avg]
              PathExpression [15-20] [value]
                Identifier(value) [15-20] [value]
            HavingModifier [22-39] [having min value2]
              PathExpression [33-39] [value2]
                Identifier(value2) [33-39] [value2]
            GroupBy [40-53] [group by key1]
              GroupingItem [49-53] [key1]
                PathExpression [49-53] [key1]
                  Identifier(key1) [49-53] [key1]
      FromClause [55-61] [from T]
        TablePathExpression [60-61] [T]
          PathExpression [60-61] [T]
            Identifier(T) [60-61] [T]
--
SELECT
  sum(avg(value)
    HAVING MIN value2
    GROUP BY key1)
FROM
  T
==

# Aggregate modifiers are allowed at any nesting of a multi-level aggregate
# function call. The resolver permits these clauses, but disallows the group by
# modifier and having expressions to be used alongside the over clause.
select
  sum(
    distinct
      avg(distinct value respect nulls where value > 10
      group by key2 having count(*) < 100 order by key3) over ()
    ignore nulls group by key1 order by key2
  ) over ()
from T
--
QueryStatement [0-211] [select   sum...() from T]
  Query [0-211] [select   sum...() from T]
    Select [0-211] [select   sum...() from T]
      SelectList [9-204] [sum(     distinct...) over ()]
        SelectColumn [9-204] [sum(     distinct...) over ()]
          AnalyticFunctionCall [9-204] [sum(     distinct...) over ()]
            FunctionCall(distinct=true) [9-196] [sum(     distinct...y key2   )]
              PathExpression [9-12] [sum]
                Identifier(sum) [9-12] [sum]
              AnalyticFunctionCall [33-147] [avg(distinct...key3) over ()]
                FunctionCall(distinct=true) [33-139] [avg(distinct...order by key3)]
                  PathExpression [33-36] [avg]
                    Identifier(avg) [33-36] [avg]
                  PathExpression [46-51] [value]
                    Identifier(value) [46-51] [value]
                  WhereClause [66-82] [where value > 10]
                    BinaryExpression(>) [72-82] [value > 10]
                      PathExpression [72-77] [value]
                        Identifier(value) [72-77] [value]
                      IntLiteral(10) [80-82] [10]
                  GroupBy [89-102] [group by key2]
                    GroupingItem [98-102] [key2]
                      PathExpression [98-102] [key2]
                        Identifier(key2) [98-102] [key2]
                  Having [103-124] [having count(*) < 100]
                    BinaryExpression(<) [110-124] [count(*) < 100]
                      FunctionCall [110-118] [count(*)]
                        PathExpression [110-115] [count]
                          Identifier(count) [110-115] [count]
                        Star(*) [116-117] [*]
                      IntLiteral(100) [121-124] [100]
                  OrderBy [125-138] [order by key3]
                    OrderingExpression(ASC) [134-138] [key3]
                      PathExpression [134-138] [key3]
                        Identifier(key3) [134-138] [key3]
                WindowSpecification [145-147] [()]
              GroupBy [165-178] [group by key1]
                GroupingItem [174-178] [key1]
                  PathExpression [174-178] [key1]
                    Identifier(key1) [174-178] [key1]
              OrderBy [179-192] [order by key2]
                OrderingExpression(ASC) [188-192] [key2]
                  PathExpression [188-192] [key2]
                    Identifier(key2) [188-192] [key2]
            WindowSpecification [202-204] [()]
      FromClause [205-211] [from T]
        TablePathExpression [210-211] [T]
          PathExpression [210-211] [T]
            Identifier(T) [210-211] [T]
--
SELECT
  sum(DISTINCT avg(DISTINCT value RESPECT NULLS
      WHERE
        value > 10
      GROUP BY key2
      HAVING count(*) < 100
      ORDER BY key3) OVER () IGNORE NULLS
    GROUP BY key1
    ORDER BY key2) OVER ()
FROM
  T
==

# The parser allows this, but the resolver will not.
select count(* group by key2)
--
QueryStatement [0-29] [select count(* group by key2)]
  Query [0-29] [select count(* group by key2)]
    Select [0-29] [select count(* group by key2)]
      SelectList [7-29] [count(* group by key2)]
        SelectColumn [7-29] [count(* group by key2)]
          FunctionCall [7-29] [count(* group by key2)]
            PathExpression [7-12] [count]
              Identifier(count) [7-12] [count]
            Star(*) [13-14] [*]
            GroupBy [15-28] [group by key2]
              GroupingItem [24-28] [key2]
                PathExpression [24-28] [key2]
                  Identifier(key2) [24-28] [key2]
--
SELECT
  count(*
    GROUP BY key2)
==

# 3-level aggregate
select sum(avg(max(value) group by key1) group by key2) from T
--
QueryStatement [0-62] [select sum...key2) from T]
  Query [0-62] [select sum...key2) from T]
    Select [0-62] [select sum...key2) from T]
      SelectList [7-55] [sum(avg(max...group by key2)]
        SelectColumn [7-55] [sum(avg(max...group by key2)]
          FunctionCall [7-55] [sum(avg(max...group by key2)]
            PathExpression [7-10] [sum]
              Identifier(sum) [7-10] [sum]
            FunctionCall [11-40] [avg(max(value) group by key1)]
              PathExpression [11-14] [avg]
                Identifier(avg) [11-14] [avg]
              FunctionCall [15-25] [max(value)]
                PathExpression [15-18] [max]
                  Identifier(max) [15-18] [max]
                PathExpression [19-24] [value]
                  Identifier(value) [19-24] [value]
              GroupBy [26-39] [group by key1]
                GroupingItem [35-39] [key1]
                  PathExpression [35-39] [key1]
                    Identifier(key1) [35-39] [key1]
            GroupBy [41-54] [group by key2]
              GroupingItem [50-54] [key2]
                PathExpression [50-54] [key2]
                  Identifier(key2) [50-54] [key2]
      FromClause [56-62] [from T]
        TablePathExpression [61-62] [T]
          PathExpression [61-62] [T]
            Identifier(T) [61-62] [T]
--
SELECT
  sum(avg(max(value)
      GROUP BY key1)
    GROUP BY key2)
FROM
  T
==

# WHERE and HAVING expressions are allowed at any nesting of a multi-level
# aggregate function call.
select sum(
  avg(
    max(
      value
      where value > 1
      group by key1
      having count(*) > 1)
    where value2 > 10
    group by key2
    having count(*) > 10)
  where value3 > 100
  group by key3
  having count(*) > 100) from T
--
QueryStatement [0-243] [select sum...100) from T]
  Query [0-243] [select sum...100) from T]
    Select [0-243] [select sum...100) from T]
      SelectList [7-236] [sum(   avg...(*) > 100)]
        SelectColumn [7-236] [sum(   avg...(*) > 100)]
          FunctionCall [7-236] [sum(   avg...(*) > 100)]
            PathExpression [7-10] [sum]
              Identifier(sum) [7-10] [sum]
            FunctionCall [14-174] [avg(     max...count(*) > 10)]
              PathExpression [14-17] [avg]
                Identifier(avg) [14-17] [avg]
              FunctionCall [23-108] [max(...count(*) > 1)]
                PathExpression [23-26] [max]
                  Identifier(max) [23-26] [max]
                PathExpression [34-39] [value]
                  Identifier(value) [34-39] [value]
                WhereClause [46-61] [where value > 1]
                  BinaryExpression(>) [52-61] [value > 1]
                    PathExpression [52-57] [value]
                      Identifier(value) [52-57] [value]
                    IntLiteral(1) [60-61] [1]
                GroupBy [68-81] [group by key1]
                  GroupingItem [77-81] [key1]
                    PathExpression [77-81] [key1]
                      Identifier(key1) [77-81] [key1]
                Having [88-107] [having count(*) > 1]
                  BinaryExpression(>) [95-107] [count(*) > 1]
                    FunctionCall [95-103] [count(*)]
                      PathExpression [95-100] [count]
                        Identifier(count) [95-100] [count]
                      Star(*) [101-102] [*]
                    IntLiteral(1) [106-107] [1]
              WhereClause [113-130] [where value2 > 10]
                BinaryExpression(>) [119-130] [value2 > 10]
                  PathExpression [119-125] [value2]
                    Identifier(value2) [119-125] [value2]
                  IntLiteral(10) [128-130] [10]
              GroupBy [135-148] [group by key2]
                GroupingItem [144-148] [key2]
                  PathExpression [144-148] [key2]
                    Identifier(key2) [144-148] [key2]
              Having [153-173] [having count(*) > 10]
                BinaryExpression(>) [160-173] [count(*) > 10]
                  FunctionCall [160-168] [count(*)]
                    PathExpression [160-165] [count]
                      Identifier(count) [160-165] [count]
                    Star(*) [166-167] [*]
                  IntLiteral(10) [171-173] [10]
            WhereClause [177-195] [where value3 > 100]
              BinaryExpression(>) [183-195] [value3 > 100]
                PathExpression [183-189] [value3]
                  Identifier(value3) [183-189] [value3]
                IntLiteral(100) [192-195] [100]
            GroupBy [198-211] [group by key3]
              GroupingItem [207-211] [key3]
                PathExpression [207-211] [key3]
                  Identifier(key3) [207-211] [key3]
            Having [214-235] [having count(*) > 100]
              BinaryExpression(>) [221-235] [count(*) > 100]
                FunctionCall [221-229] [count(*)]
                  PathExpression [221-226] [count]
                    Identifier(count) [221-226] [count]
                  Star(*) [227-228] [*]
                IntLiteral(100) [232-235] [100]
      FromClause [237-243] [from T]
        TablePathExpression [242-243] [T]
          PathExpression [242-243] [T]
            Identifier(T) [242-243] [T]
--
SELECT
  sum(avg(max(value
        WHERE
          value > 1
        GROUP BY key1
        HAVING count(*) > 1)
      WHERE
        value2 > 10
      GROUP BY key2
      HAVING count(*) > 10)
    WHERE
      value3 > 100
    GROUP BY key3
    HAVING count(*) > 100)
FROM
  T
==

# GROUP BY ALL is not a valid grouping modifier and is rejected by the parser.
select sum(avg(value) group by all) from T
--
ERROR: Syntax error: Unexpected keyword ALL [at 1:32]
select sum(avg(value) group by all) from T
                               ^
