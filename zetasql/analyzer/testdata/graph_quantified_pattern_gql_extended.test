[default language_features=NONE,+SQL_GRAPH,+SQL_GRAPH_ADVANCED_QUERY,+SQL_GRAPH_BOUNDED_PATH_QUANTIFICATION]
[default no_test_extract_table_names]
# No unparser due to SQLBuilder visitor not implemented for GraphMakeElement

# Simple quantified pattern
select gt.* from
graph_table(aml
  match ((a)-[b]->(c)){1, 3}
  return 1 AS One
) gt
--
QueryStmt
+-output_column_list=
| +-$graph_table.One#9 AS One [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.One#9]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.One#9]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.One#9]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.One#9]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=$path_scan.[$head#7, $tail#8]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=$path_scan.[$head#7, $tail#8]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.a#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphEdgeScan
                  | |   | | +-column_list=[$element_table.b#2]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | +-orientation=RIGHT
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.c#3]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$path_scan.$head#7
                  | |   +-tail=$path_scan.$tail#8
                  | |   +-quantifier=
                  | |   | +-GraphPathPatternQuantifier
                  | |   |   +-lower_bound=
                  | |   |   | +-Literal(type=INT64, value=1)
                  | |   |   +-upper_bound=
                  | |   |     +-Literal(type=INT64, value=3)
                  | |   +-group_variable_list=
                  | |     +-GraphMakeArrayVariable(element=$element_table.a#1, array=$element_table.a#4)
                  | |     +-GraphMakeArrayVariable(element=$element_table.b#2, array=$element_table.b#5)
                  | |     +-GraphMakeArrayVariable(element=$element_table.c#3, array=$element_table.c#6)
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=[$graph_table.One#9]
                    +-expr_list=
                    | +-One#9 := Literal(type=INT64, value=1)
                    +-input_scan=
                      +-GraphRefScan
==

# Multiple MATCH with at least one quantified pattern
select * from
  graph_table(aml
    MATCH (n) -[e:Transfer]->{1, 3} (m)
    MATCH (m)
    RETURN n.id as n_id, m.id as m_id
  ) g1
--
QueryStmt
+-output_column_list=
| +-$graph_table.n_id#12 AS n_id [INT64]
| +-$graph_table.m_id#13 AS m_id [INT64]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[n_id#12, m_id#13]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[n_id#12, m_id#13]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=$graph_table.[n_id#12, m_id#13]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=$graph_table.[n_id#12, m_id#13]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.n#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.m#10]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.n#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.m#10]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.n#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphPathScan
                  | |   | | +-column_list=$path_scan.[$head#8, $tail#9]
                  | |   | | +-input_scan_list=
                  | |   | | | +-GraphNodeScan
                  | |   | | | | +-column_list=[$element_table.$element1#2]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | | +-GraphEdgeScan
                  | |   | | | | +-column_list=[$element_table.e#3]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabel(parse_location=50-58, label=aml.Transfer)
                  | |   | | | | +-target_element_table_list=[aml.Transfer]
                  | |   | | | | +-orientation=RIGHT
                  | |   | | | +-GraphNodeScan
                  | |   | | |   +-column_list=[$element_table.$element2#4]
                  | |   | | |   +-label_expr=
                  | |   | | |   | +-GraphLabelNaryExpr
                  | |   | | |   |   +-op=OR
                  | |   | | |   |   +-operand_list=
                  | |   | | |   |     +-GraphWildCardLabel
                  | |   | | |   |     +-GraphLabelNaryExpr
                  | |   | | |   |       +-op=NOT
                  | |   | | |   |       +-operand_list=
                  | |   | | |   |         +-GraphWildCardLabel
                  | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | +-head=$path_scan.$head#8
                  | |   | | +-tail=$path_scan.$tail#9
                  | |   | | +-quantifier=
                  | |   | | | +-GraphPathPatternQuantifier
                  | |   | | |   +-lower_bound=
                  | |   | | |   | +-Literal(type=INT64, value=1)
                  | |   | | |   +-upper_bound=
                  | |   | | |     +-Literal(type=INT64, value=3)
                  | |   | | +-group_variable_list=
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.e#3, array=$element_table.e#6)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.m#10]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$element_table.n#1
                  | |   +-tail=$element_table.m#10
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-GraphScan
                  | +-column_list=$element_table.[n#1, m#10, m#11]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.m#11]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.m#11]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$element_table.m#11
                  | |   +-tail=$element_table.m#11
                  | +-filter_expr=
                  | | +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>) -> BOOL)
                  | |   +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.m#11)
                  | |   +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.m#10)
                  | +-input_scan=
                  |   +-GraphRefScan(column_list=$element_table.[n#1, m#10])
                  +-ProjectScan
                    +-column_list=$graph_table.[n_id#12, m_id#13]
                    +-expr_list=
                    | +-n_id#12 :=
                    | | +-GraphGetElementProperty
                    | |   +-type=INT64
                    | |   +-expr=
                    | |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.n#1)
                    | |   +-property=id(INT64)
                    | +-m_id#13 :=
                    |   +-GraphGetElementProperty
                    |     +-type=INT64
                    |     +-expr=
                    |     | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.m#11)
                    |     +-property=id(INT64)
                    +-input_scan=
                      +-GraphRefScan(column_list=$element_table.[n#1, m#11])
==

# Match quantified pattern and return head and tails to next linear statement
# block
select * from
  graph_table(aml
    MATCH (src)(-[e:Transfer]->{1, 3})(dest)
    RETURN src.id AS src_id, dest.id AS dest_id
    NEXT
    MATCH (src_p) -[e:PersonOwnAccount]-> (src)
    MATCH (dest_p) -[e:PersonOwnAccount]-> (dest)
    WHERE src_p.id > dest_p.id
    RETURN
      src_p.name AS src_person, dest_p.name AS dest_person
  ) g1
--
QueryStmt
+-output_column_list=
| +-$graph_table.src_person#19 AS src_person [STRING]
| +-$graph_table.dest_person#20 AS dest_person [STRING]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[src_person#19, dest_person#20]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[src_person#19, dest_person#20]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=$graph_table.[src_person#19, dest_person#20]
            +-scan_list=
              +-GraphLinearScan
              | +-column_list=$graph_table.[src_id#11, dest_id#12]
              | +-scan_list=
              |   +-GraphScan
              |   | +-column_list=[$element_table.src#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.dest#10]
              |   | +-input_scan_list=
              |   | | +-GraphPathScan
              |   | |   +-column_list=[$element_table.src#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.dest#10]
              |   | |   +-input_scan_list=
              |   | |   | +-GraphNodeScan
              |   | |   | | +-column_list=[$element_table.src#1]
              |   | |   | | +-label_expr=
              |   | |   | | | +-GraphLabelNaryExpr
              |   | |   | | |   +-op=OR
              |   | |   | | |   +-operand_list=
              |   | |   | | |     +-GraphWildCardLabel
              |   | |   | | |     +-GraphLabelNaryExpr
              |   | |   | | |       +-op=NOT
              |   | |   | | |       +-operand_list=
              |   | |   | | |         +-GraphWildCardLabel
              |   | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
              |   | |   | +-GraphPathScan
              |   | |   | | +-column_list=$path_scan.[$head#8, $tail#9]
              |   | |   | | +-input_scan_list=
              |   | |   | | | +-GraphNodeScan
              |   | |   | | | | +-column_list=[$element_table.$element1#2]
              |   | |   | | | | +-label_expr=
              |   | |   | | | | | +-GraphLabelNaryExpr
              |   | |   | | | | |   +-op=OR
              |   | |   | | | | |   +-operand_list=
              |   | |   | | | | |     +-GraphWildCardLabel
              |   | |   | | | | |     +-GraphLabelNaryExpr
              |   | |   | | | | |       +-op=NOT
              |   | |   | | | | |       +-operand_list=
              |   | |   | | | | |         +-GraphWildCardLabel
              |   | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
              |   | |   | | | +-GraphEdgeScan
              |   | |   | | | | +-column_list=[$element_table.e#3]
              |   | |   | | | | +-label_expr=
              |   | |   | | | | | +-GraphLabel(parse_location=52-60, label=aml.Transfer)
              |   | |   | | | | +-target_element_table_list=[aml.Transfer]
              |   | |   | | | | +-orientation=RIGHT
              |   | |   | | | +-GraphNodeScan
              |   | |   | | |   +-column_list=[$element_table.$element2#4]
              |   | |   | | |   +-label_expr=
              |   | |   | | |   | +-GraphLabelNaryExpr
              |   | |   | | |   |   +-op=OR
              |   | |   | | |   |   +-operand_list=
              |   | |   | | |   |     +-GraphWildCardLabel
              |   | |   | | |   |     +-GraphLabelNaryExpr
              |   | |   | | |   |       +-op=NOT
              |   | |   | | |   |       +-operand_list=
              |   | |   | | |   |         +-GraphWildCardLabel
              |   | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
              |   | |   | | +-head=$path_scan.$head#8
              |   | |   | | +-tail=$path_scan.$tail#9
              |   | |   | | +-quantifier=
              |   | |   | | | +-GraphPathPatternQuantifier
              |   | |   | | |   +-lower_bound=
              |   | |   | | |   | +-Literal(type=INT64, value=1)
              |   | |   | | |   +-upper_bound=
              |   | |   | | |     +-Literal(type=INT64, value=3)
              |   | |   | | +-group_variable_list=
              |   | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
              |   | |   | |   +-GraphMakeArrayVariable(element=$element_table.e#3, array=$element_table.e#6)
              |   | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
              |   | |   | +-GraphNodeScan
              |   | |   |   +-column_list=[$element_table.dest#10]
              |   | |   |   +-label_expr=
              |   | |   |   | +-GraphLabelNaryExpr
              |   | |   |   |   +-op=OR
              |   | |   |   |   +-operand_list=
              |   | |   |   |     +-GraphWildCardLabel
              |   | |   |   |     +-GraphLabelNaryExpr
              |   | |   |   |       +-op=NOT
              |   | |   |   |       +-operand_list=
              |   | |   |   |         +-GraphWildCardLabel
              |   | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
              |   | |   +-head=$element_table.src#1
              |   | |   +-tail=$element_table.dest#10
              |   | +-input_scan=
              |   |   +-SingleRowScan
              |   +-ProjectScan
              |     +-column_list=$graph_table.[src_id#11, dest_id#12]
              |     +-expr_list=
              |     | +-src_id#11 :=
              |     | | +-GraphGetElementProperty
              |     | |   +-type=INT64
              |     | |   +-expr=
              |     | |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.src#1)
              |     | |   +-property=id(INT64)
              |     | +-dest_id#12 :=
              |     |   +-GraphGetElementProperty
              |     |     +-type=INT64
              |     |     +-expr=
              |     |     | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.dest#10)
              |     |     +-property=id(INT64)
              |     +-input_scan=
              |       +-GraphRefScan(column_list=$element_table.[src#1, dest#10])
              +-GraphLinearScan
                +-column_list=$graph_table.[src_person#19, dest_person#20]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$graph_table.src_id#11, $graph_table.dest_id#12, $element_table.src_p#13, $element_table.e#14, $element_table.src#15]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=$element_table.[src_p#13, e#14, src#15]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.src_p#13]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphEdgeScan
                  | |   | | +-column_list=[$element_table.e#14]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabel(parse_location=156-172, label=aml.PersonOwnAccount)
                  | |   | | +-target_element_table_list=[aml.PersonOwnAccount]
                  | |   | | +-orientation=RIGHT
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.src#15]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$element_table.src_p#13
                  | |   +-tail=$element_table.src#15
                  | +-input_scan=
                  |   +-GraphRefScan(column_list=$graph_table.[src_id#11, dest_id#12])
                  +-GraphScan
                  | +-column_list=[$graph_table.src_id#11, $graph_table.dest_id#12, $element_table.src_p#13, $element_table.e#14, $element_table.src#15, $element_table.dest_p#16, $element_table.e#17, $element_table.dest#18]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=$element_table.[dest_p#16, e#17, dest#18]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.dest_p#16]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphEdgeScan
                  | |   | | +-column_list=[$element_table.e#17]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabel(parse_location=205-221, label=aml.PersonOwnAccount)
                  | |   | | +-target_element_table_list=[aml.PersonOwnAccount]
                  | |   | | +-orientation=RIGHT
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.dest#18]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$element_table.dest_p#16
                  | |   +-tail=$element_table.dest#18
                  | +-filter_expr=
                  | | +-FunctionCall(ZetaSQL:$and(BOOL, repeated(1) BOOL) -> BOOL)
                  | |   +-FunctionCall(ZetaSQL:$equal(GRAPH_EDGE(aml)<accountId INT64, personId INT64>, GRAPH_EDGE(aml)<accountId INT64, personId INT64>) -> BOOL)
                  | |   | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.e#17)
                  | |   | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.e#14)
                  | |   +-FunctionCall(ZetaSQL:$greater(INT64, INT64) -> BOOL)
                  | |     +-GraphGetElementProperty
                  | |     | +-type=INT64
                  | |     | +-expr=
                  | |     | | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.src_p#13)
                  | |     | +-property=id(INT64)
                  | |     +-GraphGetElementProperty
                  | |       +-type=INT64
                  | |       +-expr=
                  | |       | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.dest_p#16)
                  | |       +-property=id(INT64)
                  | +-input_scan=
                  |   +-GraphRefScan(column_list=[$graph_table.src_id#11, $graph_table.dest_id#12, $element_table.src_p#13, $element_table.e#14, $element_table.src#15])
                  +-ProjectScan
                    +-column_list=$graph_table.[src_person#19, dest_person#20]
                    +-expr_list=
                    | +-src_person#19 :=
                    | | +-GraphGetElementProperty
                    | |   +-type=STRING
                    | |   +-expr=
                    | |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.src_p#13)
                    | |   +-property=name(STRING)
                    | +-dest_person#20 :=
                    |   +-GraphGetElementProperty
                    |     +-type=STRING
                    |     +-expr=
                    |     | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.dest_p#16)
                    |     +-property=name(STRING)
                    +-input_scan=
                      +-GraphRefScan(column_list=[$graph_table.src_id#11, $graph_table.dest_id#12, $element_table.src_p#13, $element_table.src#15, $element_table.dest_p#16, $element_table.e#17, $element_table.dest#18])
==

# LET statement referring to the singleton head of a quantified path pattern.
select gt.* from
graph_table(aml
  match (x)(-[e]->{1, 3})
  let age = DATE_DIFF(CURRENT_DATE, x.birthday, YEAR)
  return x.name, age
) gt
--
QueryStmt
+-output_column_list=
| +-$graph_table.name#11 AS name [STRING]
| +-$graph_table.age#12 AS age [INT64]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[name#11, age#12]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[name#11, age#12]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=$graph_table.[name#11, age#12]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=$graph_table.[name#11, age#12]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.x#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphPathScan
                  | |   |   +-column_list=$path_scan.[$head#8, $tail#9]
                  | |   |   +-input_scan_list=
                  | |   |   | +-GraphNodeScan
                  | |   |   | | +-column_list=[$element_table.$element1#2]
                  | |   |   | | +-label_expr=
                  | |   |   | | | +-GraphLabelNaryExpr
                  | |   |   | | |   +-op=OR
                  | |   |   | | |   +-operand_list=
                  | |   |   | | |     +-GraphWildCardLabel
                  | |   |   | | |     +-GraphLabelNaryExpr
                  | |   |   | | |       +-op=NOT
                  | |   |   | | |       +-operand_list=
                  | |   |   | | |         +-GraphWildCardLabel
                  | |   |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   |   | +-GraphEdgeScan
                  | |   |   | | +-column_list=[$element_table.e#3]
                  | |   |   | | +-label_expr=
                  | |   |   | | | +-GraphLabelNaryExpr
                  | |   |   | | |   +-op=OR
                  | |   |   | | |   +-operand_list=
                  | |   |   | | |     +-GraphWildCardLabel
                  | |   |   | | |     +-GraphLabelNaryExpr
                  | |   |   | | |       +-op=NOT
                  | |   |   | | |       +-operand_list=
                  | |   |   | | |         +-GraphWildCardLabel
                  | |   |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   |   | | +-orientation=RIGHT
                  | |   |   | +-GraphNodeScan
                  | |   |   |   +-column_list=[$element_table.$element2#4]
                  | |   |   |   +-label_expr=
                  | |   |   |   | +-GraphLabelNaryExpr
                  | |   |   |   |   +-op=OR
                  | |   |   |   |   +-operand_list=
                  | |   |   |   |     +-GraphWildCardLabel
                  | |   |   |   |     +-GraphLabelNaryExpr
                  | |   |   |   |       +-op=NOT
                  | |   |   |   |       +-operand_list=
                  | |   |   |   |         +-GraphWildCardLabel
                  | |   |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   |   +-head=$path_scan.$head#8
                  | |   |   +-tail=$path_scan.$tail#9
                  | |   |   +-quantifier=
                  | |   |   | +-GraphPathPatternQuantifier
                  | |   |   |   +-lower_bound=
                  | |   |   |   | +-Literal(type=INT64, value=1)
                  | |   |   |   +-upper_bound=
                  | |   |   |     +-Literal(type=INT64, value=3)
                  | |   |   +-group_variable_list=
                  | |   |     +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
                  | |   |     +-GraphMakeArrayVariable(element=$element_table.e#3, array=$element_table.e#6)
                  | |   |     +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
                  | |   +-head=$element_table.x#1
                  | |   +-tail=$path_scan.$tail#9
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                  | +-column_list=[$element_table.x#1, $graph_table.age#10]
                  | +-expr_list=
                  | | +-age#10 :=
                  | |   +-FunctionCall(ZetaSQL:date_diff(DATE, DATE, ENUM<zetasql.functions.DateTimestampPart>) -> INT64)
                  | |     +-FunctionCall(ZetaSQL:current_date(optional(0) STRING) -> DATE)
                  | |     +-GraphGetElementProperty
                  | |     | +-type=DATE
                  | |     | +-expr=
                  | |     | | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.x#1)
                  | |     | +-property=birthday(DATE)
                  | |     +-Literal(type=ENUM<zetasql.functions.DateTimestampPart>, value=YEAR)
                  | +-input_scan=
                  |   +-GraphRefScan(column_list=[$element_table.x#1])
                  +-ProjectScan
                    +-column_list=$graph_table.[name#11, age#12]
                    +-expr_list=
                    | +-name#11 :=
                    | | +-GraphGetElementProperty
                    | |   +-type=STRING
                    | |   +-expr=
                    | |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.x#1)
                    | |   +-property=name(STRING)
                    | +-age#12 := ColumnRef(type=INT64, column=$graph_table.age#10)
                    +-input_scan=
                      +-GraphRefScan(column_list=[$element_table.x#1, $graph_table.age#10])
==

# Use FILTER to select rows from the working table that contains the output of
# a quantified path
select gt.* from
graph_table(aml
  match (src:Account)-[e:Transfer]->{1, 3}(dest:Account)
  let src_mono_id = src.id
  let dest_mono_id = dest.id
  filter where src_mono_id > 65535
  return src_mono_id, dest_mono_id
) gt
--
QueryStmt
+-output_column_list=
| +-$graph_table.src_mono_id#13 AS src_mono_id [INT64]
| +-$graph_table.dest_mono_id#14 AS dest_mono_id [INT64]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[src_mono_id#13, dest_mono_id#14]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[src_mono_id#13, dest_mono_id#14]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=$graph_table.[src_mono_id#13, dest_mono_id#14]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=$graph_table.[src_mono_id#13, dest_mono_id#14]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.src#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.dest#10]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.src#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.dest#10]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.src#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabel(parse_location=46-53, label=aml.Account)
                  | |   | | +-target_element_table_list=[aml.Account]
                  | |   | +-GraphPathScan
                  | |   | | +-column_list=$path_scan.[$head#8, $tail#9]
                  | |   | | +-input_scan_list=
                  | |   | | | +-GraphNodeScan
                  | |   | | | | +-column_list=[$element_table.$element1#2]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | | +-GraphEdgeScan
                  | |   | | | | +-column_list=[$element_table.e#3]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabel(parse_location=58-66, label=aml.Transfer)
                  | |   | | | | +-target_element_table_list=[aml.Transfer]
                  | |   | | | | +-orientation=RIGHT
                  | |   | | | +-GraphNodeScan
                  | |   | | |   +-column_list=[$element_table.$element2#4]
                  | |   | | |   +-label_expr=
                  | |   | | |   | +-GraphLabelNaryExpr
                  | |   | | |   |   +-op=OR
                  | |   | | |   |   +-operand_list=
                  | |   | | |   |     +-GraphWildCardLabel
                  | |   | | |   |     +-GraphLabelNaryExpr
                  | |   | | |   |       +-op=NOT
                  | |   | | |   |       +-operand_list=
                  | |   | | |   |         +-GraphWildCardLabel
                  | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | +-head=$path_scan.$head#8
                  | |   | | +-tail=$path_scan.$tail#9
                  | |   | | +-quantifier=
                  | |   | | | +-GraphPathPatternQuantifier
                  | |   | | |   +-lower_bound=
                  | |   | | |   | +-Literal(type=INT64, value=1)
                  | |   | | |   +-upper_bound=
                  | |   | | |     +-Literal(type=INT64, value=3)
                  | |   | | +-group_variable_list=
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.e#3, array=$element_table.e#6)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.dest#10]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabel(parse_location=81-88, label=aml.Account)
                  | |   |   +-target_element_table_list=[aml.Account]
                  | |   +-head=$element_table.src#1
                  | |   +-tail=$element_table.dest#10
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                  | +-column_list=[$element_table.src#1, $element_table.dest#10, $graph_table.src_mono_id#11]
                  | +-expr_list=
                  | | +-src_mono_id#11 :=
                  | |   +-GraphGetElementProperty
                  | |     +-type=INT64
                  | |     +-expr=
                  | |     | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.src#1)
                  | |     +-property=id(INT64)
                  | +-input_scan=
                  |   +-GraphRefScan(column_list=$element_table.[src#1, dest#10])
                  +-ProjectScan
                  | +-column_list=[$element_table.src#1, $element_table.dest#10, $graph_table.src_mono_id#11, $graph_table.dest_mono_id#12]
                  | +-expr_list=
                  | | +-dest_mono_id#12 :=
                  | |   +-GraphGetElementProperty
                  | |     +-type=INT64
                  | |     +-expr=
                  | |     | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.dest#10)
                  | |     +-property=id(INT64)
                  | +-input_scan=
                  |   +-GraphRefScan(column_list=[$element_table.src#1, $element_table.dest#10, $graph_table.src_mono_id#11])
                  +-FilterScan
                  | +-column_list=[$element_table.src#1, $element_table.dest#10, $graph_table.src_mono_id#11, $graph_table.dest_mono_id#12]
                  | +-input_scan=
                  | | +-GraphRefScan(column_list=[$element_table.src#1, $element_table.dest#10, $graph_table.src_mono_id#11, $graph_table.dest_mono_id#12])
                  | +-filter_expr=
                  |   +-FunctionCall(ZetaSQL:$greater(INT64, INT64) -> BOOL)
                  |     +-ColumnRef(type=INT64, column=$graph_table.src_mono_id#11)
                  |     +-Literal(type=INT64, value=65535)
                  +-ProjectScan
                    +-column_list=$graph_table.[src_mono_id#13, dest_mono_id#14]
                    +-expr_list=
                    | +-src_mono_id#13 := ColumnRef(type=INT64, column=$graph_table.src_mono_id#11)
                    | +-dest_mono_id#14 := ColumnRef(type=INT64, column=$graph_table.dest_mono_id#12)
                    +-input_scan=
                      +-GraphRefScan(column_list=[$element_table.src#1, $element_table.dest#10, $graph_table.src_mono_id#11, $graph_table.dest_mono_id#12])
==

# Completely labeled MATCH pattern with a quantified path
select gt.* from
graph_table(aml
  match (p:Person)-[o:PersonOwnAccount]->(a:Account)-[e:Transfer]->{1, 3}(b:Account)
  return p.name AS person_name, b.id AS end_account
) gt
--

QueryStmt
+-output_column_list=
| +-$graph_table.person_name#13 AS person_name [STRING]
| +-$graph_table.end_account#14 AS end_account [INT64]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[person_name#13, end_account#14]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[person_name#13, end_account#14]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=$graph_table.[person_name#13, end_account#14]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=$graph_table.[person_name#13, end_account#14]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.p#1, $element_table.o#2, $element_table.a#3, $path_scan.$head#10, $path_scan.$tail#11, $element_table.b#12]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.p#1, $element_table.o#2, $element_table.a#3, $path_scan.$head#10, $path_scan.$tail#11, $element_table.b#12]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.p#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabel(parse_location=44-50, label=aml.Person)
                  | |   | | +-target_element_table_list=[aml.Person]
                  | |   | +-GraphEdgeScan
                  | |   | | +-column_list=[$element_table.o#2]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabel(parse_location=55-71, label=aml.PersonOwnAccount)
                  | |   | | +-target_element_table_list=[aml.PersonOwnAccount]
                  | |   | | +-orientation=RIGHT
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.a#3]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabel(parse_location=77-84, label=aml.Account)
                  | |   | | +-target_element_table_list=[aml.Account]
                  | |   | +-GraphPathScan
                  | |   | | +-column_list=$path_scan.[$head#10, $tail#11]
                  | |   | | +-input_scan_list=
                  | |   | | | +-GraphNodeScan
                  | |   | | | | +-column_list=[$element_table.$element1#4]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | | +-GraphEdgeScan
                  | |   | | | | +-column_list=[$element_table.e#5]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabel(parse_location=89-97, label=aml.Transfer)
                  | |   | | | | +-target_element_table_list=[aml.Transfer]
                  | |   | | | | +-orientation=RIGHT
                  | |   | | | +-GraphNodeScan
                  | |   | | |   +-column_list=[$element_table.$element2#6]
                  | |   | | |   +-label_expr=
                  | |   | | |   | +-GraphLabelNaryExpr
                  | |   | | |   |   +-op=OR
                  | |   | | |   |   +-operand_list=
                  | |   | | |   |     +-GraphWildCardLabel
                  | |   | | |   |     +-GraphLabelNaryExpr
                  | |   | | |   |       +-op=NOT
                  | |   | | |   |       +-operand_list=
                  | |   | | |   |         +-GraphWildCardLabel
                  | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | +-head=$path_scan.$head#10
                  | |   | | +-tail=$path_scan.$tail#11
                  | |   | | +-quantifier=
                  | |   | | | +-GraphPathPatternQuantifier
                  | |   | | |   +-lower_bound=
                  | |   | | |   | +-Literal(type=INT64, value=1)
                  | |   | | |   +-upper_bound=
                  | |   | | |     +-Literal(type=INT64, value=3)
                  | |   | | +-group_variable_list=
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element1#4, array=$element_table.$element1#7)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.e#5, array=$element_table.e#8)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element2#6, array=$element_table.$element2#9)
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.b#12]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabel(parse_location=109-116, label=aml.Account)
                  | |   |   +-target_element_table_list=[aml.Account]
                  | |   +-head=$element_table.p#1
                  | |   +-tail=$element_table.b#12
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=$graph_table.[person_name#13, end_account#14]
                    +-expr_list=
                    | +-person_name#13 :=
                    | | +-GraphGetElementProperty
                    | |   +-type=STRING
                    | |   +-expr=
                    | |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, birthday DATE, data BYTES, id INT64, name STRING>, column=$element_table.p#1)
                    | |   +-property=name(STRING)
                    | +-end_account#14 :=
                    |   +-GraphGetElementProperty
                    |     +-type=INT64
                    |     +-expr=
                    |     | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.b#12)
                    |     +-property=id(INT64)
                    +-input_scan=
                      +-GraphRefScan(column_list=$element_table.[p#1, o#2, a#3, b#12])
==

# Partially labeled MATCH pattern: LHS of quantifier labeled
select gt.* from
graph_table(aml
  match (p:Person)-[o:PersonOwnAccount]->(a:Account)-[e]->{1, 3}(b)
  return p.name
) gt
--

QueryStmt
+-output_column_list=
| +-$graph_table.name#13 AS name [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.name#13]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.name#13]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.name#13]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.name#13]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.p#1, $element_table.o#2, $element_table.a#3, $path_scan.$head#10, $path_scan.$tail#11, $element_table.b#12]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.p#1, $element_table.o#2, $element_table.a#3, $path_scan.$head#10, $path_scan.$tail#11, $element_table.b#12]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.p#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabel(parse_location=44-50, label=aml.Person)
                  | |   | | +-target_element_table_list=[aml.Person]
                  | |   | +-GraphEdgeScan
                  | |   | | +-column_list=[$element_table.o#2]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabel(parse_location=55-71, label=aml.PersonOwnAccount)
                  | |   | | +-target_element_table_list=[aml.PersonOwnAccount]
                  | |   | | +-orientation=RIGHT
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.a#3]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabel(parse_location=77-84, label=aml.Account)
                  | |   | | +-target_element_table_list=[aml.Account]
                  | |   | +-GraphPathScan
                  | |   | | +-column_list=$path_scan.[$head#10, $tail#11]
                  | |   | | +-input_scan_list=
                  | |   | | | +-GraphNodeScan
                  | |   | | | | +-column_list=[$element_table.$element1#4]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | | +-GraphEdgeScan
                  | |   | | | | +-column_list=[$element_table.e#5]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | | | +-orientation=RIGHT
                  | |   | | | +-GraphNodeScan
                  | |   | | |   +-column_list=[$element_table.$element2#6]
                  | |   | | |   +-label_expr=
                  | |   | | |   | +-GraphLabelNaryExpr
                  | |   | | |   |   +-op=OR
                  | |   | | |   |   +-operand_list=
                  | |   | | |   |     +-GraphWildCardLabel
                  | |   | | |   |     +-GraphLabelNaryExpr
                  | |   | | |   |       +-op=NOT
                  | |   | | |   |       +-operand_list=
                  | |   | | |   |         +-GraphWildCardLabel
                  | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | +-head=$path_scan.$head#10
                  | |   | | +-tail=$path_scan.$tail#11
                  | |   | | +-quantifier=
                  | |   | | | +-GraphPathPatternQuantifier
                  | |   | | |   +-lower_bound=
                  | |   | | |   | +-Literal(type=INT64, value=1)
                  | |   | | |   +-upper_bound=
                  | |   | | |     +-Literal(type=INT64, value=3)
                  | |   | | +-group_variable_list=
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element1#4, array=$element_table.$element1#7)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.e#5, array=$element_table.e#8)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element2#6, array=$element_table.$element2#9)
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.b#12]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$element_table.p#1
                  | |   +-tail=$element_table.b#12
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=[$graph_table.name#13]
                    +-expr_list=
                    | +-name#13 :=
                    |   +-GraphGetElementProperty
                    |     +-type=STRING
                    |     +-expr=
                    |     | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, birthday DATE, data BYTES, id INT64, name STRING>, column=$element_table.p#1)
                    |     +-property=name(STRING)
                    +-input_scan=
                      +-GraphRefScan(column_list=$element_table.[p#1, o#2, a#3, b#12])
==

# Partially labeled MATCH pattern: RHS of quantifier labeled
select gt.* from
graph_table(aml
  match (a)-[e]->{1, 3}((b:Account)-[:Transfer]->(c:Account))
  return c.id AS end_account
) gt
--

QueryStmt
+-output_column_list=
| +-$graph_table.end_account#13 AS end_account [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.end_account#13]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.end_account#13]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.end_account#13]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.end_account#13]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.a#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.b#10, $element_table.$element3#11, $element_table.c#12]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.a#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.b#10, $element_table.$element3#11, $element_table.c#12]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.a#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphPathScan
                  | |   | | +-column_list=$path_scan.[$head#8, $tail#9]
                  | |   | | +-input_scan_list=
                  | |   | | | +-GraphNodeScan
                  | |   | | | | +-column_list=[$element_table.$element1#2]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | | +-GraphEdgeScan
                  | |   | | | | +-column_list=[$element_table.e#3]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | | | +-orientation=RIGHT
                  | |   | | | +-GraphNodeScan
                  | |   | | |   +-column_list=[$element_table.$element2#4]
                  | |   | | |   +-label_expr=
                  | |   | | |   | +-GraphLabelNaryExpr
                  | |   | | |   |   +-op=OR
                  | |   | | |   |   +-operand_list=
                  | |   | | |   |     +-GraphWildCardLabel
                  | |   | | |   |     +-GraphLabelNaryExpr
                  | |   | | |   |       +-op=NOT
                  | |   | | |   |       +-operand_list=
                  | |   | | |   |         +-GraphWildCardLabel
                  | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | +-head=$path_scan.$head#8
                  | |   | | +-tail=$path_scan.$tail#9
                  | |   | | +-quantifier=
                  | |   | | | +-GraphPathPatternQuantifier
                  | |   | | |   +-lower_bound=
                  | |   | | |   | +-Literal(type=INT64, value=1)
                  | |   | | |   +-upper_bound=
                  | |   | | |     +-Literal(type=INT64, value=3)
                  | |   | | +-group_variable_list=
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.e#3, array=$element_table.e#6)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
                  | |   | +-GraphPathScan
                  | |   |   +-column_list=$element_table.[b#10, $element3#11, c#12]
                  | |   |   +-input_scan_list=
                  | |   |   | +-GraphNodeScan
                  | |   |   | | +-column_list=[$element_table.b#10]
                  | |   |   | | +-label_expr=
                  | |   |   | | | +-GraphLabel(parse_location=60-67, label=aml.Account)
                  | |   |   | | +-target_element_table_list=[aml.Account]
                  | |   |   | +-GraphEdgeScan
                  | |   |   | | +-column_list=[$element_table.$element3#11]
                  | |   |   | | +-label_expr=
                  | |   |   | | | +-GraphLabel(parse_location=71-79, label=aml.Transfer)
                  | |   |   | | +-target_element_table_list=[aml.Transfer]
                  | |   |   | | +-orientation=RIGHT
                  | |   |   | +-GraphNodeScan
                  | |   |   |   +-column_list=[$element_table.c#12]
                  | |   |   |   +-label_expr=
                  | |   |   |   | +-GraphLabel(parse_location=85-92, label=aml.Account)
                  | |   |   |   +-target_element_table_list=[aml.Account]
                  | |   |   +-head=$element_table.b#10
                  | |   |   +-tail=$element_table.c#12
                  | |   +-head=$element_table.a#1
                  | |   +-tail=$element_table.c#12
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=[$graph_table.end_account#13]
                    +-expr_list=
                    | +-end_account#13 :=
                    |   +-GraphGetElementProperty
                    |     +-type=INT64
                    |     +-expr=
                    |     | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.c#12)
                    |     +-property=id(INT64)
                    +-input_scan=
                      +-GraphRefScan(column_list=$element_table.[a#1, b#10, $element3#11, c#12])

==

# Quantified path only head labeled.
select gt.* from
graph_table(aml
  match ((x)-[y]->(z))((a:Account)-[e]->(b)){1, 3}
  return x.id AS start_id
) gt
--

QueryStmt
+-output_column_list=
| +-$graph_table.start_id#12 AS start_id [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.start_id#12]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.start_id#12]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.start_id#12]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.start_id#12]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.x#1, $element_table.y#2, $element_table.z#3, $path_scan.$head#10, $path_scan.$tail#11]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.x#1, $element_table.y#2, $element_table.z#3, $path_scan.$head#10, $path_scan.$tail#11]
                  | |   +-input_scan_list=
                  | |   | +-GraphPathScan
                  | |   | | +-column_list=$element_table.[x#1, y#2, z#3]
                  | |   | | +-input_scan_list=
                  | |   | | | +-GraphNodeScan
                  | |   | | | | +-column_list=[$element_table.x#1]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | | +-GraphEdgeScan
                  | |   | | | | +-column_list=[$element_table.y#2]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | | | +-orientation=RIGHT
                  | |   | | | +-GraphNodeScan
                  | |   | | |   +-column_list=[$element_table.z#3]
                  | |   | | |   +-label_expr=
                  | |   | | |   | +-GraphLabelNaryExpr
                  | |   | | |   |   +-op=OR
                  | |   | | |   |   +-operand_list=
                  | |   | | |   |     +-GraphWildCardLabel
                  | |   | | |   |     +-GraphLabelNaryExpr
                  | |   | | |   |       +-op=NOT
                  | |   | | |   |       +-operand_list=
                  | |   | | |   |         +-GraphWildCardLabel
                  | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | +-head=$element_table.x#1
                  | |   | | +-tail=$element_table.z#3
                  | |   | +-GraphPathScan
                  | |   |   +-column_list=$path_scan.[$head#10, $tail#11]
                  | |   |   +-input_scan_list=
                  | |   |   | +-GraphNodeScan
                  | |   |   | | +-column_list=[$element_table.a#4]
                  | |   |   | | +-label_expr=
                  | |   |   | | | +-GraphLabel(parse_location=59-66, label=aml.Account)
                  | |   |   | | +-target_element_table_list=[aml.Account]
                  | |   |   | +-GraphEdgeScan
                  | |   |   | | +-column_list=[$element_table.e#5]
                  | |   |   | | +-label_expr=
                  | |   |   | | | +-GraphLabelNaryExpr
                  | |   |   | | |   +-op=OR
                  | |   |   | | |   +-operand_list=
                  | |   |   | | |     +-GraphWildCardLabel
                  | |   |   | | |     +-GraphLabelNaryExpr
                  | |   |   | | |       +-op=NOT
                  | |   |   | | |       +-operand_list=
                  | |   |   | | |         +-GraphWildCardLabel
                  | |   |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   |   | | +-orientation=RIGHT
                  | |   |   | +-GraphNodeScan
                  | |   |   |   +-column_list=[$element_table.b#6]
                  | |   |   |   +-label_expr=
                  | |   |   |   | +-GraphLabelNaryExpr
                  | |   |   |   |   +-op=OR
                  | |   |   |   |   +-operand_list=
                  | |   |   |   |     +-GraphWildCardLabel
                  | |   |   |   |     +-GraphLabelNaryExpr
                  | |   |   |   |       +-op=NOT
                  | |   |   |   |       +-operand_list=
                  | |   |   |   |         +-GraphWildCardLabel
                  | |   |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   |   +-head=$path_scan.$head#10
                  | |   |   +-tail=$path_scan.$tail#11
                  | |   |   +-quantifier=
                  | |   |   | +-GraphPathPatternQuantifier
                  | |   |   |   +-lower_bound=
                  | |   |   |   | +-Literal(type=INT64, value=1)
                  | |   |   |   +-upper_bound=
                  | |   |   |     +-Literal(type=INT64, value=3)
                  | |   |   +-group_variable_list=
                  | |   |     +-GraphMakeArrayVariable(element=$element_table.a#4, array=$element_table.a#7)
                  | |   |     +-GraphMakeArrayVariable(element=$element_table.e#5, array=$element_table.e#8)
                  | |   |     +-GraphMakeArrayVariable(element=$element_table.b#6, array=$element_table.b#9)
                  | |   +-head=$element_table.x#1
                  | |   +-tail=$path_scan.$tail#11
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=[$graph_table.start_id#12]
                    +-expr_list=
                    | +-start_id#12 :=
                    |   +-GraphGetElementProperty
                    |     +-type=INT64
                    |     +-expr=
                    |     | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.x#1)
                    |     +-property=id(INT64)
                    +-input_scan=
                      +-GraphRefScan(column_list=$element_table.[x#1, y#2, z#3])
==

# Quantified path only tail labeled.
select gt.* from
graph_table(aml
  match ((a)-[e]->(b:Account)){1, 3}(y)
  return y.id AS end_account
) gt
--
QueryStmt
+-output_column_list=
| +-$graph_table.end_account#10 AS end_account [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.end_account#10]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.end_account#10]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.end_account#10]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.end_account#10]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$path_scan.$head#7, $path_scan.$tail#8, $element_table.y#9]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$path_scan.$head#7, $path_scan.$tail#8, $element_table.y#9]
                  | |   +-input_scan_list=
                  | |   | +-GraphPathScan
                  | |   | | +-column_list=$path_scan.[$head#7, $tail#8]
                  | |   | | +-input_scan_list=
                  | |   | | | +-GraphNodeScan
                  | |   | | | | +-column_list=[$element_table.a#1]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | | +-GraphEdgeScan
                  | |   | | | | +-column_list=[$element_table.e#2]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | | | +-orientation=RIGHT
                  | |   | | | +-GraphNodeScan
                  | |   | | |   +-column_list=[$element_table.b#3]
                  | |   | | |   +-label_expr=
                  | |   | | |   | +-GraphLabel(parse_location=54-61, label=aml.Account)
                  | |   | | |   +-target_element_table_list=[aml.Account]
                  | |   | | +-head=$path_scan.$head#7
                  | |   | | +-tail=$path_scan.$tail#8
                  | |   | | +-quantifier=
                  | |   | | | +-GraphPathPatternQuantifier
                  | |   | | |   +-lower_bound=
                  | |   | | |   | +-Literal(type=INT64, value=1)
                  | |   | | |   +-upper_bound=
                  | |   | | |     +-Literal(type=INT64, value=3)
                  | |   | | +-group_variable_list=
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.a#1, array=$element_table.a#4)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.e#2, array=$element_table.e#5)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.b#3, array=$element_table.b#6)
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.y#9]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$path_scan.$head#7
                  | |   +-tail=$element_table.y#9
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=[$graph_table.end_account#10]
                    +-expr_list=
                    | +-end_account#10 :=
                    |   +-GraphGetElementProperty
                    |     +-type=INT64
                    |     +-expr=
                    |     | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.y#9)
                    |     +-property=id(INT64)
                    +-input_scan=
                      +-GraphRefScan(column_list=[$element_table.y#9])
==

select gt.* from graph_table(aml
  MATCH -[a]->
  WHERE EXISTS (
    select * from graph_table(aml
       MATCH -[b WHERE SAME(b, a)]->{5}
       RETURN 1 AS One
    )
  )
  RETURN 1 AS One_one
) gt
--
QueryStmt
+-output_column_list=
| +-$graph_table.One_one#13 AS One_one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.One_one#13]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.One_one#13]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.One_one#13]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.One_one#13]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=$element_table.[$element1#1, a#2, $element2#3]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=$element_table.[$element1#1, a#2, $element2#3]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.$element1#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphEdgeScan
                  | |   | | +-column_list=[$element_table.a#2]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | +-orientation=RIGHT
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.$element2#3]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$element_table.$element1#1
                  | |   +-tail=$element_table.$element2#3
                  | +-filter_expr=
                  | | +-SubqueryExpr
                  | |   +-type=BOOL
                  | |   +-subquery_type=EXISTS
                  | |   +-parameter_list=
                  | |   | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, column=$element_table.a#2)
                  | |   +-subquery=
                  | |     +-ProjectScan
                  | |       +-column_list=[$graph_table.One#12]
                  | |       +-input_scan=
                  | |         +-GraphTableScan
                  | |           +-column_list=[$graph_table.One#12]
                  | |           +-property_graph=aml
                  | |           +-input_scan=
                  | |             +-GraphLinearScan
                  | |               +-column_list=[$graph_table.One#12]
                  | |               +-scan_list=
                  | |                 +-GraphLinearScan
                  | |                   +-column_list=[$graph_table.One#12]
                  | |                   +-scan_list=
                  | |                     +-GraphScan
                  | |                     | +-column_list=$path_scan.[$head#10, $tail#11]
                  | |                     | +-input_scan_list=
                  | |                     | | +-GraphPathScan
                  | |                     | |   +-column_list=$path_scan.[$head#10, $tail#11]
                  | |                     | |   +-input_scan_list=
                  | |                     | |   | +-GraphNodeScan
                  | |                     | |   | | +-column_list=[$element_table.$element1#4]
                  | |                     | |   | | +-label_expr=
                  | |                     | |   | | | +-GraphLabelNaryExpr
                  | |                     | |   | | |   +-op=OR
                  | |                     | |   | | |   +-operand_list=
                  | |                     | |   | | |     +-GraphWildCardLabel
                  | |                     | |   | | |     +-GraphLabelNaryExpr
                  | |                     | |   | | |       +-op=NOT
                  | |                     | |   | | |       +-operand_list=
                  | |                     | |   | | |         +-GraphWildCardLabel
                  | |                     | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |                     | |   | +-GraphEdgeScan
                  | |                     | |   | | +-column_list=[$element_table.b#5]
                  | |                     | |   | | +-filter_expr=
                  | |                     | |   | | | +-FunctionCall(ZetaSQL:same(repeated(2) GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>) -> BOOL)
                  | |                     | |   | | |   +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, column=$element_table.b#5)
                  | |                     | |   | | |   +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, column=$element_table.a#2, is_correlated=TRUE)
                  | |                     | |   | | +-label_expr=
                  | |                     | |   | | | +-GraphLabelNaryExpr
                  | |                     | |   | | |   +-op=OR
                  | |                     | |   | | |   +-operand_list=
                  | |                     | |   | | |     +-GraphWildCardLabel
                  | |                     | |   | | |     +-GraphLabelNaryExpr
                  | |                     | |   | | |       +-op=NOT
                  | |                     | |   | | |       +-operand_list=
                  | |                     | |   | | |         +-GraphWildCardLabel
                  | |                     | |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |                     | |   | | +-orientation=RIGHT
                  | |                     | |   | +-GraphNodeScan
                  | |                     | |   |   +-column_list=[$element_table.$element2#6]
                  | |                     | |   |   +-label_expr=
                  | |                     | |   |   | +-GraphLabelNaryExpr
                  | |                     | |   |   |   +-op=OR
                  | |                     | |   |   |   +-operand_list=
                  | |                     | |   |   |     +-GraphWildCardLabel
                  | |                     | |   |   |     +-GraphLabelNaryExpr
                  | |                     | |   |   |       +-op=NOT
                  | |                     | |   |   |       +-operand_list=
                  | |                     | |   |   |         +-GraphWildCardLabel
                  | |                     | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |                     | |   +-head=$path_scan.$head#10
                  | |                     | |   +-tail=$path_scan.$tail#11
                  | |                     | |   +-quantifier=
                  | |                     | |   | +-GraphPathPatternQuantifier
                  | |                     | |   |   +-lower_bound=
                  | |                     | |   |   | +-Literal(type=INT64, value=5)
                  | |                     | |   |   +-upper_bound=
                  | |                     | |   |     +-Literal(type=INT64, value=5)
                  | |                     | |   +-group_variable_list=
                  | |                     | |     +-GraphMakeArrayVariable(element=$element_table.$element1#4, array=$element_table.$element1#7)
                  | |                     | |     +-GraphMakeArrayVariable(element=$element_table.b#5, array=$element_table.b#8)
                  | |                     | |     +-GraphMakeArrayVariable(element=$element_table.$element2#6, array=$element_table.$element2#9)
                  | |                     | +-input_scan=
                  | |                     |   +-SingleRowScan
                  | |                     +-ProjectScan
                  | |                       +-column_list=[$graph_table.One#12]
                  | |                       +-expr_list=
                  | |                       | +-One#12 := Literal(type=INT64, value=1)
                  | |                       +-input_scan=
                  | |                         +-GraphRefScan
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=[$graph_table.One_one#13]
                    +-expr_list=
                    | +-One_one#13 := Literal(type=INT64, value=1)
                    +-input_scan=
                      +-GraphRefScan(column_list=$element_table.[$element1#1, a#2, $element2#3])
==

[language_features=NONE,+SQL_GRAPH,+SQL_GRAPH_EXPOSE_GRAPH_ELEMENT,+SQL_GRAPH_ADVANCED_QUERY,+SQL_GRAPH_BOUNDED_PATH_QUANTIFICATION]
# Quantified paths implicitly exposing group variables through optional columns
SELECT ARRAY_LENGTH(e) AS e_arr
  from graph_table(
    aml
    match ((a:Account)-[e:Transfer]->(b:Account)){3}
    RETURN *
  )
--
QueryStmt
+-output_column_list=
| +-$query.e_arr#12 AS e_arr [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.e_arr#12]
    +-expr_list=
    | +-e_arr#12 :=
    |   +-FunctionCall(ZetaSQL:array_length(ARRAY<GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>>) -> INT64)
    |     +-ColumnRef(type=ARRAY<GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>>, column=$graph_table.e#10)
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[a#9, e#10, b#11]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=$graph_table.[a#9, e#10, b#11]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=$graph_table.[a#9, e#10, b#11]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$path_scan.$head#7, $element_table.a#4, $element_table.e#5, $element_table.b#6, $path_scan.$tail#8]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$path_scan.$head#7, $element_table.a#4, $element_table.e#5, $element_table.b#6, $path_scan.$tail#8]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.a#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabel(parse_location=154-161, label=aml.Account)
                  | |   | | +-target_element_table_list=[aml.Account]
                  | |   | +-GraphEdgeScan
                  | |   | | +-column_list=[$element_table.e#2]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabel(parse_location=166-174, label=aml.Transfer)
                  | |   | | +-target_element_table_list=[aml.Transfer]
                  | |   | | +-orientation=RIGHT
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.b#3]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabel(parse_location=180-187, label=aml.Account)
                  | |   |   +-target_element_table_list=[aml.Account]
                  | |   +-head=$path_scan.$head#7
                  | |   +-tail=$path_scan.$tail#8
                  | |   +-quantifier=
                  | |   | +-GraphPathPatternQuantifier
                  | |   |   +-lower_bound=
                  | |   |   | +-Literal(type=INT64, value=3)
                  | |   |   +-upper_bound=
                  | |   |     +-Literal(type=INT64, value=3)
                  | |   +-group_variable_list=
                  | |     +-GraphMakeArrayVariable(element=$element_table.a#1, array=$element_table.a#4)
                  | |     +-GraphMakeArrayVariable(element=$element_table.e#2, array=$element_table.e#5)
                  | |     +-GraphMakeArrayVariable(element=$element_table.b#3, array=$element_table.b#6)
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=$graph_table.[a#9, e#10, b#11]
                    +-expr_list=
                    | +-a#9 := ColumnRef(type=ARRAY<GRAPH_NODE(aml)<balance UINT64, id INT64>>, column=$element_table.a#4)
                    | +-e#10 := ColumnRef(type=ARRAY<GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>>, column=$element_table.e#5)
                    | +-b#11 := ColumnRef(type=ARRAY<GRAPH_NODE(aml)<balance UINT64, id INT64>>, column=$element_table.b#6)
                    +-input_scan=
                      +-GraphRefScan(column_list=$element_table.[a#4, e#5, b#6])
