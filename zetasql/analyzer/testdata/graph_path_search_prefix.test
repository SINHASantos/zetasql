[default language_features=NONE,+SQL_GRAPH,+SQL_GRAPH_ADVANCED_QUERY,+SQL_GRAPH_BOUNDED_PATH_QUANTIFICATION,+SQL_GRAPH_PATH_SEARCH_PREFIX_PATH_COUNT]
[default no_test_extract_table_names]
[default run_sqlbuilder]

# ALL SHORTEST is a resolver error.

select * from graph_table(
  aml
  MATCH ALL SHORTEST -[b]->,
        ANY (a)->(a)-[b]->(a)
  WHERE src.id = 1
  COLUMNS (1 AS one)
)
--

ERROR: ALL SHORTEST search is unimplemented [at 5:9]
  MATCH ALL SHORTEST -[b]->,
        ^
==

# Search prefix multiply declared var rule: boundary singleton var `a` across statements is OK

select * from graph_table(
  aml
  MATCH ANY (a)-[b]->,
        ANY (a)-[f]->(a),
        ANY (a)->((d)-[y]->(z)){2, 3},
        (a:Account)
  COLUMNS (1 AS one)
)
--


QueryStmt
+-output_column_list=
| +-$graph_table.one#18 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#18]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#18]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.a#1, $element_table.b#2, $element_table.$element1#3, $element_table.a#4, $element_table.f#5, $element_table.a#6, $element_table.a#7, $element_table.$element2#8, $path_scan.$head#15, $path_scan.$tail#16, $element_table.a#17]
        |   +-input_scan_list=
        |   | +-GraphPathScan
        |   | | +-column_list=$element_table.[a#1, b#2, $element1#3]
        |   | | +-input_scan_list=
        |   | | | +-GraphNodeScan
        |   | | | | +-column_list=[$element_table.a#1]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=AND
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabel(parse_location=132-139, label=aml.Account)
        |   | | | | +-target_element_table_list=[aml.Account]
        |   | | | +-GraphEdgeScan
        |   | | | | +-column_list=[$element_table.b#2]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=OR
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=NOT
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   | | | | +-orientation=RIGHT
        |   | | | +-GraphNodeScan
        |   | | |   +-column_list=[$element_table.$element1#3]
        |   | | |   +-label_expr=
        |   | | |   | +-GraphLabelNaryExpr
        |   | | |   |   +-op=OR
        |   | | |   |   +-operand_list=
        |   | | |   |     +-GraphWildCardLabel
        |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   |       +-op=NOT
        |   | | |   |       +-operand_list=
        |   | | |   |         +-GraphWildCardLabel
        |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | +-head=$element_table.a#1
        |   | | +-tail=$element_table.$element1#3
        |   | | +-search_prefix=
        |   | |   +-GraphPathSearchPrefix(type=ANY)
        |   | +-GraphPathScan
        |   | | +-column_list=$element_table.[a#4, f#5, a#6]
        |   | | +-input_scan_list=
        |   | | | +-GraphNodeScan
        |   | | | | +-column_list=[$element_table.a#4]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=AND
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabel(parse_location=132-139, label=aml.Account)
        |   | | | | +-target_element_table_list=[aml.Account]
        |   | | | +-GraphEdgeScan
        |   | | | | +-column_list=[$element_table.f#5]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=OR
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=NOT
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   | | | | +-orientation=RIGHT
        |   | | | +-GraphNodeScan
        |   | | |   +-column_list=[$element_table.a#6]
        |   | | |   +-label_expr=
        |   | | |   | +-GraphLabelNaryExpr
        |   | | |   |   +-op=AND
        |   | | |   |   +-operand_list=
        |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   |     | +-op=OR
        |   | | |   |     | +-operand_list=
        |   | | |   |     |   +-GraphWildCardLabel
        |   | | |   |     |   +-GraphLabelNaryExpr
        |   | | |   |     |     +-op=NOT
        |   | | |   |     |     +-operand_list=
        |   | | |   |     |       +-GraphWildCardLabel
        |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   |     | +-op=AND
        |   | | |   |     | +-operand_list=
        |   | | |   |     |   +-GraphLabelNaryExpr
        |   | | |   |     |   | +-op=OR
        |   | | |   |     |   | +-operand_list=
        |   | | |   |     |   |   +-GraphWildCardLabel
        |   | | |   |     |   |   +-GraphLabelNaryExpr
        |   | | |   |     |   |     +-op=NOT
        |   | | |   |     |   |     +-operand_list=
        |   | | |   |     |   |       +-GraphWildCardLabel
        |   | | |   |     |   +-GraphLabelNaryExpr
        |   | | |   |     |     +-op=OR
        |   | | |   |     |     +-operand_list=
        |   | | |   |     |       +-GraphWildCardLabel
        |   | | |   |     |       +-GraphLabelNaryExpr
        |   | | |   |     |         +-op=NOT
        |   | | |   |     |         +-operand_list=
        |   | | |   |     |           +-GraphWildCardLabel
        |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   |     | +-op=OR
        |   | | |   |     | +-operand_list=
        |   | | |   |     |   +-GraphWildCardLabel
        |   | | |   |     |   +-GraphLabelNaryExpr
        |   | | |   |     |     +-op=NOT
        |   | | |   |     |     +-operand_list=
        |   | | |   |     |       +-GraphWildCardLabel
        |   | | |   |     +-GraphLabel(parse_location=132-139, label=aml.Account)
        |   | | |   +-target_element_table_list=[aml.Account]
        |   | | +-filter_expr=
        |   | | | +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<balance UINT64, id INT64>, GRAPH_NODE(aml)<balance UINT64, id INT64>) -> BOOL)
        |   | | |   +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#4)
        |   | | |   +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#6)
        |   | | +-head=$element_table.a#4
        |   | | +-tail=$element_table.a#6
        |   | | +-search_prefix=
        |   | |   +-GraphPathSearchPrefix(type=ANY)
        |   | +-GraphPathScan
        |   | | +-column_list=[$element_table.a#7, $element_table.$element2#8, $path_scan.$head#15, $path_scan.$tail#16]
        |   | | +-input_scan_list=
        |   | | | +-GraphNodeScan
        |   | | | | +-column_list=[$element_table.a#7]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=AND
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabel(parse_location=132-139, label=aml.Account)
        |   | | | | +-target_element_table_list=[aml.Account]
        |   | | | +-GraphEdgeScan
        |   | | | | +-column_list=[$element_table.$element2#8]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=OR
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=NOT
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   | | | | +-orientation=RIGHT
        |   | | | +-GraphPathScan
        |   | | |   +-column_list=$path_scan.[$head#15, $tail#16]
        |   | | |   +-input_scan_list=
        |   | | |   | +-GraphNodeScan
        |   | | |   | | +-column_list=[$element_table.d#9]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=OR
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=NOT
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   | +-GraphEdgeScan
        |   | | |   | | +-column_list=[$element_table.y#10]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=OR
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=NOT
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   | | |   | | +-orientation=RIGHT
        |   | | |   | +-GraphNodeScan
        |   | | |   |   +-column_list=[$element_table.z#11]
        |   | | |   |   +-label_expr=
        |   | | |   |   | +-GraphLabelNaryExpr
        |   | | |   |   |   +-op=OR
        |   | | |   |   |   +-operand_list=
        |   | | |   |   |     +-GraphWildCardLabel
        |   | | |   |   |     +-GraphLabelNaryExpr
        |   | | |   |   |       +-op=NOT
        |   | | |   |   |       +-operand_list=
        |   | | |   |   |         +-GraphWildCardLabel
        |   | | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   +-head=$path_scan.$head#15
        |   | | |   +-tail=$path_scan.$tail#16
        |   | | |   +-quantifier=
        |   | | |   | +-GraphPathPatternQuantifier
        |   | | |   |   +-lower_bound=
        |   | | |   |   | +-Literal(type=INT64, value=2)
        |   | | |   |   +-upper_bound=
        |   | | |   |     +-Literal(type=INT64, value=3)
        |   | | |   +-group_variable_list=
        |   | | |     +-GraphMakeArrayVariable(element=$element_table.d#9, array=$element_table.d#12)
        |   | | |     +-GraphMakeArrayVariable(element=$element_table.y#10, array=$element_table.y#13)
        |   | | |     +-GraphMakeArrayVariable(element=$element_table.z#11, array=$element_table.z#14)
        |   | | +-head=$element_table.a#7
        |   | | +-tail=$path_scan.$tail#16
        |   | | +-search_prefix=
        |   | |   +-GraphPathSearchPrefix(type=ANY)
        |   | +-GraphPathScan
        |   |   +-column_list=[$element_table.a#17]
        |   |   +-input_scan_list=
        |   |   | +-GraphNodeScan
        |   |   |   +-column_list=[$element_table.a#17]
        |   |   |   +-label_expr=
        |   |   |   | +-GraphLabelNaryExpr
        |   |   |   |   +-op=AND
        |   |   |   |   +-operand_list=
        |   |   |   |     +-GraphLabelNaryExpr
        |   |   |   |     | +-op=OR
        |   |   |   |     | +-operand_list=
        |   |   |   |     |   +-GraphWildCardLabel
        |   |   |   |     |   +-GraphLabelNaryExpr
        |   |   |   |     |     +-op=NOT
        |   |   |   |     |     +-operand_list=
        |   |   |   |     |       +-GraphWildCardLabel
        |   |   |   |     +-GraphLabelNaryExpr
        |   |   |   |     | +-op=AND
        |   |   |   |     | +-operand_list=
        |   |   |   |     |   +-GraphLabelNaryExpr
        |   |   |   |     |   | +-op=OR
        |   |   |   |     |   | +-operand_list=
        |   |   |   |     |   |   +-GraphWildCardLabel
        |   |   |   |     |   |   +-GraphLabelNaryExpr
        |   |   |   |     |   |     +-op=NOT
        |   |   |   |     |   |     +-operand_list=
        |   |   |   |     |   |       +-GraphWildCardLabel
        |   |   |   |     |   +-GraphLabelNaryExpr
        |   |   |   |     |     +-op=OR
        |   |   |   |     |     +-operand_list=
        |   |   |   |     |       +-GraphWildCardLabel
        |   |   |   |     |       +-GraphLabelNaryExpr
        |   |   |   |     |         +-op=NOT
        |   |   |   |     |         +-operand_list=
        |   |   |   |     |           +-GraphWildCardLabel
        |   |   |   |     +-GraphLabelNaryExpr
        |   |   |   |     | +-op=OR
        |   |   |   |     | +-operand_list=
        |   |   |   |     |   +-GraphWildCardLabel
        |   |   |   |     |   +-GraphLabelNaryExpr
        |   |   |   |     |     +-op=NOT
        |   |   |   |     |     +-operand_list=
        |   |   |   |     |       +-GraphWildCardLabel
        |   |   |   |     +-GraphLabel(parse_location=132-139, label=aml.Account)
        |   |   |   +-target_element_table_list=[aml.Account]
        |   |   +-head=$element_table.a#17
        |   |   +-tail=$element_table.a#17
        |   +-filter_expr=
        |     +-FunctionCall(ZetaSQL:$and(BOOL, repeated(2) BOOL) -> BOOL)
        |       +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<balance UINT64, id INT64>, GRAPH_NODE(aml)<balance UINT64, id INT64>) -> BOOL)
        |       | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#1)
        |       | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#4)
        |       +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<balance UINT64, id INT64>, GRAPH_NODE(aml)<balance UINT64, id INT64>) -> BOOL)
        |       | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#1)
        |       | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#7)
        |       +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<balance UINT64, id INT64>, GRAPH_NODE(aml)<balance UINT64, id INT64>) -> BOOL)
        |         +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#1)
        |         +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#17)
        +-shape_expr_list=
          +-one#18 := Literal(type=INT64, value=1)
==

# Search prefix multiply declared var rule: group var `a` and group var `a` is error

select * from graph_table(
  aml
  MATCH ANY ((a)-[b]->(c)){1, 3},
        ANY ((a)-[y]->(z)){2, 3}
  WHERE src.id = 1
  COLUMNS (1 AS one)
)
--


ERROR: Variable name: a is ambiguous group variable in the GraphPattern [at 3:9]
  MATCH ANY ((a)-[b]->(c)){1, 3},
        ^
==

# Search prefix multiply declared var rule: singleton boundary var `a` and group var `a` is error, even if the group var is on the boundary.

select * from graph_table(
  aml
  MATCH ANY (a)-[b]->(c),
        ANY ((a)-[y]->(z)){2, 3}
  WHERE src.id = 1
  COLUMNS (1 AS one)
)
--

ERROR: `a` is not a graph element column and cannot be redeclared [at 3:9]
  MATCH ANY (a)-[b]->(c),
        ^
==

# Search prefix multiply declared var rule: singleton non-boundary var `a` and group var `a` is error, even if the group var is on the boundary.

select * from graph_table(
  aml
  MATCH ANY (d)->(a)-[b]->(c),
        ANY ((a)-[y]->(z)){2, 3}
  WHERE src.id = 1
  COLUMNS (1 AS one)
)
--
ERROR: `a` is not a graph element column and cannot be redeclared [at 3:9]
  MATCH ANY (d)->(a)-[b]->(c),
        ^
==

# Search prefix multiply declared var rule: singleton non-boundary var `a` and group var `a` is error, even if the group var is on the boundary.

select * from graph_table(
  aml
  MATCH ANY ((a)-[y]->(z)){2, 3},
        ANY (d)->(a)-[b]->(c)
  WHERE true
  COLUMNS (1 AS one)
)
--
ERROR: `a` is not a graph element column and cannot be redeclared [at 3:9]
  MATCH ANY ((a)-[y]->(z)){2, 3},
        ^
==

# Search prefix multiply declared var rule: singleton boundary var `a` (which is also multiply declared inside the 1st path) and group var `a` is error

select * from graph_table(
  aml
  MATCH ANY (a)->(a)-[b]->(c),
        ANY ((a)-[y]->(z)){2, 3}
  WHERE src.id = 1
  COLUMNS (1 AS one)
)
--
ERROR: `a` is not a graph element column and cannot be redeclared [at 3:9]
  MATCH ANY (a)->(a)-[b]->(c),
        ^
==

# Search prefix multiply declared var rule: non-boundary singleton `a` and boundary singleton `a` is error

select * from graph_table(
  aml
  MATCH ANY (d)->(a)-[b]->(c),
        ANY (a)-[y]->{2, 3}
  WHERE src.id = 1
  COLUMNS (1 AS one)
)
--

ERROR: Variable `a` is inside a path under a selection prefix (`ANY`). It cannot be reused in other paths within the same MATCH statement, unless it is the endpoint node of such paths. Maybe use separated MATCHes for each path? [at 3:9]
  MATCH ANY (d)->(a)-[b]->(c),
        ^
==

# Search prefix multiply declared var rule: non-boundary singleton `a` and exterior `a` is error

select * from graph_table(
  aml
  MATCH ANY (d)->(a)-[b]->(c),
        (a:Account)-[y]->{2, 3}
  WHERE src.id = 1
  COLUMNS (1 AS one)
)
--

ERROR: Variable `a` is inside a path under a selection prefix (`ANY`). It cannot be reused in other paths within the same MATCH statement, unless it is the endpoint node of such paths. Maybe use separated MATCHes for each path? [at 3:9]
  MATCH ANY (d)->(a)-[b]->(c),
        ^
==

# Search prefix multiply declared var rule: different types should still not work.

select * from graph_table(
  aml
  MATCH ANY -[a]->,
        ANY (a:Account)-[y]->{2, 3}
  WHERE src.id = 1
  COLUMNS (1 AS one)
)
--

ERROR: No matching signature for operator = for argument types: GRAPH_EDGE(aml)<>, GRAPH_NODE(aml)<balance UINT64, id INT64>
  Signature: T1 = T1
    Argument 1: expected T1, found GRAPH_EDGE(aml)<>: which is not allowed for ANY arguments
  Signature: INT64 = UINT64
    Argument 1: Unable to coerce type GRAPH_EDGE(aml)<> to expected type INT64
  Signature: UINT64 = INT64
    Argument 1: Unable to coerce type GRAPH_EDGE(aml)<> to expected type UINT64 [at 3:9]
  MATCH ANY -[a]->,
        ^
==

# Search prefix multiply declared var rule: non-boundary edge singleton `b` and anything else is not OK

select * from graph_table(
  aml
  MATCH ANY SHORTEST -[b]->,
        ANY (a)->(a)-[b]->(a)
  WHERE src.id = 1
  COLUMNS (1 AS one)
)
--

ERROR: Variable `b` is inside a path under a selection prefix (`SHORTEST`). It cannot be reused in other paths within the same MATCH statement, unless it is the endpoint node of such paths. Maybe use separated MATCHes for each path? [at 3:9]
  MATCH ANY SHORTEST -[b]->,
        ^
==

# Search prefix multiply declared var rule: boundary singleton `a` (also multiply declared multiple times) and others is OK

select * from graph_table(
  aml
  MATCH ANY (a)->(a)-[b]->(c),
        ANY (a)->(a)-[e]->(a),
        ANY (a)->((d)-[y]->(z)){2, 3},
        (a:Account)-[x]->{2, 3}
  COLUMNS (1 AS one)
)
--

QueryStmt
+-output_column_list=
| +-$graph_table.one#30 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#30]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#30]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.a#1, $element_table.$element1#2, $element_table.a#3, $element_table.b#4, $element_table.c#5, $element_table.a#6, $element_table.$element2#7, $element_table.a#8, $element_table.e#9, $element_table.a#10, $element_table.a#11, $element_table.$element3#12, $path_scan.$head#19, $path_scan.$tail#20, $element_table.a#21, $path_scan.$head#28, $path_scan.$tail#29]
        |   +-input_scan_list=
        |   | +-GraphPathScan
        |   | | +-column_list=$element_table.[a#1, $element1#2, a#3, b#4, c#5]
        |   | | +-input_scan_list=
        |   | | | +-GraphNodeScan
        |   | | | | +-column_list=[$element_table.a#1]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=AND
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabel(parse_location=145-152, label=aml.Account)
        |   | | | | +-target_element_table_list=[aml.Account]
        |   | | | +-GraphEdgeScan
        |   | | | | +-column_list=[$element_table.$element1#2]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=OR
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=NOT
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   | | | | +-orientation=RIGHT
        |   | | | +-GraphNodeScan
        |   | | | | +-column_list=[$element_table.a#3]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=AND
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabel(parse_location=145-152, label=aml.Account)
        |   | | | | +-target_element_table_list=[aml.Account]
        |   | | | +-GraphEdgeScan
        |   | | | | +-column_list=[$element_table.b#4]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=OR
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=NOT
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   | | | | +-orientation=RIGHT
        |   | | | +-GraphNodeScan
        |   | | |   +-column_list=[$element_table.c#5]
        |   | | |   +-label_expr=
        |   | | |   | +-GraphLabelNaryExpr
        |   | | |   |   +-op=OR
        |   | | |   |   +-operand_list=
        |   | | |   |     +-GraphWildCardLabel
        |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   |       +-op=NOT
        |   | | |   |       +-operand_list=
        |   | | |   |         +-GraphWildCardLabel
        |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | +-filter_expr=
        |   | | | +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<balance UINT64, id INT64>, GRAPH_NODE(aml)<balance UINT64, id INT64>) -> BOOL)
        |   | | |   +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#1)
        |   | | |   +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#3)
        |   | | +-head=$element_table.a#1
        |   | | +-tail=$element_table.c#5
        |   | | +-search_prefix=
        |   | |   +-GraphPathSearchPrefix(type=ANY)
        |   | +-GraphPathScan
        |   | | +-column_list=$element_table.[a#6, $element2#7, a#8, e#9, a#10]
        |   | | +-input_scan_list=
        |   | | | +-GraphNodeScan
        |   | | | | +-column_list=[$element_table.a#6]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=AND
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabel(parse_location=145-152, label=aml.Account)
        |   | | | | +-target_element_table_list=[aml.Account]
        |   | | | +-GraphEdgeScan
        |   | | | | +-column_list=[$element_table.$element2#7]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=OR
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=NOT
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   | | | | +-orientation=RIGHT
        |   | | | +-GraphNodeScan
        |   | | | | +-column_list=[$element_table.a#8]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=AND
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabel(parse_location=145-152, label=aml.Account)
        |   | | | | +-target_element_table_list=[aml.Account]
        |   | | | +-GraphEdgeScan
        |   | | | | +-column_list=[$element_table.e#9]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=OR
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=NOT
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   | | | | +-orientation=RIGHT
        |   | | | +-GraphNodeScan
        |   | | |   +-column_list=[$element_table.a#10]
        |   | | |   +-label_expr=
        |   | | |   | +-GraphLabelNaryExpr
        |   | | |   |   +-op=AND
        |   | | |   |   +-operand_list=
        |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   |     | +-op=AND
        |   | | |   |     | +-operand_list=
        |   | | |   |     |   +-GraphLabelNaryExpr
        |   | | |   |     |   | +-op=OR
        |   | | |   |     |   | +-operand_list=
        |   | | |   |     |   |   +-GraphWildCardLabel
        |   | | |   |     |   |   +-GraphLabelNaryExpr
        |   | | |   |     |   |     +-op=NOT
        |   | | |   |     |   |     +-operand_list=
        |   | | |   |     |   |       +-GraphWildCardLabel
        |   | | |   |     |   +-GraphLabelNaryExpr
        |   | | |   |     |     +-op=OR
        |   | | |   |     |     +-operand_list=
        |   | | |   |     |       +-GraphWildCardLabel
        |   | | |   |     |       +-GraphLabelNaryExpr
        |   | | |   |     |         +-op=NOT
        |   | | |   |     |         +-operand_list=
        |   | | |   |     |           +-GraphWildCardLabel
        |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   |     | +-op=AND
        |   | | |   |     | +-operand_list=
        |   | | |   |     |   +-GraphLabelNaryExpr
        |   | | |   |     |   | +-op=OR
        |   | | |   |     |   | +-operand_list=
        |   | | |   |     |   |   +-GraphWildCardLabel
        |   | | |   |     |   |   +-GraphLabelNaryExpr
        |   | | |   |     |   |     +-op=NOT
        |   | | |   |     |   |     +-operand_list=
        |   | | |   |     |   |       +-GraphWildCardLabel
        |   | | |   |     |   +-GraphLabelNaryExpr
        |   | | |   |     |   | +-op=OR
        |   | | |   |     |   | +-operand_list=
        |   | | |   |     |   |   +-GraphWildCardLabel
        |   | | |   |     |   |   +-GraphLabelNaryExpr
        |   | | |   |     |   |     +-op=NOT
        |   | | |   |     |   |     +-operand_list=
        |   | | |   |     |   |       +-GraphWildCardLabel
        |   | | |   |     |   +-GraphLabelNaryExpr
        |   | | |   |     |     +-op=OR
        |   | | |   |     |     +-operand_list=
        |   | | |   |     |       +-GraphWildCardLabel
        |   | | |   |     |       +-GraphLabelNaryExpr
        |   | | |   |     |         +-op=NOT
        |   | | |   |     |         +-operand_list=
        |   | | |   |     |           +-GraphWildCardLabel
        |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   |     | +-op=OR
        |   | | |   |     | +-operand_list=
        |   | | |   |     |   +-GraphWildCardLabel
        |   | | |   |     |   +-GraphLabelNaryExpr
        |   | | |   |     |     +-op=NOT
        |   | | |   |     |     +-operand_list=
        |   | | |   |     |       +-GraphWildCardLabel
        |   | | |   |     +-GraphLabel(parse_location=145-152, label=aml.Account)
        |   | | |   +-target_element_table_list=[aml.Account]
        |   | | +-filter_expr=
        |   | | | +-FunctionCall(ZetaSQL:$and(BOOL, repeated(1) BOOL) -> BOOL)
        |   | | |   +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<balance UINT64, id INT64>, GRAPH_NODE(aml)<balance UINT64, id INT64>) -> BOOL)
        |   | | |   | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#6)
        |   | | |   | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#8)
        |   | | |   +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<balance UINT64, id INT64>, GRAPH_NODE(aml)<balance UINT64, id INT64>) -> BOOL)
        |   | | |     +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#6)
        |   | | |     +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#10)
        |   | | +-head=$element_table.a#6
        |   | | +-tail=$element_table.a#10
        |   | | +-search_prefix=
        |   | |   +-GraphPathSearchPrefix(type=ANY)
        |   | +-GraphPathScan
        |   | | +-column_list=[$element_table.a#11, $element_table.$element3#12, $path_scan.$head#19, $path_scan.$tail#20]
        |   | | +-input_scan_list=
        |   | | | +-GraphNodeScan
        |   | | | | +-column_list=[$element_table.a#11]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=AND
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=AND
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |   | +-op=OR
        |   | | | | |     |   | +-operand_list=
        |   | | | | |     |   |   +-GraphWildCardLabel
        |   | | | | |     |   |   +-GraphLabelNaryExpr
        |   | | | | |     |   |     +-op=NOT
        |   | | | | |     |   |     +-operand_list=
        |   | | | | |     |   |       +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=OR
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     |       +-GraphLabelNaryExpr
        |   | | | | |     |         +-op=NOT
        |   | | | | |     |         +-operand_list=
        |   | | | | |     |           +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabel(parse_location=145-152, label=aml.Account)
        |   | | | | +-target_element_table_list=[aml.Account]
        |   | | | +-GraphEdgeScan
        |   | | | | +-column_list=[$element_table.$element3#12]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=OR
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=NOT
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   | | | | +-orientation=RIGHT
        |   | | | +-GraphPathScan
        |   | | |   +-column_list=$path_scan.[$head#19, $tail#20]
        |   | | |   +-input_scan_list=
        |   | | |   | +-GraphNodeScan
        |   | | |   | | +-column_list=[$element_table.d#13]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=OR
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=NOT
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   | +-GraphEdgeScan
        |   | | |   | | +-column_list=[$element_table.y#14]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=OR
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=NOT
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   | | |   | | +-orientation=RIGHT
        |   | | |   | +-GraphNodeScan
        |   | | |   |   +-column_list=[$element_table.z#15]
        |   | | |   |   +-label_expr=
        |   | | |   |   | +-GraphLabelNaryExpr
        |   | | |   |   |   +-op=OR
        |   | | |   |   |   +-operand_list=
        |   | | |   |   |     +-GraphWildCardLabel
        |   | | |   |   |     +-GraphLabelNaryExpr
        |   | | |   |   |       +-op=NOT
        |   | | |   |   |       +-operand_list=
        |   | | |   |   |         +-GraphWildCardLabel
        |   | | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   +-head=$path_scan.$head#19
        |   | | |   +-tail=$path_scan.$tail#20
        |   | | |   +-quantifier=
        |   | | |   | +-GraphPathPatternQuantifier
        |   | | |   |   +-lower_bound=
        |   | | |   |   | +-Literal(type=INT64, value=2)
        |   | | |   |   +-upper_bound=
        |   | | |   |     +-Literal(type=INT64, value=3)
        |   | | |   +-group_variable_list=
        |   | | |     +-GraphMakeArrayVariable(element=$element_table.d#13, array=$element_table.d#16)
        |   | | |     +-GraphMakeArrayVariable(element=$element_table.y#14, array=$element_table.y#17)
        |   | | |     +-GraphMakeArrayVariable(element=$element_table.z#15, array=$element_table.z#18)
        |   | | +-head=$element_table.a#11
        |   | | +-tail=$path_scan.$tail#20
        |   | | +-search_prefix=
        |   | |   +-GraphPathSearchPrefix(type=ANY)
        |   | +-GraphPathScan
        |   |   +-column_list=[$element_table.a#21, $path_scan.$head#28, $path_scan.$tail#29]
        |   |   +-input_scan_list=
        |   |   | +-GraphNodeScan
        |   |   | | +-column_list=[$element_table.a#21]
        |   |   | | +-label_expr=
        |   |   | | | +-GraphLabelNaryExpr
        |   |   | | |   +-op=AND
        |   |   | | |   +-operand_list=
        |   |   | | |     +-GraphLabelNaryExpr
        |   |   | | |     | +-op=AND
        |   |   | | |     | +-operand_list=
        |   |   | | |     |   +-GraphLabelNaryExpr
        |   |   | | |     |   | +-op=OR
        |   |   | | |     |   | +-operand_list=
        |   |   | | |     |   |   +-GraphWildCardLabel
        |   |   | | |     |   |   +-GraphLabelNaryExpr
        |   |   | | |     |   |     +-op=NOT
        |   |   | | |     |   |     +-operand_list=
        |   |   | | |     |   |       +-GraphWildCardLabel
        |   |   | | |     |   +-GraphLabelNaryExpr
        |   |   | | |     |     +-op=OR
        |   |   | | |     |     +-operand_list=
        |   |   | | |     |       +-GraphWildCardLabel
        |   |   | | |     |       +-GraphLabelNaryExpr
        |   |   | | |     |         +-op=NOT
        |   |   | | |     |         +-operand_list=
        |   |   | | |     |           +-GraphWildCardLabel
        |   |   | | |     +-GraphLabelNaryExpr
        |   |   | | |     | +-op=AND
        |   |   | | |     | +-operand_list=
        |   |   | | |     |   +-GraphLabelNaryExpr
        |   |   | | |     |   | +-op=OR
        |   |   | | |     |   | +-operand_list=
        |   |   | | |     |   |   +-GraphWildCardLabel
        |   |   | | |     |   |   +-GraphLabelNaryExpr
        |   |   | | |     |   |     +-op=NOT
        |   |   | | |     |   |     +-operand_list=
        |   |   | | |     |   |       +-GraphWildCardLabel
        |   |   | | |     |   +-GraphLabelNaryExpr
        |   |   | | |     |   | +-op=OR
        |   |   | | |     |   | +-operand_list=
        |   |   | | |     |   |   +-GraphWildCardLabel
        |   |   | | |     |   |   +-GraphLabelNaryExpr
        |   |   | | |     |   |     +-op=NOT
        |   |   | | |     |   |     +-operand_list=
        |   |   | | |     |   |       +-GraphWildCardLabel
        |   |   | | |     |   +-GraphLabelNaryExpr
        |   |   | | |     |     +-op=OR
        |   |   | | |     |     +-operand_list=
        |   |   | | |     |       +-GraphWildCardLabel
        |   |   | | |     |       +-GraphLabelNaryExpr
        |   |   | | |     |         +-op=NOT
        |   |   | | |     |         +-operand_list=
        |   |   | | |     |           +-GraphWildCardLabel
        |   |   | | |     +-GraphLabelNaryExpr
        |   |   | | |     | +-op=OR
        |   |   | | |     | +-operand_list=
        |   |   | | |     |   +-GraphWildCardLabel
        |   |   | | |     |   +-GraphLabelNaryExpr
        |   |   | | |     |     +-op=NOT
        |   |   | | |     |     +-operand_list=
        |   |   | | |     |       +-GraphWildCardLabel
        |   |   | | |     +-GraphLabel(parse_location=145-152, label=aml.Account)
        |   |   | | +-target_element_table_list=[aml.Account]
        |   |   | +-GraphPathScan
        |   |   |   +-column_list=$path_scan.[$head#28, $tail#29]
        |   |   |   +-input_scan_list=
        |   |   |   | +-GraphNodeScan
        |   |   |   | | +-column_list=[$element_table.$element4#22]
        |   |   |   | | +-label_expr=
        |   |   |   | | | +-GraphLabelNaryExpr
        |   |   |   | | |   +-op=OR
        |   |   |   | | |   +-operand_list=
        |   |   |   | | |     +-GraphWildCardLabel
        |   |   |   | | |     +-GraphLabelNaryExpr
        |   |   |   | | |       +-op=NOT
        |   |   |   | | |       +-operand_list=
        |   |   |   | | |         +-GraphWildCardLabel
        |   |   |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   |   |   | +-GraphEdgeScan
        |   |   |   | | +-column_list=[$element_table.x#23]
        |   |   |   | | +-label_expr=
        |   |   |   | | | +-GraphLabelNaryExpr
        |   |   |   | | |   +-op=OR
        |   |   |   | | |   +-operand_list=
        |   |   |   | | |     +-GraphWildCardLabel
        |   |   |   | | |     +-GraphLabelNaryExpr
        |   |   |   | | |       +-op=NOT
        |   |   |   | | |       +-operand_list=
        |   |   |   | | |         +-GraphWildCardLabel
        |   |   |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   |   |   | | +-orientation=RIGHT
        |   |   |   | +-GraphNodeScan
        |   |   |   |   +-column_list=[$element_table.$element5#24]
        |   |   |   |   +-label_expr=
        |   |   |   |   | +-GraphLabelNaryExpr
        |   |   |   |   |   +-op=OR
        |   |   |   |   |   +-operand_list=
        |   |   |   |   |     +-GraphWildCardLabel
        |   |   |   |   |     +-GraphLabelNaryExpr
        |   |   |   |   |       +-op=NOT
        |   |   |   |   |       +-operand_list=
        |   |   |   |   |         +-GraphWildCardLabel
        |   |   |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   |   |   +-head=$path_scan.$head#28
        |   |   |   +-tail=$path_scan.$tail#29
        |   |   |   +-quantifier=
        |   |   |   | +-GraphPathPatternQuantifier
        |   |   |   |   +-lower_bound=
        |   |   |   |   | +-Literal(type=INT64, value=2)
        |   |   |   |   +-upper_bound=
        |   |   |   |     +-Literal(type=INT64, value=3)
        |   |   |   +-group_variable_list=
        |   |   |     +-GraphMakeArrayVariable(element=$element_table.$element4#22, array=$element_table.$element4#25)
        |   |   |     +-GraphMakeArrayVariable(element=$element_table.x#23, array=$element_table.x#26)
        |   |   |     +-GraphMakeArrayVariable(element=$element_table.$element5#24, array=$element_table.$element5#27)
        |   |   +-head=$element_table.a#21
        |   |   +-tail=$path_scan.$tail#29
        |   +-filter_expr=
        |     +-FunctionCall(ZetaSQL:$and(BOOL, repeated(2) BOOL) -> BOOL)
        |       +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<balance UINT64, id INT64>, GRAPH_NODE(aml)<balance UINT64, id INT64>) -> BOOL)
        |       | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#1)
        |       | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#6)
        |       +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<balance UINT64, id INT64>, GRAPH_NODE(aml)<balance UINT64, id INT64>) -> BOOL)
        |       | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#1)
        |       | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#11)
        |       +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<balance UINT64, id INT64>, GRAPH_NODE(aml)<balance UINT64, id INT64>) -> BOOL)
        |         +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#1)
        |         +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#21)
        +-shape_expr_list=
          +-one#30 := Literal(type=INT64, value=1)
==

# Search prefix multiply declared var rule: multiple matches to multiply declare non-boundary singletons is OK

select * from graph_table(
  aml
  MATCH ANY (a)->(a)-[b]->(a)  -- No quantified term, ANY
  MATCH ANY (d)->(a)-[b]->
  MATCH (a:Account)-[y]->{2, 3}
  RETURN 1 AS one
)
--

QueryStmt
+-output_column_list=
| +-$graph_table.one#20 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#20]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#20]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.one#20]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.one#20]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=$element_table.[a#1, $element1#2, a#3, b#4, a#5]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=$element_table.[a#1, $element1#2, a#3, b#4, a#5]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.a#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=AND
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |     | +-op=OR
                  | |   | | |     | +-operand_list=
                  | |   | | |     |   +-GraphWildCardLabel
                  | |   | | |     |   +-GraphLabelNaryExpr
                  | |   | | |     |     +-op=NOT
                  | |   | | |     |     +-operand_list=
                  | |   | | |     |       +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |     | +-op=OR
                  | |   | | |     | +-operand_list=
                  | |   | | |     |   +-GraphWildCardLabel
                  | |   | | |     |   +-GraphLabelNaryExpr
                  | |   | | |     |     +-op=NOT
                  | |   | | |     |     +-operand_list=
                  | |   | | |     |       +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=OR
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | |         +-GraphLabelNaryExpr
                  | |   | | |           +-op=NOT
                  | |   | | |           +-operand_list=
                  | |   | | |             +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphEdgeScan
                  | |   | | +-column_list=[$element_table.$element1#2]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | +-orientation=RIGHT
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.a#3]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=AND
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |     | +-op=OR
                  | |   | | |     | +-operand_list=
                  | |   | | |     |   +-GraphWildCardLabel
                  | |   | | |     |   +-GraphLabelNaryExpr
                  | |   | | |     |     +-op=NOT
                  | |   | | |     |     +-operand_list=
                  | |   | | |     |       +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |     | +-op=OR
                  | |   | | |     | +-operand_list=
                  | |   | | |     |   +-GraphWildCardLabel
                  | |   | | |     |   +-GraphLabelNaryExpr
                  | |   | | |     |     +-op=NOT
                  | |   | | |     |     +-operand_list=
                  | |   | | |     |       +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=OR
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | |         +-GraphLabelNaryExpr
                  | |   | | |           +-op=NOT
                  | |   | | |           +-operand_list=
                  | |   | | |             +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphEdgeScan
                  | |   | | +-column_list=[$element_table.b#4]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | +-orientation=RIGHT
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.a#5]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=AND
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |     | +-op=OR
                  | |   |   |     | +-operand_list=
                  | |   |   |     |   +-GraphWildCardLabel
                  | |   |   |     |   +-GraphLabelNaryExpr
                  | |   |   |     |     +-op=NOT
                  | |   |   |     |     +-operand_list=
                  | |   |   |     |       +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |     | +-op=OR
                  | |   |   |     | +-operand_list=
                  | |   |   |     |   +-GraphWildCardLabel
                  | |   |   |     |   +-GraphLabelNaryExpr
                  | |   |   |     |     +-op=NOT
                  | |   |   |     |     +-operand_list=
                  | |   |   |     |       +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=OR
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   |         +-GraphLabelNaryExpr
                  | |   |   |           +-op=NOT
                  | |   |   |           +-operand_list=
                  | |   |   |             +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-filter_expr=
                  | |   | +-FunctionCall(ZetaSQL:$and(BOOL, repeated(1) BOOL) -> BOOL)
                  | |   |   +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>) -> BOOL)
                  | |   |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
                  | |   |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#3)
                  | |   |   +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>) -> BOOL)
                  | |   |     +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
                  | |   |     +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#5)
                  | |   +-head=$element_table.a#1
                  | |   +-tail=$element_table.a#5
                  | |   +-search_prefix=
                  | |     +-GraphPathSearchPrefix(type=ANY)
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-GraphScan
                  | +-column_list=$element_table.[a#1, $element1#2, b#4, d#6, $element2#7, a#8, b#9, $element3#10]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=$element_table.[d#6, $element2#7, a#8, b#9, $element3#10]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.d#6]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphEdgeScan
                  | |   | | +-column_list=[$element_table.$element2#7]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | +-orientation=RIGHT
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.a#8]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphEdgeScan
                  | |   | | +-column_list=[$element_table.b#9]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | +-orientation=RIGHT
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.$element3#10]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$element_table.d#6
                  | |   +-tail=$element_table.$element3#10
                  | |   +-search_prefix=
                  | |     +-GraphPathSearchPrefix(type=ANY)
                  | +-filter_expr=
                  | | +-FunctionCall(ZetaSQL:$and(BOOL, repeated(1) BOOL) -> BOOL)
                  | |   +-FunctionCall(ZetaSQL:$equal(GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>) -> BOOL)
                  | |   | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, column=$element_table.b#9)
                  | |   | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, column=$element_table.b#4)
                  | |   +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>) -> BOOL)
                  | |     +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#8)
                  | |     +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
                  | +-input_scan=
                  |   +-GraphRefScan(column_list=$element_table.[a#1, $element1#2, b#4])
                  +-GraphScan
                  | +-column_list=[$element_table.$element1#2, $element_table.d#6, $element_table.$element2#7, $element_table.a#8, $element_table.b#9, $element_table.$element3#10, $element_table.a#11, $path_scan.$head#18, $path_scan.$tail#19]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.a#11, $path_scan.$head#18, $path_scan.$tail#19]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.a#11]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabel(parse_location=129-136, label=aml.Account)
                  | |   | | +-target_element_table_list=[aml.Account]
                  | |   | +-GraphPathScan
                  | |   |   +-column_list=$path_scan.[$head#18, $tail#19]
                  | |   |   +-input_scan_list=
                  | |   |   | +-GraphNodeScan
                  | |   |   | | +-column_list=[$element_table.$element4#12]
                  | |   |   | | +-label_expr=
                  | |   |   | | | +-GraphLabelNaryExpr
                  | |   |   | | |   +-op=OR
                  | |   |   | | |   +-operand_list=
                  | |   |   | | |     +-GraphWildCardLabel
                  | |   |   | | |     +-GraphLabelNaryExpr
                  | |   |   | | |       +-op=NOT
                  | |   |   | | |       +-operand_list=
                  | |   |   | | |         +-GraphWildCardLabel
                  | |   |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   |   | +-GraphEdgeScan
                  | |   |   | | +-column_list=[$element_table.y#13]
                  | |   |   | | +-label_expr=
                  | |   |   | | | +-GraphLabelNaryExpr
                  | |   |   | | |   +-op=OR
                  | |   |   | | |   +-operand_list=
                  | |   |   | | |     +-GraphWildCardLabel
                  | |   |   | | |     +-GraphLabelNaryExpr
                  | |   |   | | |       +-op=NOT
                  | |   |   | | |       +-operand_list=
                  | |   |   | | |         +-GraphWildCardLabel
                  | |   |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   |   | | +-orientation=RIGHT
                  | |   |   | +-GraphNodeScan
                  | |   |   |   +-column_list=[$element_table.$element5#14]
                  | |   |   |   +-label_expr=
                  | |   |   |   | +-GraphLabelNaryExpr
                  | |   |   |   |   +-op=OR
                  | |   |   |   |   +-operand_list=
                  | |   |   |   |     +-GraphWildCardLabel
                  | |   |   |   |     +-GraphLabelNaryExpr
                  | |   |   |   |       +-op=NOT
                  | |   |   |   |       +-operand_list=
                  | |   |   |   |         +-GraphWildCardLabel
                  | |   |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   |   +-head=$path_scan.$head#18
                  | |   |   +-tail=$path_scan.$tail#19
                  | |   |   +-quantifier=
                  | |   |   | +-GraphPathPatternQuantifier
                  | |   |   |   +-lower_bound=
                  | |   |   |   | +-Literal(type=INT64, value=2)
                  | |   |   |   +-upper_bound=
                  | |   |   |     +-Literal(type=INT64, value=3)
                  | |   |   +-group_variable_list=
                  | |   |     +-GraphMakeArrayVariable(element=$element_table.$element4#12, array=$element_table.$element4#15)
                  | |   |     +-GraphMakeArrayVariable(element=$element_table.y#13, array=$element_table.y#16)
                  | |   |     +-GraphMakeArrayVariable(element=$element_table.$element5#14, array=$element_table.$element5#17)
                  | |   +-head=$element_table.a#11
                  | |   +-tail=$path_scan.$tail#19
                  | +-filter_expr=
                  | | +-FunctionCall(ZetaSQL:$equal(GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>) -> BOOL)
                  | |   +-Cast(GRAPH_NODE(aml)<balance UINT64, id INT64> -> GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>)
                  | |   | +-ColumnRef(type=GRAPH_NODE(aml)<balance UINT64, id INT64>, column=$element_table.a#11)
                  | |   +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#8)
                  | +-input_scan=
                  |   +-GraphRefScan(column_list=$element_table.[$element1#2, d#6, $element2#7, a#8, b#9, $element3#10])
                  +-ProjectScan
                    +-column_list=[$graph_table.one#20]
                    +-expr_list=
                    | +-one#20 := Literal(type=INT64, value=1)
                    +-input_scan=
                      +-GraphRefScan(column_list=$element_table.[$element1#2, d#6, $element2#7, b#9, $element3#10, a#11])
==

SELECT one FROM GRAPH_TABLE(
  aml
  MATCH ANY SHORTEST -[b: Transfer]->{3, 4}->(
                                                (
                                                  -[: Transfer]->
                                                  (-[: Transfer]->)
                                                )
                                                WHERE TRUE
                                             ){2, 6} (:Account) -[: Transfer]->{3}
  COLUMNS(1 AS one)
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#31 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#31]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#31]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$path_scan.$head#7, $path_scan.$tail#8, $element_table.$element3#9, $path_scan.$head#20, $path_scan.$tail#21, $element_table.$element9#22, $path_scan.$head#29, $path_scan.$tail#30]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=[$path_scan.$head#7, $path_scan.$tail#8, $element_table.$element3#9, $path_scan.$head#20, $path_scan.$tail#21, $element_table.$element9#22, $path_scan.$head#29, $path_scan.$tail#30]
        |       +-input_scan_list=
        |       | +-GraphPathScan
        |       | | +-column_list=$path_scan.[$head#7, $tail#8]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.$element1#1]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.b#2]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabel(parse_location=61-69, label=aml.Transfer)
        |       | | | | +-target_element_table_list=[aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.$element2#3]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-head=$path_scan.$head#7
        |       | | +-tail=$path_scan.$tail#8
        |       | | +-quantifier=
        |       | | | +-GraphPathPatternQuantifier
        |       | | |   +-lower_bound=
        |       | | |   | +-Literal(type=INT64, value=3)
        |       | | |   +-upper_bound=
        |       | | |     +-Literal(type=INT64, value=4)
        |       | | +-group_variable_list=
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element1#1, array=$element_table.$element1#4)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.b#2, array=$element_table.b#5)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element2#3, array=$element_table.$element2#6)
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.$element3#9]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphPathScan
        |       | | +-column_list=$path_scan.[$head#20, $tail#21]
        |       | | +-input_scan_list=
        |       | | | +-GraphPathScan
        |       | | |   +-column_list=$element_table.[$element4#10, $element5#11, $element6#12, $element7#13, $element8#14]
        |       | | |   +-input_scan_list=
        |       | | |   | +-GraphNodeScan
        |       | | |   | | +-column_list=[$element_table.$element4#10]
        |       | | |   | | +-label_expr=
        |       | | |   | | | +-GraphLabelNaryExpr
        |       | | |   | | |   +-op=OR
        |       | | |   | | |   +-operand_list=
        |       | | |   | | |     +-GraphWildCardLabel
        |       | | |   | | |     +-GraphLabelNaryExpr
        |       | | |   | | |       +-op=NOT
        |       | | |   | | |       +-operand_list=
        |       | | |   | | |         +-GraphWildCardLabel
        |       | | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | |   | +-GraphEdgeScan
        |       | | |   | | +-column_list=[$element_table.$element5#11]
        |       | | |   | | +-label_expr=
        |       | | |   | | | +-GraphLabel(parse_location=186-194, label=aml.Transfer)
        |       | | |   | | +-target_element_table_list=[aml.Transfer]
        |       | | |   | | +-orientation=RIGHT
        |       | | |   | +-GraphPathScan
        |       | | |   |   +-column_list=$element_table.[$element6#12, $element7#13, $element8#14]
        |       | | |   |   +-input_scan_list=
        |       | | |   |   | +-GraphNodeScan
        |       | | |   |   | | +-column_list=[$element_table.$element6#12]
        |       | | |   |   | | +-label_expr=
        |       | | |   |   | | | +-GraphLabelNaryExpr
        |       | | |   |   | | |   +-op=OR
        |       | | |   |   | | |   +-operand_list=
        |       | | |   |   | | |     +-GraphWildCardLabel
        |       | | |   |   | | |     +-GraphLabelNaryExpr
        |       | | |   |   | | |       +-op=NOT
        |       | | |   |   | | |       +-operand_list=
        |       | | |   |   | | |         +-GraphWildCardLabel
        |       | | |   |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | |   |   | +-GraphEdgeScan
        |       | | |   |   | | +-column_list=[$element_table.$element7#13]
        |       | | |   |   | | +-label_expr=
        |       | | |   |   | | | +-GraphLabel(parse_location=253-261, label=aml.Transfer)
        |       | | |   |   | | +-target_element_table_list=[aml.Transfer]
        |       | | |   |   | | +-orientation=RIGHT
        |       | | |   |   | +-GraphNodeScan
        |       | | |   |   |   +-column_list=[$element_table.$element8#14]
        |       | | |   |   |   +-label_expr=
        |       | | |   |   |   | +-GraphLabelNaryExpr
        |       | | |   |   |   |   +-op=OR
        |       | | |   |   |   |   +-operand_list=
        |       | | |   |   |   |     +-GraphWildCardLabel
        |       | | |   |   |   |     +-GraphLabelNaryExpr
        |       | | |   |   |   |       +-op=NOT
        |       | | |   |   |   |       +-operand_list=
        |       | | |   |   |   |         +-GraphWildCardLabel
        |       | | |   |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | |   |   +-head=$element_table.$element6#12
        |       | | |   |   +-tail=$element_table.$element8#14
        |       | | |   +-head=$element_table.$element4#10
        |       | | |   +-tail=$element_table.$element8#14
        |       | | +-filter_expr=
        |       | | | +-Literal(type=BOOL, value=true)
        |       | | +-head=$path_scan.$head#20
        |       | | +-tail=$path_scan.$tail#21
        |       | | +-quantifier=
        |       | | | +-GraphPathPatternQuantifier
        |       | | |   +-lower_bound=
        |       | | |   | +-Literal(type=INT64, value=2)
        |       | | |   +-upper_bound=
        |       | | |     +-Literal(type=INT64, value=6)
        |       | | +-group_variable_list=
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element4#10, array=$element_table.$element4#15)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element5#11, array=$element_table.$element5#16)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element6#12, array=$element_table.$element6#17)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element7#13, array=$element_table.$element7#18)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element8#14, array=$element_table.$element8#19)
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.$element9#22]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=430-437, label=aml.Account)
        |       | | +-target_element_table_list=[aml.Account]
        |       | +-GraphPathScan
        |       |   +-column_list=$path_scan.[$head#29, $tail#30]
        |       |   +-input_scan_list=
        |       |   | +-GraphNodeScan
        |       |   | | +-column_list=[$element_table.$element10#23]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   | +-GraphEdgeScan
        |       |   | | +-column_list=[$element_table.$element11#24]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabel(parse_location=443-451, label=aml.Transfer)
        |       |   | | +-target_element_table_list=[aml.Transfer]
        |       |   | | +-orientation=RIGHT
        |       |   | +-GraphNodeScan
        |       |   |   +-column_list=[$element_table.$element12#25]
        |       |   |   +-label_expr=
        |       |   |   | +-GraphLabelNaryExpr
        |       |   |   |   +-op=OR
        |       |   |   |   +-operand_list=
        |       |   |   |     +-GraphWildCardLabel
        |       |   |   |     +-GraphLabelNaryExpr
        |       |   |   |       +-op=NOT
        |       |   |   |       +-operand_list=
        |       |   |   |         +-GraphWildCardLabel
        |       |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   +-head=$path_scan.$head#29
        |       |   +-tail=$path_scan.$tail#30
        |       |   +-quantifier=
        |       |   | +-GraphPathPatternQuantifier
        |       |   |   +-lower_bound=
        |       |   |   | +-Literal(type=INT64, value=3)
        |       |   |   +-upper_bound=
        |       |   |     +-Literal(type=INT64, value=3)
        |       |   +-group_variable_list=
        |       |     +-GraphMakeArrayVariable(element=$element_table.$element10#23, array=$element_table.$element10#26)
        |       |     +-GraphMakeArrayVariable(element=$element_table.$element11#24, array=$element_table.$element11#27)
        |       |     +-GraphMakeArrayVariable(element=$element_table.$element12#25, array=$element_table.$element12#28)
        |       +-head=$path_scan.$head#7
        |       +-tail=$path_scan.$tail#30
        |       +-search_prefix=
        |         +-GraphPathSearchPrefix(type=SHORTEST)
        +-shape_expr_list=
          +-one#31 := Literal(type=INT64, value=1)

==

# Correlated columns inside subtree. Note that we cannot have a correlated path pattern WHERE clause: only graph pattern WHERE is allowed.
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH ANY (-[z: Transfer]->)
  RETURN *
  NEXT
  MATCH ANY -[x: Transfer]->-[: Transfer]->{1, 3} WHERE SAME(z, x)
  RETURN *
  NEXT
  MATCH ANY SHORTEST ( -[y]-> ) WHERE SAME(z, y)
  RETURN 1 AS one
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#28 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#28]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#28]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.one#28]
            +-scan_list=
              +-GraphLinearScan
              | +-column_list=$graph_table.[$element1#4, z#5, $element2#6]
              | +-scan_list=
              |   +-GraphScan
              |   | +-column_list=$element_table.[$element1#1, z#2, $element2#3]
              |   | +-input_scan_list=
              |   | | +-GraphPathScan
              |   | |   +-column_list=$element_table.[$element1#1, z#2, $element2#3]
              |   | |   +-input_scan_list=
              |   | |   | +-GraphPathScan
              |   | |   |   +-column_list=$element_table.[$element1#1, z#2, $element2#3]
              |   | |   |   +-input_scan_list=
              |   | |   |   | +-GraphNodeScan
              |   | |   |   | | +-column_list=[$element_table.$element1#1]
              |   | |   |   | | +-label_expr=
              |   | |   |   | | | +-GraphLabelNaryExpr
              |   | |   |   | | |   +-op=OR
              |   | |   |   | | |   +-operand_list=
              |   | |   |   | | |     +-GraphWildCardLabel
              |   | |   |   | | |     +-GraphLabelNaryExpr
              |   | |   |   | | |       +-op=NOT
              |   | |   |   | | |       +-operand_list=
              |   | |   |   | | |         +-GraphWildCardLabel
              |   | |   |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
              |   | |   |   | +-GraphEdgeScan
              |   | |   |   | | +-column_list=[$element_table.z#2]
              |   | |   |   | | +-label_expr=
              |   | |   |   | | | +-GraphLabel(parse_location=53-61, label=aml.Transfer)
              |   | |   |   | | +-target_element_table_list=[aml.Transfer]
              |   | |   |   | | +-orientation=RIGHT
              |   | |   |   | +-GraphNodeScan
              |   | |   |   |   +-column_list=[$element_table.$element2#3]
              |   | |   |   |   +-label_expr=
              |   | |   |   |   | +-GraphLabelNaryExpr
              |   | |   |   |   |   +-op=OR
              |   | |   |   |   |   +-operand_list=
              |   | |   |   |   |     +-GraphWildCardLabel
              |   | |   |   |   |     +-GraphLabelNaryExpr
              |   | |   |   |   |       +-op=NOT
              |   | |   |   |   |       +-operand_list=
              |   | |   |   |   |         +-GraphWildCardLabel
              |   | |   |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
              |   | |   |   +-head=$element_table.$element1#1
              |   | |   |   +-tail=$element_table.$element2#3
              |   | |   +-head=$element_table.$element1#1
              |   | |   +-tail=$element_table.$element2#3
              |   | |   +-search_prefix=
              |   | |     +-GraphPathSearchPrefix(type=ANY)
              |   | +-input_scan=
              |   |   +-SingleRowScan
              |   +-ProjectScan
              |     +-column_list=$graph_table.[$element1#4, z#5, $element2#6]
              |     +-expr_list=
              |     | +-$element1#4 := ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.$element1#1)
              |     | +-z#5 := ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$element_table.z#2)
              |     | +-$element2#6 := ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.$element2#3)
              |     +-input_scan=
              |       +-GraphRefScan(column_list=$element_table.[$element1#1, z#2, $element2#3])
              +-GraphLinearScan
              | +-column_list=$graph_table.[$element1#17, z#18, $element2#19, $element3#20, x#21, $element4#22, $element5#23, $element6#24]
              | +-scan_list=
              |   +-GraphScan
              |   | +-column_list=[$graph_table.$element1#4, $graph_table.z#5, $graph_table.$element2#6, $element_table.$element3#7, $element_table.x#8, $path_scan.$head#15, $element_table.$element4#12, $element_table.$element5#13, $element_table.$element6#14, $path_scan.$tail#16]
              |   | +-input_scan_list=
              |   | | +-GraphPathScan
              |   | |   +-column_list=[$element_table.$element3#7, $element_table.x#8, $path_scan.$head#15, $element_table.$element4#12, $element_table.$element5#13, $element_table.$element6#14, $path_scan.$tail#16]
              |   | |   +-input_scan_list=
              |   | |   | +-GraphNodeScan
              |   | |   | | +-column_list=[$element_table.$element3#7]
              |   | |   | | +-label_expr=
              |   | |   | | | +-GraphLabelNaryExpr
              |   | |   | | |   +-op=OR
              |   | |   | | |   +-operand_list=
              |   | |   | | |     +-GraphWildCardLabel
              |   | |   | | |     +-GraphLabelNaryExpr
              |   | |   | | |       +-op=NOT
              |   | |   | | |       +-operand_list=
              |   | |   | | |         +-GraphWildCardLabel
              |   | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
              |   | |   | +-GraphEdgeScan
              |   | |   | | +-column_list=[$element_table.x#8]
              |   | |   | | +-label_expr=
              |   | |   | | | +-GraphLabel(parse_location=101-109, label=aml.Transfer)
              |   | |   | | +-target_element_table_list=[aml.Transfer]
              |   | |   | | +-orientation=RIGHT
              |   | |   | +-GraphPathScan
              |   | |   |   +-column_list=[$path_scan.$head#15, $element_table.$element4#12, $element_table.$element5#13, $element_table.$element6#14, $path_scan.$tail#16]
              |   | |   |   +-input_scan_list=
              |   | |   |   | +-GraphNodeScan
              |   | |   |   | | +-column_list=[$element_table.$element4#9]
              |   | |   |   | | +-label_expr=
              |   | |   |   | | | +-GraphLabelNaryExpr
              |   | |   |   | | |   +-op=OR
              |   | |   |   | | |   +-operand_list=
              |   | |   |   | | |     +-GraphWildCardLabel
              |   | |   |   | | |     +-GraphLabelNaryExpr
              |   | |   |   | | |       +-op=NOT
              |   | |   |   | | |       +-operand_list=
              |   | |   |   | | |         +-GraphWildCardLabel
              |   | |   |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
              |   | |   |   | +-GraphEdgeScan
              |   | |   |   | | +-column_list=[$element_table.$element5#10]
              |   | |   |   | | +-label_expr=
              |   | |   |   | | | +-GraphLabel(parse_location=116-124, label=aml.Transfer)
              |   | |   |   | | +-target_element_table_list=[aml.Transfer]
              |   | |   |   | | +-orientation=RIGHT
              |   | |   |   | +-GraphNodeScan
              |   | |   |   |   +-column_list=[$element_table.$element6#11]
              |   | |   |   |   +-label_expr=
              |   | |   |   |   | +-GraphLabelNaryExpr
              |   | |   |   |   |   +-op=OR
              |   | |   |   |   |   +-operand_list=
              |   | |   |   |   |     +-GraphWildCardLabel
              |   | |   |   |   |     +-GraphLabelNaryExpr
              |   | |   |   |   |       +-op=NOT
              |   | |   |   |   |       +-operand_list=
              |   | |   |   |   |         +-GraphWildCardLabel
              |   | |   |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
              |   | |   |   +-head=$path_scan.$head#15
              |   | |   |   +-tail=$path_scan.$tail#16
              |   | |   |   +-quantifier=
              |   | |   |   | +-GraphPathPatternQuantifier
              |   | |   |   |   +-lower_bound=
              |   | |   |   |   | +-Literal(type=INT64, value=1)
              |   | |   |   |   +-upper_bound=
              |   | |   |   |     +-Literal(type=INT64, value=3)
              |   | |   |   +-group_variable_list=
              |   | |   |     +-GraphMakeArrayVariable(element=$element_table.$element4#9, array=$element_table.$element4#12)
              |   | |   |     +-GraphMakeArrayVariable(element=$element_table.$element5#10, array=$element_table.$element5#13)
              |   | |   |     +-GraphMakeArrayVariable(element=$element_table.$element6#11, array=$element_table.$element6#14)
              |   | |   +-head=$element_table.$element3#7
              |   | |   +-tail=$path_scan.$tail#16
              |   | |   +-search_prefix=
              |   | |     +-GraphPathSearchPrefix(type=ANY)
              |   | +-filter_expr=
              |   | | +-FunctionCall(ZetaSQL:same(repeated(2) GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>) -> BOOL)
              |   | |   +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$graph_table.z#5)
              |   | |   +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$element_table.x#8)
              |   | +-input_scan=
              |   |   +-GraphRefScan(column_list=$graph_table.[$element1#4, z#5, $element2#6])
              |   +-ProjectScan
              |     +-column_list=$graph_table.[$element1#17, z#18, $element2#19, $element3#20, x#21, $element4#22, $element5#23, $element6#24]
              |     +-expr_list=
              |     | +-$element1#17 := ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$graph_table.$element1#4)
              |     | +-z#18 := ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$graph_table.z#5)
              |     | +-$element2#19 := ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$graph_table.$element2#6)
              |     | +-$element3#20 := ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.$element3#7)
              |     | +-x#21 := ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$element_table.x#8)
              |     | +-$element4#22 := ColumnRef(type=ARRAY<GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>>, column=$element_table.$element4#12)
              |     | +-$element5#23 := ColumnRef(type=ARRAY<GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>>, column=$element_table.$element5#13)
              |     | +-$element6#24 := ColumnRef(type=ARRAY<GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>>, column=$element_table.$element6#14)
              |     +-input_scan=
              |       +-GraphRefScan(column_list=[$graph_table.$element1#4, $graph_table.z#5, $graph_table.$element2#6, $element_table.$element3#7, $element_table.x#8, $element_table.$element4#12, $element_table.$element5#13, $element_table.$element6#14])
              +-GraphLinearScan
                +-column_list=[$graph_table.one#28]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$graph_table.$element1#17, $graph_table.z#18, $graph_table.$element2#19, $graph_table.$element3#20, $graph_table.x#21, $graph_table.$element4#22, $graph_table.$element5#23, $graph_table.$element6#24, $element_table.$element7#25, $element_table.y#26, $element_table.$element8#27]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=$element_table.[$element7#25, y#26, $element8#27]
                  | |   +-input_scan_list=
                  | |   | +-GraphPathScan
                  | |   |   +-column_list=$element_table.[$element7#25, y#26, $element8#27]
                  | |   |   +-input_scan_list=
                  | |   |   | +-GraphNodeScan
                  | |   |   | | +-column_list=[$element_table.$element7#25]
                  | |   |   | | +-label_expr=
                  | |   |   | | | +-GraphLabelNaryExpr
                  | |   |   | | |   +-op=OR
                  | |   |   | | |   +-operand_list=
                  | |   |   | | |     +-GraphWildCardLabel
                  | |   |   | | |     +-GraphLabelNaryExpr
                  | |   |   | | |       +-op=NOT
                  | |   |   | | |       +-operand_list=
                  | |   |   | | |         +-GraphWildCardLabel
                  | |   |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   |   | +-GraphEdgeScan
                  | |   |   | | +-column_list=[$element_table.y#26]
                  | |   |   | | +-label_expr=
                  | |   |   | | | +-GraphLabelNaryExpr
                  | |   |   | | |   +-op=OR
                  | |   |   | | |   +-operand_list=
                  | |   |   | | |     +-GraphWildCardLabel
                  | |   |   | | |     +-GraphLabelNaryExpr
                  | |   |   | | |       +-op=NOT
                  | |   |   | | |       +-operand_list=
                  | |   |   | | |         +-GraphWildCardLabel
                  | |   |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   |   | | +-orientation=RIGHT
                  | |   |   | +-GraphNodeScan
                  | |   |   |   +-column_list=[$element_table.$element8#27]
                  | |   |   |   +-label_expr=
                  | |   |   |   | +-GraphLabelNaryExpr
                  | |   |   |   |   +-op=OR
                  | |   |   |   |   +-operand_list=
                  | |   |   |   |     +-GraphWildCardLabel
                  | |   |   |   |     +-GraphLabelNaryExpr
                  | |   |   |   |       +-op=NOT
                  | |   |   |   |       +-operand_list=
                  | |   |   |   |         +-GraphWildCardLabel
                  | |   |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   |   +-head=$element_table.$element7#25
                  | |   |   +-tail=$element_table.$element8#27
                  | |   +-head=$element_table.$element7#25
                  | |   +-tail=$element_table.$element8#27
                  | |   +-search_prefix=
                  | |     +-GraphPathSearchPrefix(type=SHORTEST)
                  | +-filter_expr=
                  | | +-FunctionCall(ZetaSQL:same(repeated(2) GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>) -> BOOL)
                  | |   +-Cast(GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64> -> GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>)
                  | |   | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$graph_table.z#18)
                  | |   +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, column=$element_table.y#26)
                  | +-input_scan=
                  |   +-GraphRefScan(column_list=$graph_table.[$element1#17, z#18, $element2#19, $element3#20, x#21, $element4#22, $element5#23, $element6#24])
                  +-ProjectScan
                    +-column_list=[$graph_table.one#28]
                    +-expr_list=
                    | +-one#28 := Literal(type=INT64, value=1)
                    +-input_scan=
                      +-GraphRefScan(column_list=[$graph_table.$element1#17, $graph_table.z#18, $graph_table.$element2#19, $graph_table.$element3#20, $graph_table.x#21, $graph_table.$element4#22, $graph_table.$element5#23, $graph_table.$element6#24, $element_table.$element7#25, $element_table.y#26, $element_table.$element8#27])

==

# Output with 1 single column

SELECT one FROM GRAPH_TABLE(
  aml
  MATCH ANY (a:Account)
  RETURN 1 AS one
)
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#2 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#2]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#2]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.one#2]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.one#2]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.a#1]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.a#1]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.a#1]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabel(parse_location=50-57, label=aml.Account)
                  | |   |   +-target_element_table_list=[aml.Account]
                  | |   +-head=$element_table.a#1
                  | |   +-tail=$element_table.a#1
                  | |   +-search_prefix=
                  | |     +-GraphPathSearchPrefix(type=ANY)
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=[$graph_table.one#2]
                    +-expr_list=
                    | +-one#2 := Literal(type=INT64, value=1)
                    +-input_scan=
                      +-GraphRefScan(column_list=[$element_table.a#1])

==

[language_features=NONE,+SQL_GRAPH,+SQL_GRAPH_ADVANCED_QUERY,+SQL_GRAPH_BOUNDED_PATH_QUANTIFICATION,+UNNEST_AND_FLATTEN_ARRAYS,+SQL_GRAPH_PATH_MODE]
select gt.* from
graph_table(aml
  match ANY SHORTEST (a)-[e]->{2, 3}(b)
  let amounts = FLATTEN(e.amount)
  return amounts, FLATTEN(e.amount) as amounts2, a.name AS a, b.name AS b
) gt
--
QueryStmt
+-output_column_list=
| +-$graph_table.amounts#12 AS amounts [ARRAY<UINT64>]
| +-$graph_table.amounts2#13 AS amounts2 [ARRAY<UINT64>]
| +-$graph_table.a#14 AS a [STRING]
| +-$graph_table.b#15 AS b [STRING]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[amounts#12, amounts2#13, a#14, b#15]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[amounts#12, amounts2#13, a#14, b#15]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=$graph_table.[amounts#12, amounts2#13, a#14, b#15]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=$graph_table.[amounts#12, amounts2#13, a#14, b#15]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.a#1, $path_scan.$head#8, $element_table.e#6, $path_scan.$tail#9, $element_table.b#10]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.a#1, $path_scan.$head#8, $element_table.e#6, $path_scan.$tail#9, $element_table.b#10]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.a#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphPathScan
                  | |   | | +-column_list=[$path_scan.$head#8, $element_table.e#6, $path_scan.$tail#9]
                  | |   | | +-input_scan_list=
                  | |   | | | +-GraphNodeScan
                  | |   | | | | +-column_list=[$element_table.$element1#2]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | | +-GraphEdgeScan
                  | |   | | | | +-column_list=[$element_table.e#3]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | | | +-orientation=RIGHT
                  | |   | | | +-GraphNodeScan
                  | |   | | |   +-column_list=[$element_table.$element2#4]
                  | |   | | |   +-label_expr=
                  | |   | | |   | +-GraphLabelNaryExpr
                  | |   | | |   |   +-op=OR
                  | |   | | |   |   +-operand_list=
                  | |   | | |   |     +-GraphWildCardLabel
                  | |   | | |   |     +-GraphLabelNaryExpr
                  | |   | | |   |       +-op=NOT
                  | |   | | |   |       +-operand_list=
                  | |   | | |   |         +-GraphWildCardLabel
                  | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | +-head=$path_scan.$head#8
                  | |   | | +-tail=$path_scan.$tail#9
                  | |   | | +-quantifier=
                  | |   | | | +-GraphPathPatternQuantifier
                  | |   | | |   +-lower_bound=
                  | |   | | |   | +-Literal(type=INT64, value=2)
                  | |   | | |   +-upper_bound=
                  | |   | | |     +-Literal(type=INT64, value=3)
                  | |   | | +-group_variable_list=
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.e#3, array=$element_table.e#6)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.b#10]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$element_table.a#1
                  | |   +-tail=$element_table.b#10
                  | |   +-search_prefix=
                  | |     +-GraphPathSearchPrefix(type=SHORTEST)
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                  | +-column_list=[$element_table.a#1, $element_table.e#6, $element_table.b#10, $graph_table.amounts#11]
                  | +-expr_list=
                  | | +-amounts#11 :=
                  | |   +-Flatten
                  | |     +-type=ARRAY<UINT64>
                  | |     +-expr=
                  | |     | +-ColumnRef(type=ARRAY<GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>>, column=$element_table.e#6)
                  | |     +-get_field_list=
                  | |       +-GraphGetElementProperty
                  | |         +-type=UINT64
                  | |         +-expr=
                  | |         | +-FlattenedArg(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>)
                  | |         +-property=amount(UINT64)
                  | +-input_scan=
                  |   +-GraphRefScan(column_list=$element_table.[a#1, e#6, b#10])
                  +-ProjectScan
                    +-column_list=$graph_table.[amounts#12, amounts2#13, a#14, b#15]
                    +-expr_list=
                    | +-amounts#12 := ColumnRef(type=ARRAY<UINT64>, column=$graph_table.amounts#11)
                    | +-amounts2#13 :=
                    | | +-Flatten
                    | |   +-type=ARRAY<UINT64>
                    | |   +-expr=
                    | |   | +-ColumnRef(type=ARRAY<GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>>, column=$element_table.e#6)
                    | |   +-get_field_list=
                    | |     +-GraphGetElementProperty
                    | |       +-type=UINT64
                    | |       +-expr=
                    | |       | +-FlattenedArg(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>)
                    | |       +-property=amount(UINT64)
                    | +-a#14 :=
                    | | +-GraphGetElementProperty
                    | |   +-type=STRING
                    | |   +-expr=
                    | |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
                    | |   +-property=name(STRING)
                    | +-b#15 :=
                    |   +-GraphGetElementProperty
                    |     +-type=STRING
                    |     +-expr=
                    |     | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.b#10)
                    |     +-property=name(STRING)
                    +-input_scan=
                      +-GraphRefScan(column_list=[$element_table.a#1, $element_table.e#6, $element_table.b#10, $graph_table.amounts#11])

==

SELECT one FROM GRAPH_TABLE(
  aml
  MATCH ANY SHORTEST (TRAIL (TRAIL -[b]->) WHERE true), @{what=hint} ANY (TRAIL -> ) WHERE false  -- No quantified term, shortest
  MATCH ANY (TRAIL ->){2} WHERE false  -- With quantified term, ANY
  MATCH TRAIL (TRAIL->){2} WHERE false  -- With quantified term, no search prefix
  MATCH ANY ->{2} WHERE false -- With quantified term, ANY
  RETURN 1 AS one
)
--

ERROR: path mode is not supported [at 3:30]
  MATCH ANY SHORTEST (TRAIL (TRAIL -[b]->) WHERE true), @{what=hint} ANY (TRA...
                             ^

==

# 2 nodes. No Struct should be constructed.

select * from graph_table(
  aml
  MATCH ANY SHORTEST (a:Account)(b:Account)
  COLUMNS (1 AS one)
)
--

QueryStmt
+-output_column_list=
| +-$graph_table.one#3 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#3]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#3]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[a#1, b#2]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$element_table.[a#1, b#2]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=57-64, label=aml.Account)
        |       | | +-target_element_table_list=[aml.Account]
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.b#2]
        |       |   +-label_expr=
        |       |   | +-GraphLabel(parse_location=68-75, label=aml.Account)
        |       |   +-target_element_table_list=[aml.Account]
        |       +-head=$element_table.a#1
        |       +-tail=$element_table.b#2
        |       +-search_prefix=
        |         +-GraphPathSearchPrefix(type=SHORTEST)
        +-shape_expr_list=
          +-one#3 := Literal(type=INT64, value=1)
==

# 3 nodes. No Struct should be constructed.

select * from graph_table(
  aml
  MATCH ANY SHORTEST (a:Account)(b:Account)(c:Account)
  COLUMNS (1 AS one)
)
--

QueryStmt
+-output_column_list=
| +-$graph_table.one#4 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#4]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#4]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[a#1, b#2, c#3]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$element_table.[a#1, b#2, c#3]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=57-64, label=aml.Account)
        |       | | +-target_element_table_list=[aml.Account]
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.b#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=68-75, label=aml.Account)
        |       | | +-target_element_table_list=[aml.Account]
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.c#3]
        |       |   +-label_expr=
        |       |   | +-GraphLabel(parse_location=79-86, label=aml.Account)
        |       |   +-target_element_table_list=[aml.Account]
        |       +-head=$element_table.a#1
        |       +-tail=$element_table.c#3
        |       +-search_prefix=
        |         +-GraphPathSearchPrefix(type=SHORTEST)
        +-shape_expr_list=
          +-one#4 := Literal(type=INT64, value=1)
==

# 1 edge.

select * from graph_table(
  aml
  MATCH ANY SHORTEST (a:Account)->(c)
  COLUMNS (1 AS one)
)

--

QueryStmt
+-output_column_list=
| +-$graph_table.one#4 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#4]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#4]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[a#1, $element1#2, c#3]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$element_table.[a#1, $element1#2, c#3]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=57-64, label=aml.Account)
        |       | | +-target_element_table_list=[aml.Account]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.$element1#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.c#3]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$element_table.a#1
        |       +-tail=$element_table.c#3
        |       +-search_prefix=
        |         +-GraphPathSearchPrefix(type=SHORTEST)
        +-shape_expr_list=
          +-one#4 := Literal(type=INT64, value=1)
==

# Output with 2 columns, just the head and tail. No Struct expected.

SELECT one FROM GRAPH_TABLE(
  aml
  MATCH ANY SHORTEST -[:Transfer]->{3}
  RETURN 1 AS one
)
--

QueryStmt
+-output_column_list=
| +-$graph_table.one#9 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#9]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#9]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.one#9]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.one#9]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=$path_scan.[$head#7, $tail#8]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=$path_scan.[$head#7, $tail#8]
                  | |   +-input_scan_list=
                  | |   | +-GraphPathScan
                  | |   |   +-column_list=$path_scan.[$head#7, $tail#8]
                  | |   |   +-input_scan_list=
                  | |   |   | +-GraphNodeScan
                  | |   |   | | +-column_list=[$element_table.$element1#1]
                  | |   |   | | +-label_expr=
                  | |   |   | | | +-GraphLabelNaryExpr
                  | |   |   | | |   +-op=OR
                  | |   |   | | |   +-operand_list=
                  | |   |   | | |     +-GraphWildCardLabel
                  | |   |   | | |     +-GraphLabelNaryExpr
                  | |   |   | | |       +-op=NOT
                  | |   |   | | |       +-operand_list=
                  | |   |   | | |         +-GraphWildCardLabel
                  | |   |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   |   | +-GraphEdgeScan
                  | |   |   | | +-column_list=[$element_table.$element2#2]
                  | |   |   | | +-label_expr=
                  | |   |   | | | +-GraphLabel(parse_location=59-67, label=aml.Transfer)
                  | |   |   | | +-target_element_table_list=[aml.Transfer]
                  | |   |   | | +-orientation=RIGHT
                  | |   |   | +-GraphNodeScan
                  | |   |   |   +-column_list=[$element_table.$element3#3]
                  | |   |   |   +-label_expr=
                  | |   |   |   | +-GraphLabelNaryExpr
                  | |   |   |   |   +-op=OR
                  | |   |   |   |   +-operand_list=
                  | |   |   |   |     +-GraphWildCardLabel
                  | |   |   |   |     +-GraphLabelNaryExpr
                  | |   |   |   |       +-op=NOT
                  | |   |   |   |       +-operand_list=
                  | |   |   |   |         +-GraphWildCardLabel
                  | |   |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   |   +-head=$path_scan.$head#7
                  | |   |   +-tail=$path_scan.$tail#8
                  | |   |   +-quantifier=
                  | |   |   | +-GraphPathPatternQuantifier
                  | |   |   |   +-lower_bound=
                  | |   |   |   | +-Literal(type=INT64, value=3)
                  | |   |   |   +-upper_bound=
                  | |   |   |     +-Literal(type=INT64, value=3)
                  | |   |   +-group_variable_list=
                  | |   |     +-GraphMakeArrayVariable(element=$element_table.$element1#1, array=$element_table.$element1#4)
                  | |   |     +-GraphMakeArrayVariable(element=$element_table.$element2#2, array=$element_table.$element2#5)
                  | |   |     +-GraphMakeArrayVariable(element=$element_table.$element3#3, array=$element_table.$element3#6)
                  | |   +-head=$path_scan.$head#7
                  | |   +-tail=$path_scan.$tail#8
                  | |   +-search_prefix=
                  | |     +-GraphPathSearchPrefix(type=SHORTEST)
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=[$graph_table.one#9]
                    +-expr_list=
                    | +-one#9 := Literal(type=INT64, value=1)
                    +-input_scan=
                      +-GraphRefScan
==

# Remap correctness: EXISTS contains a column that doesn't appear outside but still gets remapped.

SELECT
  one
  FROM
    GRAPH_TABLE(
      aml
      MATCH
        ANY (
        n_1 IS Account
        WHERE
          EXISTS(
            SELECT
              @test_param_bool
          )
        )
      COLUMNS(
        1 as one
      )
    )
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#3 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#3]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#3]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.n_1#1]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=[$element_table.n_1#1]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.n_1#1]
        |       |   +-filter_expr=
        |       |   | +-SubqueryExpr
        |       |   |   +-type=BOOL
        |       |   |   +-subquery_type=EXISTS
        |       |   |   +-subquery=
        |       |   |     +-ProjectScan
        |       |   |       +-column_list=[$expr_subquery.$col1#2]
        |       |   |       +-expr_list=
        |       |   |       | +-$col1#2 := Parameter(type=BOOL, name="test_param_bool")
        |       |   |       +-input_scan=
        |       |   |         +-SingleRowScan
        |       |   +-label_expr=
        |       |   | +-GraphLabel(parse_location=88-95, label=aml.Account)
        |       |   +-target_element_table_list=[aml.Account]
        |       +-head=$element_table.n_1#1
        |       +-tail=$element_table.n_1#1
        |       +-search_prefix=
        |         +-GraphPathSearchPrefix(type=ANY)
        +-shape_expr_list=
          +-one#3 := Literal(type=INT64, value=1)

==

SELECT * FROM GRAPH_TABLE(
  aml
  MATCH ANY ((a)->(b))(ANY (c)->(d))
  COLUMNS(1 AS One)
)
--
ERROR: Path search prefix is not supported in a subpath [at 3:24]
  MATCH ANY ((a)->(b))(ANY (c)->(d))
                       ^
==

select * from graph_table(
   aml
   match (ANY (x)-[y]->(z)){3}
   RETURN 1 AS one
 )
--
ERROR: Search prefix is not allowed inside a parenthesized path pattern [at 3:10]
   match (ANY (x)-[y]->(z)){3}
         ^
==

select * from graph_table(
   aml
   match {{ANY|SHORTEST}} 4 (x)-[y]->{3}(z)
   RETURN 1 AS one
 )
--
ALTERNATION GROUP: ANY
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#11 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#11]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#11]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.one#11]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.one#11]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.z#10]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.z#10]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.x#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphPathScan
                  | |   | | +-column_list=$path_scan.[$head#8, $tail#9]
                  | |   | | +-input_scan_list=
                  | |   | | | +-GraphNodeScan
                  | |   | | | | +-column_list=[$element_table.$element1#2]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | | +-GraphEdgeScan
                  | |   | | | | +-column_list=[$element_table.y#3]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | | | +-orientation=RIGHT
                  | |   | | | +-GraphNodeScan
                  | |   | | |   +-column_list=[$element_table.$element2#4]
                  | |   | | |   +-label_expr=
                  | |   | | |   | +-GraphLabelNaryExpr
                  | |   | | |   |   +-op=OR
                  | |   | | |   |   +-operand_list=
                  | |   | | |   |     +-GraphWildCardLabel
                  | |   | | |   |     +-GraphLabelNaryExpr
                  | |   | | |   |       +-op=NOT
                  | |   | | |   |       +-operand_list=
                  | |   | | |   |         +-GraphWildCardLabel
                  | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | +-head=$path_scan.$head#8
                  | |   | | +-tail=$path_scan.$tail#9
                  | |   | | +-quantifier=
                  | |   | | | +-GraphPathPatternQuantifier
                  | |   | | |   +-lower_bound=
                  | |   | | |   | +-Literal(type=INT64, value=3)
                  | |   | | |   +-upper_bound=
                  | |   | | |     +-Literal(type=INT64, value=3)
                  | |   | | +-group_variable_list=
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.y#3, array=$element_table.y#6)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.z#10]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$element_table.x#1
                  | |   +-tail=$element_table.z#10
                  | |   +-search_prefix=
                  | |     +-GraphPathSearchPrefix
                  | |       +-type=ANY
                  | |       +-path_count=
                  | |         +-Literal(type=INT64, value=4)
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=[$graph_table.one#11]
                    +-expr_list=
                    | +-one#11 := Literal(type=INT64, value=1)
                    +-input_scan=
                      +-GraphRefScan(column_list=$element_table.[x#1, z#10])
--
ALTERNATION GROUP: SHORTEST
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#11 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#11]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#11]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.one#11]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.one#11]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.z#10]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.z#10]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.x#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphPathScan
                  | |   | | +-column_list=$path_scan.[$head#8, $tail#9]
                  | |   | | +-input_scan_list=
                  | |   | | | +-GraphNodeScan
                  | |   | | | | +-column_list=[$element_table.$element1#2]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | | +-GraphEdgeScan
                  | |   | | | | +-column_list=[$element_table.y#3]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | | | +-orientation=RIGHT
                  | |   | | | +-GraphNodeScan
                  | |   | | |   +-column_list=[$element_table.$element2#4]
                  | |   | | |   +-label_expr=
                  | |   | | |   | +-GraphLabelNaryExpr
                  | |   | | |   |   +-op=OR
                  | |   | | |   |   +-operand_list=
                  | |   | | |   |     +-GraphWildCardLabel
                  | |   | | |   |     +-GraphLabelNaryExpr
                  | |   | | |   |       +-op=NOT
                  | |   | | |   |       +-operand_list=
                  | |   | | |   |         +-GraphWildCardLabel
                  | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | +-head=$path_scan.$head#8
                  | |   | | +-tail=$path_scan.$tail#9
                  | |   | | +-quantifier=
                  | |   | | | +-GraphPathPatternQuantifier
                  | |   | | |   +-lower_bound=
                  | |   | | |   | +-Literal(type=INT64, value=3)
                  | |   | | |   +-upper_bound=
                  | |   | | |     +-Literal(type=INT64, value=3)
                  | |   | | +-group_variable_list=
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.y#3, array=$element_table.y#6)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.z#10]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$element_table.x#1
                  | |   +-tail=$element_table.z#10
                  | |   +-search_prefix=
                  | |     +-GraphPathSearchPrefix
                  | |       +-type=SHORTEST
                  | |       +-path_count=
                  | |         +-Literal(type=INT64, value=4)
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=[$graph_table.one#11]
                    +-expr_list=
                    | +-one#11 := Literal(type=INT64, value=1)
                    +-input_scan=
                      +-GraphRefScan(column_list=$element_table.[x#1, z#10])
==

select * from graph_table(
   aml
   match {{ANY|SHORTEST}} @test_param_int64 (x)-[y]->{3}(z)
   RETURN 1 AS one
 )
--
ALTERNATION GROUP: ANY
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#11 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#11]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#11]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.one#11]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.one#11]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.z#10]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.z#10]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.x#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphPathScan
                  | |   | | +-column_list=$path_scan.[$head#8, $tail#9]
                  | |   | | +-input_scan_list=
                  | |   | | | +-GraphNodeScan
                  | |   | | | | +-column_list=[$element_table.$element1#2]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | | +-GraphEdgeScan
                  | |   | | | | +-column_list=[$element_table.y#3]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | | | +-orientation=RIGHT
                  | |   | | | +-GraphNodeScan
                  | |   | | |   +-column_list=[$element_table.$element2#4]
                  | |   | | |   +-label_expr=
                  | |   | | |   | +-GraphLabelNaryExpr
                  | |   | | |   |   +-op=OR
                  | |   | | |   |   +-operand_list=
                  | |   | | |   |     +-GraphWildCardLabel
                  | |   | | |   |     +-GraphLabelNaryExpr
                  | |   | | |   |       +-op=NOT
                  | |   | | |   |       +-operand_list=
                  | |   | | |   |         +-GraphWildCardLabel
                  | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | +-head=$path_scan.$head#8
                  | |   | | +-tail=$path_scan.$tail#9
                  | |   | | +-quantifier=
                  | |   | | | +-GraphPathPatternQuantifier
                  | |   | | |   +-lower_bound=
                  | |   | | |   | +-Literal(type=INT64, value=3)
                  | |   | | |   +-upper_bound=
                  | |   | | |     +-Literal(type=INT64, value=3)
                  | |   | | +-group_variable_list=
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.y#3, array=$element_table.y#6)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.z#10]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$element_table.x#1
                  | |   +-tail=$element_table.z#10
                  | |   +-search_prefix=
                  | |     +-GraphPathSearchPrefix
                  | |       +-type=ANY
                  | |       +-path_count=
                  | |         +-Parameter(type=INT64, name="test_param_int64")
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=[$graph_table.one#11]
                    +-expr_list=
                    | +-one#11 := Literal(type=INT64, value=1)
                    +-input_scan=
                      +-GraphRefScan(column_list=$element_table.[x#1, z#10])
--
ALTERNATION GROUP: SHORTEST
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#11 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#11]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#11]
        +-property_graph=aml
        +-input_scan=
          +-GraphLinearScan
            +-column_list=[$graph_table.one#11]
            +-scan_list=
              +-GraphLinearScan
                +-column_list=[$graph_table.one#11]
                +-scan_list=
                  +-GraphScan
                  | +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.z#10]
                  | +-input_scan_list=
                  | | +-GraphPathScan
                  | |   +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.z#10]
                  | |   +-input_scan_list=
                  | |   | +-GraphNodeScan
                  | |   | | +-column_list=[$element_table.x#1]
                  | |   | | +-label_expr=
                  | |   | | | +-GraphLabelNaryExpr
                  | |   | | |   +-op=OR
                  | |   | | |   +-operand_list=
                  | |   | | |     +-GraphWildCardLabel
                  | |   | | |     +-GraphLabelNaryExpr
                  | |   | | |       +-op=NOT
                  | |   | | |       +-operand_list=
                  | |   | | |         +-GraphWildCardLabel
                  | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | +-GraphPathScan
                  | |   | | +-column_list=$path_scan.[$head#8, $tail#9]
                  | |   | | +-input_scan_list=
                  | |   | | | +-GraphNodeScan
                  | |   | | | | +-column_list=[$element_table.$element1#2]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | | +-GraphEdgeScan
                  | |   | | | | +-column_list=[$element_table.y#3]
                  | |   | | | | +-label_expr=
                  | |   | | | | | +-GraphLabelNaryExpr
                  | |   | | | | |   +-op=OR
                  | |   | | | | |   +-operand_list=
                  | |   | | | | |     +-GraphWildCardLabel
                  | |   | | | | |     +-GraphLabelNaryExpr
                  | |   | | | | |       +-op=NOT
                  | |   | | | | |       +-operand_list=
                  | |   | | | | |         +-GraphWildCardLabel
                  | |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
                  | |   | | | | +-orientation=RIGHT
                  | |   | | | +-GraphNodeScan
                  | |   | | |   +-column_list=[$element_table.$element2#4]
                  | |   | | |   +-label_expr=
                  | |   | | |   | +-GraphLabelNaryExpr
                  | |   | | |   |   +-op=OR
                  | |   | | |   |   +-operand_list=
                  | |   | | |   |     +-GraphWildCardLabel
                  | |   | | |   |     +-GraphLabelNaryExpr
                  | |   | | |   |       +-op=NOT
                  | |   | | |   |       +-operand_list=
                  | |   | | |   |         +-GraphWildCardLabel
                  | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   | | +-head=$path_scan.$head#8
                  | |   | | +-tail=$path_scan.$tail#9
                  | |   | | +-quantifier=
                  | |   | | | +-GraphPathPatternQuantifier
                  | |   | | |   +-lower_bound=
                  | |   | | |   | +-Literal(type=INT64, value=3)
                  | |   | | |   +-upper_bound=
                  | |   | | |     +-Literal(type=INT64, value=3)
                  | |   | | +-group_variable_list=
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.y#3, array=$element_table.y#6)
                  | |   | |   +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
                  | |   | +-GraphNodeScan
                  | |   |   +-column_list=[$element_table.z#10]
                  | |   |   +-label_expr=
                  | |   |   | +-GraphLabelNaryExpr
                  | |   |   |   +-op=OR
                  | |   |   |   +-operand_list=
                  | |   |   |     +-GraphWildCardLabel
                  | |   |   |     +-GraphLabelNaryExpr
                  | |   |   |       +-op=NOT
                  | |   |   |       +-operand_list=
                  | |   |   |         +-GraphWildCardLabel
                  | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
                  | |   +-head=$element_table.x#1
                  | |   +-tail=$element_table.z#10
                  | |   +-search_prefix=
                  | |     +-GraphPathSearchPrefix
                  | |       +-type=SHORTEST
                  | |       +-path_count=
                  | |         +-Parameter(type=INT64, name="test_param_int64")
                  | +-input_scan=
                  |   +-SingleRowScan
                  +-ProjectScan
                    +-column_list=[$graph_table.one#11]
                    +-expr_list=
                    | +-one#11 := Literal(type=INT64, value=1)
                    +-input_scan=
                      +-GraphRefScan(column_list=$element_table.[x#1, z#10])
==

# ANY K/SHORTEST K: with feature disabled.
[language_features=NONE,+SQL_GRAPH,+SQL_GRAPH_ADVANCED_QUERY,+SQL_GRAPH_BOUNDED_PATH_QUANTIFICATION]
select * from graph_table(
   aml
   match {{ANY|SHORTEST}} 4 (x)-[y]->{3}(z)
   RETURN 1 AS one
 )
--

ALTERNATION GROUP: ANY
--
ERROR: Path search prefix with path count is not supported [at 3:14]
   match ANY 4 (x)-[y]->{3}(z)
             ^
--
ALTERNATION GROUP: SHORTEST
--
ERROR: Path search prefix with path count is not supported [at 3:19]
   match SHORTEST 4 (x)-[y]->{3}(z)
                  ^
