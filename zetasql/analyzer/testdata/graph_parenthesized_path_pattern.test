[default language_features=NONE,+SQL_GRAPH]
[default no_test_extract_table_names]
[default show_sqlbuilder_output]

select * from graph_table(
  aml
  match ((a) @{key=n_e} -[b IS PersonOwnAccount]-> @{key=e_n} (c) WHERE a.Id = c.Id)
  columns (a.Id, b.PersonId, c.Id as c_id)
)

--
QueryStmt
+-output_column_list=
| +-$graph_table.Id#4 AS Id [INT64]
| +-$graph_table.PersonId#5 AS PersonId [INT64]
| +-$graph_table.c_id#6 AS c_id [INT64]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[Id#4, PersonId#5, c_id#6]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[Id#4, PersonId#5, c_id#6]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[a#1, b#2, c#3]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$element_table.[a#1, b#2, c#3]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.b#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=64-80, label=aml.PersonOwnAccount)
        |       | | +-target_element_table_list=[aml.PersonOwnAccount]
        |       | | +-orientation=RIGHT
        |       | | +-lhs_hint_list=
        |       | | | +-key := Literal(type=STRING, value="n_e")
        |       | | +-rhs_hint_list=
        |       | |   +-key := Literal(type=STRING, value="e_n")
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.c#3]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-filter_expr=
        |       | +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
        |       |   +-GraphGetElementProperty
        |       |   | +-type=INT64
        |       |   | +-expr=
        |       |   | | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
        |       |   | +-property=id(INT64)
        |       |   +-GraphGetElementProperty
        |       |     +-type=INT64
        |       |     +-expr=
        |       |     | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.c#3)
        |       |     +-property=id(INT64)
        |       +-head=$element_table.a#1
        |       +-tail=$element_table.c#3
        +-shape_expr_list=
          +-Id#4 :=
          | +-GraphGetElementProperty
          |   +-type=INT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
          |   +-property=id(INT64)
          +-PersonId#5 :=
          | +-GraphGetElementProperty
          |   +-type=INT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#2)
          |   +-property=personId(INT64)
          +-c_id#6 :=
            +-GraphGetElementProperty
              +-type=INT64
              +-expr=
              | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.c#3)
              +-property=id(INT64)

[SQLBUILDER_TARGET_SYNTAX_MODE standard]
[SQLBUILDER_OUTPUT]
SELECT
  aml_1.a_5 AS Id,
  aml_1.a_6 AS PersonId,
  aml_1.a_7 AS c_id
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        -[a_3
        IS PersonOwnAccount]-> @{ key = "e_n" }
        (a_4
        IS (% | ! %))
        WHERE
          (a_2.id) = (a_4.id)
      )
    COLUMNS(
      a_2.id AS a_5,
      a_3.personId AS a_6,
      a_4.id AS a_7
    )
  ) AS aml_1;

[SQLBUILDER_TARGET_SYNTAX_MODE pipe]
[SQLBUILDER_OUTPUT]
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        -[a_3
        IS PersonOwnAccount]-> @{ key = "e_n" }
        (a_4
        IS (% | ! %))
        WHERE
          (a_2.id) = (a_4.id)
      )
    COLUMNS(
      a_2.id AS a_5,
      a_3.personId AS a_6,
      a_4.id AS a_7
    )
  ) AS aml_1
|> SELECT
     aml_1.a_5 AS Id,
     aml_1.a_6 AS PersonId,
     aml_1.a_7 AS c_id;

==

select * from graph_table(
  aml
  MATCH (a) (-[e:Transfer]-> -[f:Transfer]-> WHERE e.targetAccountId = f.targetAccountId) -[g:Transfer]->
  COLUMNS (a.id, e.accountId, f.accountId AS fid)
)

--

QueryStmt
+-output_column_list=
| +-$graph_table.id#9 AS id [INT64]
| +-$graph_table.accountId#10 AS accountId [INT64]
| +-$graph_table.fid#11 AS fid [INT64]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[id#9, accountId#10, fid#11]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[id#9, accountId#10, fid#11]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[a#1, $element1#2, e#3, $element2#4, f#5, $element3#6, g#7, $element4#8]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$element_table.[a#1, $element1#2, e#3, $element2#4, f#5, $element3#6, g#7, $element4#8]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphPathScan
        |       | | +-column_list=$element_table.[$element1#2, e#3, $element2#4, f#5, $element3#6]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.$element1#2]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.e#3]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabel(parse_location=50-58, label=aml.Transfer)
        |       | | | | +-target_element_table_list=[aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.$element2#4]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.f#5]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabel(parse_location=66-74, label=aml.Transfer)
        |       | | | | +-target_element_table_list=[aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.$element3#6]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-filter_expr=
        |       | | | +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
        |       | | |   +-GraphGetElementProperty
        |       | | |   | +-type=INT64
        |       | | |   | +-expr=
        |       | | |   | | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$element_table.e#3)
        |       | | |   | +-property=targetAccountId(INT64)
        |       | | |   +-GraphGetElementProperty
        |       | | |     +-type=INT64
        |       | | |     +-expr=
        |       | | |     | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$element_table.f#5)
        |       | | |     +-property=targetAccountId(INT64)
        |       | | +-head=$element_table.$element1#2
        |       | | +-tail=$element_table.$element3#6
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.g#7]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=127-135, label=aml.Transfer)
        |       | | +-target_element_table_list=[aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.$element4#8]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$element_table.a#1
        |       +-tail=$element_table.$element4#8
        +-shape_expr_list=
          +-id#9 :=
          | +-GraphGetElementProperty
          |   +-type=INT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
          |   +-property=id(INT64)
          +-accountId#10 :=
          | +-GraphGetElementProperty
          |   +-type=INT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$element_table.e#3)
          |   +-property=accountId(INT64)
          +-fid#11 :=
            +-GraphGetElementProperty
              +-type=INT64
              +-expr=
              | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$element_table.f#5)
              +-property=accountId(INT64)

[SQLBUILDER_TARGET_SYNTAX_MODE standard]
[SQLBUILDER_OUTPUT]
SELECT
  aml_1.a_10 AS id,
  aml_1.a_11 AS accountId,
  aml_1.a_12 AS fid
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (a_2
      IS (% | ! %))
      (
        (a_3
        IS (% | ! %))
        -[a_4
        IS Transfer]->
        (a_5
        IS (% | ! %))
        -[a_6
        IS Transfer]->
        (a_7
        IS (% | ! %))
        WHERE
          (a_4.targetAccountId) = (a_6.targetAccountId)
      )
      -[a_8
      IS Transfer]->
      (a_9
      IS (% | ! %))
    COLUMNS(
      a_2.id AS a_10,
      a_4.accountId AS a_11,
      a_6.accountId AS a_12
    )
  ) AS aml_1;

[SQLBUILDER_TARGET_SYNTAX_MODE pipe]
[SQLBUILDER_OUTPUT]
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (a_2
      IS (% | ! %))
      (
        (a_3
        IS (% | ! %))
        -[a_4
        IS Transfer]->
        (a_5
        IS (% | ! %))
        -[a_6
        IS Transfer]->
        (a_7
        IS (% | ! %))
        WHERE
          (a_4.targetAccountId) = (a_6.targetAccountId)
      )
      -[a_8
      IS Transfer]->
      (a_9
      IS (% | ! %))
    COLUMNS(
      a_2.id AS a_10,
      a_4.accountId AS a_11,
      a_6.accountId AS a_12
    )
  ) AS aml_1
|> SELECT
     aml_1.a_10 AS id,
     aml_1.a_11 AS accountId,
     aml_1.a_12 AS fid;
==

select * from graph_table(
  aml
  MATCH (a) (-[e]-> -[f]-> WHERE e.targetAccountId = f.targetAccountId) -[e]->
  COLUMNS (a.Id, e.PersonId, f.PersonId AS fid)
)

--

QueryStmt
+-output_column_list=
| +-$graph_table.Id#9 AS Id [INT64]
| +-$graph_table.PersonId#10 AS PersonId [INT64]
| +-$graph_table.fid#11 AS fid [INT64]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[Id#9, PersonId#10, fid#11]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[Id#9, PersonId#10, fid#11]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[a#1, $element1#2, e#3, $element2#4, f#5, $element3#6, e#7, $element4#8]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$element_table.[a#1, $element1#2, e#3, $element2#4, f#5, $element3#6, e#7, $element4#8]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphPathScan
        |       | | +-column_list=$element_table.[$element1#2, e#3, $element2#4, f#5, $element3#6]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.$element1#2]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.e#3]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=AND
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |     | +-op=OR
        |       | | | | |     | +-operand_list=
        |       | | | | |     |   +-GraphWildCardLabel
        |       | | | | |     |   +-GraphLabelNaryExpr
        |       | | | | |     |     +-op=NOT
        |       | | | | |     |     +-operand_list=
        |       | | | | |     |       +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=OR
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | |         +-GraphLabelNaryExpr
        |       | | | | |           +-op=NOT
        |       | | | | |           +-operand_list=
        |       | | | | |             +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.$element2#4]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.f#5]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.$element3#6]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-filter_expr=
        |       | | | +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
        |       | | |   +-GraphGetElementProperty
        |       | | |   | +-type=INT64
        |       | | |   | +-expr=
        |       | | |   | | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, column=$element_table.e#3)
        |       | | |   | +-property=targetAccountId(INT64)
        |       | | |   +-GraphGetElementProperty
        |       | | |     +-type=INT64
        |       | | |     +-expr=
        |       | | |     | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, column=$element_table.f#5)
        |       | | |     +-property=targetAccountId(INT64)
        |       | | +-head=$element_table.$element1#2
        |       | | +-tail=$element_table.$element3#6
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.e#7]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=AND
        |       | | |   +-operand_list=
        |       | | |     +-GraphLabelNaryExpr
        |       | | |     | +-op=OR
        |       | | |     | +-operand_list=
        |       | | |     |   +-GraphWildCardLabel
        |       | | |     |   +-GraphLabelNaryExpr
        |       | | |     |     +-op=NOT
        |       | | |     |     +-operand_list=
        |       | | |     |       +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=OR
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | |         +-GraphLabelNaryExpr
        |       | | |           +-op=NOT
        |       | | |           +-operand_list=
        |       | | |             +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.$element4#8]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-filter_expr=
        |       | +-FunctionCall(ZetaSQL:$equal(GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>) -> BOOL)
        |       |   +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, column=$element_table.e#3)
        |       |   +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, column=$element_table.e#7)
        |       +-head=$element_table.a#1
        |       +-tail=$element_table.$element4#8
        +-shape_expr_list=
          +-Id#9 :=
          | +-GraphGetElementProperty
          |   +-type=INT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
          |   +-property=id(INT64)
          +-PersonId#10 :=
          | +-GraphGetElementProperty
          |   +-type=INT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, column=$element_table.e#3)
          |   +-property=personId(INT64)
          +-fid#11 :=
            +-GraphGetElementProperty
              +-type=INT64
              +-expr=
              | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, personId INT64, targetAccountId INT64>, column=$element_table.f#5)
              +-property=personId(INT64)

[SQLBUILDER_TARGET_SYNTAX_MODE standard]
[SQLBUILDER_OUTPUT]
SELECT
  aml_1.a_10 AS Id,
  aml_1.a_11 AS PersonId,
  aml_1.a_12 AS fid
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        (
          (a_3
          IS (% | ! %))
          -[a_4
          IS ((% | ! %) &(% | ! %))]->
          (a_5
          IS (% | ! %))
          -[a_6
          IS (% | ! %)]->
          (a_7
          IS (% | ! %))
          WHERE
            (a_4.targetAccountId) = (a_6.targetAccountId)
        )
        -[a_8
        IS ((% | ! %) &(% | ! %))]->
        (a_9
        IS (% | ! %))
        WHERE
          a_4 = a_8
      )
    COLUMNS(
      a_2.id AS a_10,
      a_4.personId AS a_11,
      a_6.personId AS a_12
    )
  ) AS aml_1;

[SQLBUILDER_TARGET_SYNTAX_MODE pipe]
[SQLBUILDER_OUTPUT]
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        (
          (a_3
          IS (% | ! %))
          -[a_4
          IS ((% | ! %) &(% | ! %))]->
          (a_5
          IS (% | ! %))
          -[a_6
          IS (% | ! %)]->
          (a_7
          IS (% | ! %))
          WHERE
            (a_4.targetAccountId) = (a_6.targetAccountId)
        )
        -[a_8
        IS ((% | ! %) &(% | ! %))]->
        (a_9
        IS (% | ! %))
        WHERE
          a_4 = a_8
      )
    COLUMNS(
      a_2.id AS a_10,
      a_4.personId AS a_11,
      a_6.personId AS a_12
    )
  ) AS aml_1
|> SELECT
     aml_1.a_10 AS Id,
     aml_1.a_11 AS PersonId,
     aml_1.a_12 AS fid;
==

select * from graph_table(
  aml
  MATCH (-[e:Transfer]-> (a)) ( -[@{key=e_hint} e:Transfer]-> )
  COLUMNS (a.id, e.accountId)
)
--

QueryStmt
+-output_column_list=
| +-$graph_table.id#7 AS id [INT64]
| +-$graph_table.accountId#8 AS accountId [INT64]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[id#7, accountId#8]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[id#7, accountId#8]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[$element1#1, e#2, a#3, $element2#4, e#5, $element3#6]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$element_table.[$element1#1, e#2, a#3, $element2#4, e#5, $element3#6]
        |       +-input_scan_list=
        |       | +-GraphPathScan
        |       | | +-column_list=$element_table.[$element1#1, e#2, a#3]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.$element1#1]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.e#2]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=AND
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphLabel(parse_location=46-54, label=aml.Transfer)
        |       | | | | |     +-GraphLabel(parse_location=83-91, label=aml.Transfer)
        |       | | | | +-target_element_table_list=[aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.a#3]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-head=$element_table.$element1#1
        |       | | +-tail=$element_table.a#3
        |       | +-GraphPathScan
        |       |   +-column_list=$element_table.[$element2#4, e#5, $element3#6]
        |       |   +-input_scan_list=
        |       |   | +-GraphNodeScan
        |       |   | | +-column_list=[$element_table.$element2#4]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   | +-GraphEdgeScan
        |       |   | | +-column_list=[$element_table.e#5]
        |       |   | | +-hint_list=
        |       |   | | | +-key := Literal(type=STRING, value="e_hint")
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=AND
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphLabel(parse_location=46-54, label=aml.Transfer)
        |       |   | | |     +-GraphLabel(parse_location=83-91, label=aml.Transfer)
        |       |   | | +-target_element_table_list=[aml.Transfer]
        |       |   | | +-orientation=RIGHT
        |       |   | +-GraphNodeScan
        |       |   |   +-column_list=[$element_table.$element3#6]
        |       |   |   +-label_expr=
        |       |   |   | +-GraphLabelNaryExpr
        |       |   |   |   +-op=OR
        |       |   |   |   +-operand_list=
        |       |   |   |     +-GraphWildCardLabel
        |       |   |   |     +-GraphLabelNaryExpr
        |       |   |   |       +-op=NOT
        |       |   |   |       +-operand_list=
        |       |   |   |         +-GraphWildCardLabel
        |       |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   +-head=$element_table.$element2#4
        |       |   +-tail=$element_table.$element3#6
        |       +-filter_expr=
        |       | +-FunctionCall(ZetaSQL:$equal(GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>) -> BOOL)
        |       |   +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$element_table.e#2)
        |       |   +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$element_table.e#5)
        |       +-head=$element_table.$element1#1
        |       +-tail=$element_table.$element3#6
        +-shape_expr_list=
          +-id#7 :=
          | +-GraphGetElementProperty
          |   +-type=INT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#3)
          |   +-property=id(INT64)
          +-accountId#8 :=
            +-GraphGetElementProperty
              +-type=INT64
              +-expr=
              | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$element_table.e#2)
              +-property=accountId(INT64)

[SQLBUILDER_TARGET_SYNTAX_MODE standard]
[SQLBUILDER_OUTPUT]
SELECT
  aml_1.a_8 AS id,
  aml_1.a_9 AS accountId
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (
          (a_2
          IS (% | ! %))
          -[a_3
          IS (Transfer & Transfer)]->
          (a_4
          IS (% | ! %))
        )
        (
          (a_5
          IS (% | ! %))
          -[@{ key = "e_hint" } a_6
          IS (Transfer & Transfer)]->
          (a_7
          IS (% | ! %))
        )
        WHERE
          a_3 = a_6
      )
    COLUMNS(
      a_4.id AS a_8,
      a_3.accountId AS a_9
    )
  ) AS aml_1;

[SQLBUILDER_TARGET_SYNTAX_MODE pipe]
[SQLBUILDER_OUTPUT]
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (
          (a_2
          IS (% | ! %))
          -[a_3
          IS (Transfer & Transfer)]->
          (a_4
          IS (% | ! %))
        )
        (
          (a_5
          IS (% | ! %))
          -[@{ key = "e_hint" } a_6
          IS (Transfer & Transfer)]->
          (a_7
          IS (% | ! %))
        )
        WHERE
          a_3 = a_6
      )
    COLUMNS(
      a_4.id AS a_8,
      a_3.accountId AS a_9
    )
  ) AS aml_1
|> SELECT
     aml_1.a_8 AS id,
     aml_1.a_9 AS accountId;
==

select * from graph_table(
  aml
  MATCH ((()) @{key=s_e} -> @{key=e_n} ())
  COLUMNS (1 AS res)
)

--

QueryStmt
+-output_column_list=
| +-$graph_table.res#4 AS res [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.res#4]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.res#4]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[$element1#1, $element2#2, $element3#3]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$element_table.[$element1#1, $element2#2, $element3#3]
        |       +-input_scan_list=
        |       | +-GraphPathScan
        |       | | +-column_list=[$element_table.$element1#1]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.$element1#1]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-head=$element_table.$element1#1
        |       | | +-tail=$element_table.$element1#1
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.$element2#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | | +-lhs_hint_list=
        |       | | | +-key := Literal(type=STRING, value="s_e")
        |       | | +-rhs_hint_list=
        |       | |   +-key := Literal(type=STRING, value="e_n")
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.$element3#3]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$element_table.$element1#1
        |       +-tail=$element_table.$element3#3
        +-shape_expr_list=
          +-res#4 := Literal(type=INT64, value=1)

[SQLBUILDER_TARGET_SYNTAX_MODE standard]
[SQLBUILDER_OUTPUT]
SELECT
  aml_1.a_5 AS res
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
      )
      -[a_3
      IS (% | ! %)]-> @{ key = "e_n" }
      (a_4
      IS (% | ! %))
    COLUMNS(
      1 AS a_5
    )
  ) AS aml_1;

[SQLBUILDER_TARGET_SYNTAX_MODE pipe]
[SQLBUILDER_OUTPUT]
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
      )
      -[a_3
      IS (% | ! %)]-> @{ key = "e_n" }
      (a_4
      IS (% | ! %))
    COLUMNS(
      1 AS a_5
    )
  ) AS aml_1
|> SELECT
     aml_1.a_5 AS res;
==

select * from graph_table(
  aml
  MATCH ((-[e: PersonOwnAccount]->)) (((a)) -> ()) ((()))
  COLUMNS (a.Id)
)

--

QueryStmt
+-output_column_list=
| +-$graph_table.Id#8 AS Id [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.Id#8]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.Id#8]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[$element1#1, e#2, $element2#3, a#4, $element3#5, $element4#6, $element5#7]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$element_table.[$element1#1, e#2, $element2#3, a#4, $element3#5, $element4#6, $element5#7]
        |       +-input_scan_list=
        |       | +-GraphPathScan
        |       | | +-column_list=$element_table.[$element1#1, e#2, $element2#3]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.$element1#1]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.e#2]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabel(parse_location=48-64, label=aml.PersonOwnAccount)
        |       | | | | +-target_element_table_list=[aml.PersonOwnAccount]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.$element2#3]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-head=$element_table.$element1#1
        |       | | +-tail=$element_table.$element2#3
        |       | +-GraphPathScan
        |       | | +-column_list=$element_table.[a#4, $element3#5, $element4#6]
        |       | | +-input_scan_list=
        |       | | | +-GraphPathScan
        |       | | | | +-column_list=[$element_table.a#4]
        |       | | | | +-input_scan_list=
        |       | | | | | +-GraphNodeScan
        |       | | | | |   +-column_list=[$element_table.a#4]
        |       | | | | |   +-label_expr=
        |       | | | | |   | +-GraphLabelNaryExpr
        |       | | | | |   |   +-op=OR
        |       | | | | |   |   +-operand_list=
        |       | | | | |   |     +-GraphWildCardLabel
        |       | | | | |   |     +-GraphLabelNaryExpr
        |       | | | | |   |       +-op=NOT
        |       | | | | |   |       +-operand_list=
        |       | | | | |   |         +-GraphWildCardLabel
        |       | | | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | | +-head=$element_table.a#4
        |       | | | | +-tail=$element_table.a#4
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.$element3#5]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.$element4#6]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-head=$element_table.a#4
        |       | | +-tail=$element_table.$element4#6
        |       | +-GraphPathScan
        |       |   +-column_list=[$element_table.$element5#7]
        |       |   +-input_scan_list=
        |       |   | +-GraphNodeScan
        |       |   |   +-column_list=[$element_table.$element5#7]
        |       |   |   +-label_expr=
        |       |   |   | +-GraphLabelNaryExpr
        |       |   |   |   +-op=OR
        |       |   |   |   +-operand_list=
        |       |   |   |     +-GraphWildCardLabel
        |       |   |   |     +-GraphLabelNaryExpr
        |       |   |   |       +-op=NOT
        |       |   |   |       +-operand_list=
        |       |   |   |         +-GraphWildCardLabel
        |       |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   +-head=$element_table.$element5#7
        |       |   +-tail=$element_table.$element5#7
        |       +-head=$element_table.$element1#1
        |       +-tail=$element_table.$element5#7
        +-shape_expr_list=
          +-Id#8 :=
            +-GraphGetElementProperty
              +-type=INT64
              +-expr=
              | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#4)
              +-property=id(INT64)

[SQLBUILDER_TARGET_SYNTAX_MODE standard]
[SQLBUILDER_OUTPUT]
SELECT
  aml_1.a_9 AS Id
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        -[a_3
        IS PersonOwnAccount]->
        (a_4
        IS (% | ! %))
      )
      (
        (
          (a_5
          IS (% | ! %))
        )
        -[a_6
        IS (% | ! %)]->
        (a_7
        IS (% | ! %))
      )
      (
        (a_8
        IS (% | ! %))
      )
    COLUMNS(
      a_5.id AS a_9
    )
  ) AS aml_1;

[SQLBUILDER_TARGET_SYNTAX_MODE pipe]
[SQLBUILDER_OUTPUT]
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        -[a_3
        IS PersonOwnAccount]->
        (a_4
        IS (% | ! %))
      )
      (
        (
          (a_5
          IS (% | ! %))
        )
        -[a_6
        IS (% | ! %)]->
        (a_7
        IS (% | ! %))
      )
      (
        (a_8
        IS (% | ! %))
      )
    COLUMNS(
      a_5.id AS a_9
    )
  ) AS aml_1
|> SELECT
     aml_1.a_9 AS Id;
==

select * from graph_table(
  aml
  match ( -[e:Transfer]-> ((a) -> (b)) WHERE a.id = e.accountId)
  columns (a.id)
)

--

QueryStmt
+-output_column_list=
| +-$graph_table.id#6 AS id [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.id#6]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.id#6]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[$element1#1, e#2, a#3, $element2#4, b#5]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$element_table.[$element1#1, e#2, a#3, $element2#4, b#5]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.$element1#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.e#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=47-55, label=aml.Transfer)
        |       | | +-target_element_table_list=[aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphPathScan
        |       |   +-column_list=$element_table.[a#3, $element2#4, b#5]
        |       |   +-input_scan_list=
        |       |   | +-GraphNodeScan
        |       |   | | +-column_list=[$element_table.a#3]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   | +-GraphEdgeScan
        |       |   | | +-column_list=[$element_table.$element2#4]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       |   | | +-orientation=RIGHT
        |       |   | +-GraphNodeScan
        |       |   |   +-column_list=[$element_table.b#5]
        |       |   |   +-label_expr=
        |       |   |   | +-GraphLabelNaryExpr
        |       |   |   |   +-op=OR
        |       |   |   |   +-operand_list=
        |       |   |   |     +-GraphWildCardLabel
        |       |   |   |     +-GraphLabelNaryExpr
        |       |   |   |       +-op=NOT
        |       |   |   |       +-operand_list=
        |       |   |   |         +-GraphWildCardLabel
        |       |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   +-head=$element_table.a#3
        |       |   +-tail=$element_table.b#5
        |       +-filter_expr=
        |       | +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
        |       |   +-GraphGetElementProperty
        |       |   | +-type=INT64
        |       |   | +-expr=
        |       |   | | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#3)
        |       |   | +-property=id(INT64)
        |       |   +-GraphGetElementProperty
        |       |     +-type=INT64
        |       |     +-expr=
        |       |     | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$element_table.e#2)
        |       |     +-property=accountId(INT64)
        |       +-head=$element_table.$element1#1
        |       +-tail=$element_table.b#5
        +-shape_expr_list=
          +-id#6 :=
            +-GraphGetElementProperty
              +-type=INT64
              +-expr=
              | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#3)
              +-property=id(INT64)

[SQLBUILDER_TARGET_SYNTAX_MODE standard]
[SQLBUILDER_OUTPUT]
SELECT
  aml_1.a_7 AS id
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        -[a_3
        IS Transfer]->
        (
          (a_4
          IS (% | ! %))
          -[a_5
          IS (% | ! %)]->
          (a_6
          IS (% | ! %))
        )
        WHERE
          (a_4.id) = (a_3.accountId)
      )
    COLUMNS(
      a_4.id AS a_7
    )
  ) AS aml_1;

[SQLBUILDER_TARGET_SYNTAX_MODE pipe]
[SQLBUILDER_OUTPUT]
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        -[a_3
        IS Transfer]->
        (
          (a_4
          IS (% | ! %))
          -[a_5
          IS (% | ! %)]->
          (a_6
          IS (% | ! %))
        )
        WHERE
          (a_4.id) = (a_3.accountId)
      )
    COLUMNS(
      a_4.id AS a_7
    )
  ) AS aml_1
|> SELECT
     aml_1.a_7 AS id;
==

select * from graph_table(
  aml
  match ( -[e:Transfer]-> ((a) -> (b)) WHERE e.accountId = a.id)
  columns (a.id)
)

--

QueryStmt
+-output_column_list=
| +-$graph_table.id#6 AS id [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.id#6]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.id#6]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[$element1#1, e#2, a#3, $element2#4, b#5]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$element_table.[$element1#1, e#2, a#3, $element2#4, b#5]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.$element1#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.e#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=47-55, label=aml.Transfer)
        |       | | +-target_element_table_list=[aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphPathScan
        |       |   +-column_list=$element_table.[a#3, $element2#4, b#5]
        |       |   +-input_scan_list=
        |       |   | +-GraphNodeScan
        |       |   | | +-column_list=[$element_table.a#3]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   | +-GraphEdgeScan
        |       |   | | +-column_list=[$element_table.$element2#4]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       |   | | +-orientation=RIGHT
        |       |   | +-GraphNodeScan
        |       |   |   +-column_list=[$element_table.b#5]
        |       |   |   +-label_expr=
        |       |   |   | +-GraphLabelNaryExpr
        |       |   |   |   +-op=OR
        |       |   |   |   +-operand_list=
        |       |   |   |     +-GraphWildCardLabel
        |       |   |   |     +-GraphLabelNaryExpr
        |       |   |   |       +-op=NOT
        |       |   |   |       +-operand_list=
        |       |   |   |         +-GraphWildCardLabel
        |       |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   +-head=$element_table.a#3
        |       |   +-tail=$element_table.b#5
        |       +-filter_expr=
        |       | +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
        |       |   +-GraphGetElementProperty
        |       |   | +-type=INT64
        |       |   | +-expr=
        |       |   | | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, amount UINT64, targetAccountId INT64>, column=$element_table.e#2)
        |       |   | +-property=accountId(INT64)
        |       |   +-GraphGetElementProperty
        |       |     +-type=INT64
        |       |     +-expr=
        |       |     | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#3)
        |       |     +-property=id(INT64)
        |       +-head=$element_table.$element1#1
        |       +-tail=$element_table.b#5
        +-shape_expr_list=
          +-id#6 :=
            +-GraphGetElementProperty
              +-type=INT64
              +-expr=
              | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#3)
              +-property=id(INT64)

[SQLBUILDER_TARGET_SYNTAX_MODE standard]
[SQLBUILDER_OUTPUT]
SELECT
  aml_1.a_7 AS id
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        -[a_3
        IS Transfer]->
        (
          (a_4
          IS (% | ! %))
          -[a_5
          IS (% | ! %)]->
          (a_6
          IS (% | ! %))
        )
        WHERE
          (a_3.accountId) = (a_4.id)
      )
    COLUMNS(
      a_4.id AS a_7
    )
  ) AS aml_1;

[SQLBUILDER_TARGET_SYNTAX_MODE pipe]
[SQLBUILDER_OUTPUT]
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        -[a_3
        IS Transfer]->
        (
          (a_4
          IS (% | ! %))
          -[a_5
          IS (% | ! %)]->
          (a_6
          IS (% | ! %))
        )
        WHERE
          (a_3.accountId) = (a_4.id)
      )
    COLUMNS(
      a_4.id AS a_7
    )
  ) AS aml_1
|> SELECT
     aml_1.a_7 AS id;
==

select * from graph_table(
  aml
  match (a) (->) (b)
  where (a.Id < b.Id)
  columns (a.*)
)

--
QueryStmt
+-output_column_list=
| +-$graph_table.age#6 AS age [UINT32]
| +-$graph_table.balance#7 AS balance [UINT64]
| +-$graph_table.birthday#8 AS birthday [DATE]
| +-$graph_table.data#9 AS data [BYTES]
| +-$graph_table.id#10 AS id [INT64]
| +-$graph_table.name#11 AS name [STRING]
| +-$graph_table.syndicateData#12 AS syndicateData [ARRAY<INT64>]
| +-$graph_table.syndicateId#13 AS syndicateId [INT64]
| +-$graph_table.syndicateName#14 AS syndicateName [STRING]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[age#6, balance#7, birthday#8, data#9, id#10, name#11, syndicateData#12, syndicateId#13, syndicateName#14]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[age#6, balance#7, birthday#8, data#9, id#10, name#11, syndicateData#12, syndicateId#13, syndicateName#14]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[a#1, $element1#2, $element2#3, $element3#4, b#5]
        |   +-input_scan_list=
        |   | +-GraphPathScan
        |   |   +-column_list=$element_table.[a#1, $element1#2, $element2#3, $element3#4, b#5]
        |   |   +-input_scan_list=
        |   |   | +-GraphNodeScan
        |   |   | | +-column_list=[$element_table.a#1]
        |   |   | | +-label_expr=
        |   |   | | | +-GraphLabelNaryExpr
        |   |   | | |   +-op=OR
        |   |   | | |   +-operand_list=
        |   |   | | |     +-GraphWildCardLabel
        |   |   | | |     +-GraphLabelNaryExpr
        |   |   | | |       +-op=NOT
        |   |   | | |       +-operand_list=
        |   |   | | |         +-GraphWildCardLabel
        |   |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   |   | +-GraphPathScan
        |   |   | | +-column_list=$element_table.[$element1#2, $element2#3, $element3#4]
        |   |   | | +-input_scan_list=
        |   |   | | | +-GraphNodeScan
        |   |   | | | | +-column_list=[$element_table.$element1#2]
        |   |   | | | | +-label_expr=
        |   |   | | | | | +-GraphLabelNaryExpr
        |   |   | | | | |   +-op=OR
        |   |   | | | | |   +-operand_list=
        |   |   | | | | |     +-GraphWildCardLabel
        |   |   | | | | |     +-GraphLabelNaryExpr
        |   |   | | | | |       +-op=NOT
        |   |   | | | | |       +-operand_list=
        |   |   | | | | |         +-GraphWildCardLabel
        |   |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   |   | | | +-GraphEdgeScan
        |   |   | | | | +-column_list=[$element_table.$element2#3]
        |   |   | | | | +-label_expr=
        |   |   | | | | | +-GraphLabelNaryExpr
        |   |   | | | | |   +-op=OR
        |   |   | | | | |   +-operand_list=
        |   |   | | | | |     +-GraphWildCardLabel
        |   |   | | | | |     +-GraphLabelNaryExpr
        |   |   | | | | |       +-op=NOT
        |   |   | | | | |       +-operand_list=
        |   |   | | | | |         +-GraphWildCardLabel
        |   |   | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   |   | | | | +-orientation=RIGHT
        |   |   | | | +-GraphNodeScan
        |   |   | | |   +-column_list=[$element_table.$element3#4]
        |   |   | | |   +-label_expr=
        |   |   | | |   | +-GraphLabelNaryExpr
        |   |   | | |   |   +-op=OR
        |   |   | | |   |   +-operand_list=
        |   |   | | |   |     +-GraphWildCardLabel
        |   |   | | |   |     +-GraphLabelNaryExpr
        |   |   | | |   |       +-op=NOT
        |   |   | | |   |       +-operand_list=
        |   |   | | |   |         +-GraphWildCardLabel
        |   |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   |   | | +-head=$element_table.$element1#2
        |   |   | | +-tail=$element_table.$element3#4
        |   |   | +-GraphNodeScan
        |   |   |   +-column_list=[$element_table.b#5]
        |   |   |   +-label_expr=
        |   |   |   | +-GraphLabelNaryExpr
        |   |   |   |   +-op=OR
        |   |   |   |   +-operand_list=
        |   |   |   |     +-GraphWildCardLabel
        |   |   |   |     +-GraphLabelNaryExpr
        |   |   |   |       +-op=NOT
        |   |   |   |       +-operand_list=
        |   |   |   |         +-GraphWildCardLabel
        |   |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   |   +-head=$element_table.a#1
        |   |   +-tail=$element_table.b#5
        |   +-filter_expr=
        |     +-FunctionCall(ZetaSQL:$less(INT64, INT64) -> BOOL)
        |       +-GraphGetElementProperty
        |       | +-type=INT64
        |       | +-expr=
        |       | | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
        |       | +-property=id(INT64)
        |       +-GraphGetElementProperty
        |         +-type=INT64
        |         +-expr=
        |         | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.b#5)
        |         +-property=id(INT64)
        +-shape_expr_list=
          +-age#6 :=
          | +-GraphGetElementProperty
          |   +-type=UINT32
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
          |   +-property=age(UINT32)
          +-balance#7 :=
          | +-GraphGetElementProperty
          |   +-type=UINT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
          |   +-property=balance(UINT64)
          +-birthday#8 :=
          | +-GraphGetElementProperty
          |   +-type=DATE
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
          |   +-property=birthday(DATE)
          +-data#9 :=
          | +-GraphGetElementProperty
          |   +-type=BYTES
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
          |   +-property=data(BYTES)
          +-id#10 :=
          | +-GraphGetElementProperty
          |   +-type=INT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
          |   +-property=id(INT64)
          +-name#11 :=
          | +-GraphGetElementProperty
          |   +-type=STRING
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
          |   +-property=name(STRING)
          +-syndicateData#12 :=
          | +-GraphGetElementProperty
          |   +-type=ARRAY<INT64>
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
          |   +-property=syndicateData(ARRAY<INT64>)
          +-syndicateId#13 :=
          | +-GraphGetElementProperty
          |   +-type=INT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
          |   +-property=syndicateId(INT64)
          +-syndicateName#14 :=
            +-GraphGetElementProperty
              +-type=STRING
              +-expr=
              | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
              +-property=syndicateName(STRING)

[SQLBUILDER_TARGET_SYNTAX_MODE standard]
[SQLBUILDER_OUTPUT]
SELECT
  aml_1.a_7 AS age,
  aml_1.a_8 AS balance,
  aml_1.a_9 AS birthday,
  aml_1.a_10 AS data,
  aml_1.a_11 AS id,
  aml_1.a_12 AS name,
  aml_1.a_13 AS syndicateData,
  aml_1.a_14 AS syndicateId,
  aml_1.a_15 AS syndicateName
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (a_2
      IS (% | ! %))
      (
        (a_3
        IS (% | ! %))
        -[a_4
        IS (% | ! %)]->
        (a_5
        IS (% | ! %))
      )
      (a_6
      IS (% | ! %))
      WHERE
        (a_2.id) < (a_6.id)
    COLUMNS(
      a_2.age AS a_7,
      a_2.balance AS a_8,
      a_2.birthday AS a_9,
      a_2.data AS a_10,
      a_2.id AS a_11,
      a_2.name AS a_12,
      a_2.syndicateData AS a_13,
      a_2.syndicateId AS a_14,
      a_2.syndicateName AS a_15
    )
  ) AS aml_1;

[SQLBUILDER_TARGET_SYNTAX_MODE pipe]
[SQLBUILDER_OUTPUT]
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (a_2
      IS (% | ! %))
      (
        (a_3
        IS (% | ! %))
        -[a_4
        IS (% | ! %)]->
        (a_5
        IS (% | ! %))
      )
      (a_6
      IS (% | ! %))
      WHERE
        (a_2.id) < (a_6.id)
    COLUMNS(
      a_2.age AS a_7,
      a_2.balance AS a_8,
      a_2.birthday AS a_9,
      a_2.data AS a_10,
      a_2.id AS a_11,
      a_2.name AS a_12,
      a_2.syndicateData AS a_13,
      a_2.syndicateId AS a_14,
      a_2.syndicateName AS a_15
    )
  ) AS aml_1
|> SELECT
     aml_1.a_7 AS age,
     aml_1.a_8 AS balance,
     aml_1.a_9 AS birthday,
     aml_1.a_10 AS data,
     aml_1.a_11 AS id,
     aml_1.a_12 AS name,
     aml_1.a_13 AS syndicateData,
     aml_1.a_14 AS syndicateId,
     aml_1.a_15 AS syndicateName;
==

select * from graph_table(
  aml
  MATCH ((-[b: PersonOwnAccount]-> WHERE true)), @{key = path_path_1} ((((-[b]->))) WHERE true), @{key = path_path_2} (((( -> @{key = e_subpath} ((-[b]-> WHERE true)) @{key = subpath_e} -> )) WHERE false)), (((-[b]->))), @{key = path_path_3} ((()))
  COLUMNS (b.*)
)

--

QueryStmt
+-output_column_list=
| +-$graph_table.accountId#18 AS accountId [INT64]
| +-$graph_table.personId#19 AS personId [INT64]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[accountId#18, personId#19]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[accountId#18, personId#19]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[$element1#1, b#2, $element2#3, $element3#4, b#5, $element4#6, $element5#7, $element6#8, $element7#9, b#10, $element8#11, $element9#12, $element10#13, $element11#14, b#15, $element12#16, $element13#17]
        |   +-input_scan_list=
        |   | +-GraphPathScan
        |   | | +-column_list=$element_table.[$element1#1, b#2, $element2#3]
        |   | | +-input_scan_list=
        |   | | | +-GraphNodeScan
        |   | | | | +-column_list=[$element_table.$element1#1]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=OR
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=NOT
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | | +-GraphEdgeScan
        |   | | | | +-column_list=[$element_table.b#2]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=AND
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphLabel(parse_location=48-64, label=aml.PersonOwnAccount)
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=OR
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | |         +-GraphLabelNaryExpr
        |   | | | | |           +-op=NOT
        |   | | | | |           +-operand_list=
        |   | | | | |             +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.PersonOwnAccount]
        |   | | | | +-orientation=RIGHT
        |   | | | +-GraphNodeScan
        |   | | |   +-column_list=[$element_table.$element2#3]
        |   | | |   +-label_expr=
        |   | | |   | +-GraphLabelNaryExpr
        |   | | |   |   +-op=OR
        |   | | |   |   +-operand_list=
        |   | | |   |     +-GraphWildCardLabel
        |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   |       +-op=NOT
        |   | | |   |       +-operand_list=
        |   | | |   |         +-GraphWildCardLabel
        |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | +-filter_expr=
        |   | | | +-Literal(type=BOOL, value=true)
        |   | | +-head=$element_table.$element1#1
        |   | | +-tail=$element_table.$element2#3
        |   | +-GraphPathScan
        |   | | +-column_list=$element_table.[$element3#4, b#5, $element4#6]
        |   | | +-input_scan_list=
        |   | | | +-GraphPathScan
        |   | | |   +-column_list=$element_table.[$element3#4, b#5, $element4#6]
        |   | | |   +-input_scan_list=
        |   | | |   | +-GraphNodeScan
        |   | | |   | | +-column_list=[$element_table.$element3#4]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=OR
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=NOT
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   | +-GraphEdgeScan
        |   | | |   | | +-column_list=[$element_table.b#5]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=AND
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphLabel(parse_location=48-64, label=aml.PersonOwnAccount)
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |     | +-op=OR
        |   | | |   | | |     | +-operand_list=
        |   | | |   | | |     |   +-GraphWildCardLabel
        |   | | |   | | |     |   +-GraphLabelNaryExpr
        |   | | |   | | |     |     +-op=NOT
        |   | | |   | | |     |     +-operand_list=
        |   | | |   | | |     |       +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |     | +-op=OR
        |   | | |   | | |     | +-operand_list=
        |   | | |   | | |     |   +-GraphWildCardLabel
        |   | | |   | | |     |   +-GraphLabelNaryExpr
        |   | | |   | | |     |     +-op=NOT
        |   | | |   | | |     |     +-operand_list=
        |   | | |   | | |     |       +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=OR
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | |         +-GraphLabelNaryExpr
        |   | | |   | | |           +-op=NOT
        |   | | |   | | |           +-operand_list=
        |   | | |   | | |             +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.PersonOwnAccount]
        |   | | |   | | +-orientation=RIGHT
        |   | | |   | +-GraphNodeScan
        |   | | |   |   +-column_list=[$element_table.$element4#6]
        |   | | |   |   +-label_expr=
        |   | | |   |   | +-GraphLabelNaryExpr
        |   | | |   |   |   +-op=OR
        |   | | |   |   |   +-operand_list=
        |   | | |   |   |     +-GraphWildCardLabel
        |   | | |   |   |     +-GraphLabelNaryExpr
        |   | | |   |   |       +-op=NOT
        |   | | |   |   |       +-operand_list=
        |   | | |   |   |         +-GraphWildCardLabel
        |   | | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   +-head=$element_table.$element3#4
        |   | | |   +-tail=$element_table.$element4#6
        |   | | +-filter_expr=
        |   | | | +-Literal(type=BOOL, value=true)
        |   | | +-head=$element_table.$element3#4
        |   | | +-tail=$element_table.$element4#6
        |   | | +-path_hint_list=
        |   | |   +-key := Literal(type=STRING, value="path_path_1")
        |   | +-GraphPathScan
        |   | | +-column_list=$element_table.[$element5#7, $element6#8, $element7#9, b#10, $element8#11, $element9#12, $element10#13]
        |   | | +-input_scan_list=
        |   | | | +-GraphPathScan
        |   | | |   +-column_list=$element_table.[$element5#7, $element6#8, $element7#9, b#10, $element8#11, $element9#12, $element10#13]
        |   | | |   +-input_scan_list=
        |   | | |   | +-GraphNodeScan
        |   | | |   | | +-column_list=[$element_table.$element5#7]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=OR
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=NOT
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   | +-GraphEdgeScan
        |   | | |   | | +-column_list=[$element_table.$element6#8]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=OR
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=NOT
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   | | |   | | +-orientation=RIGHT
        |   | | |   | | +-rhs_hint_list=
        |   | | |   | |   +-key := Literal(type=STRING, value="e_subpath")
        |   | | |   | +-GraphPathScan
        |   | | |   | | +-column_list=$element_table.[$element7#9, b#10, $element8#11]
        |   | | |   | | +-input_scan_list=
        |   | | |   | | | +-GraphNodeScan
        |   | | |   | | | | +-column_list=[$element_table.$element7#9]
        |   | | |   | | | | +-label_expr=
        |   | | |   | | | | | +-GraphLabelNaryExpr
        |   | | |   | | | | |   +-op=OR
        |   | | |   | | | | |   +-operand_list=
        |   | | |   | | | | |     +-GraphWildCardLabel
        |   | | |   | | | | |     +-GraphLabelNaryExpr
        |   | | |   | | | | |       +-op=NOT
        |   | | |   | | | | |       +-operand_list=
        |   | | |   | | | | |         +-GraphWildCardLabel
        |   | | |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   | | | +-GraphEdgeScan
        |   | | |   | | | | +-column_list=[$element_table.b#10]
        |   | | |   | | | | +-label_expr=
        |   | | |   | | | | | +-GraphLabelNaryExpr
        |   | | |   | | | | |   +-op=AND
        |   | | |   | | | | |   +-operand_list=
        |   | | |   | | | | |     +-GraphLabel(parse_location=48-64, label=aml.PersonOwnAccount)
        |   | | |   | | | | |     +-GraphLabelNaryExpr
        |   | | |   | | | | |     | +-op=OR
        |   | | |   | | | | |     | +-operand_list=
        |   | | |   | | | | |     |   +-GraphWildCardLabel
        |   | | |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | |   | | | | |     |     +-op=NOT
        |   | | |   | | | | |     |     +-operand_list=
        |   | | |   | | | | |     |       +-GraphWildCardLabel
        |   | | |   | | | | |     +-GraphLabelNaryExpr
        |   | | |   | | | | |     | +-op=OR
        |   | | |   | | | | |     | +-operand_list=
        |   | | |   | | | | |     |   +-GraphWildCardLabel
        |   | | |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | |   | | | | |     |     +-op=NOT
        |   | | |   | | | | |     |     +-operand_list=
        |   | | |   | | | | |     |       +-GraphWildCardLabel
        |   | | |   | | | | |     +-GraphLabelNaryExpr
        |   | | |   | | | | |       +-op=OR
        |   | | |   | | | | |       +-operand_list=
        |   | | |   | | | | |         +-GraphWildCardLabel
        |   | | |   | | | | |         +-GraphLabelNaryExpr
        |   | | |   | | | | |           +-op=NOT
        |   | | |   | | | | |           +-operand_list=
        |   | | |   | | | | |             +-GraphWildCardLabel
        |   | | |   | | | | +-target_element_table_list=[aml.PersonOwnAccount]
        |   | | |   | | | | +-orientation=RIGHT
        |   | | |   | | | +-GraphNodeScan
        |   | | |   | | |   +-column_list=[$element_table.$element8#11]
        |   | | |   | | |   +-label_expr=
        |   | | |   | | |   | +-GraphLabelNaryExpr
        |   | | |   | | |   |   +-op=OR
        |   | | |   | | |   |   +-operand_list=
        |   | | |   | | |   |     +-GraphWildCardLabel
        |   | | |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   | | |   |       +-op=NOT
        |   | | |   | | |   |       +-operand_list=
        |   | | |   | | |   |         +-GraphWildCardLabel
        |   | | |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   | | +-filter_expr=
        |   | | |   | | | +-Literal(type=BOOL, value=true)
        |   | | |   | | +-head=$element_table.$element7#9
        |   | | |   | | +-tail=$element_table.$element8#11
        |   | | |   | +-GraphEdgeScan
        |   | | |   | | +-column_list=[$element_table.$element9#12]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=OR
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=NOT
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |   | | |   | | +-orientation=RIGHT
        |   | | |   | | +-lhs_hint_list=
        |   | | |   | |   +-key := Literal(type=STRING, value="subpath_e")
        |   | | |   | +-GraphNodeScan
        |   | | |   |   +-column_list=[$element_table.$element10#13]
        |   | | |   |   +-label_expr=
        |   | | |   |   | +-GraphLabelNaryExpr
        |   | | |   |   |   +-op=OR
        |   | | |   |   |   +-operand_list=
        |   | | |   |   |     +-GraphWildCardLabel
        |   | | |   |   |     +-GraphLabelNaryExpr
        |   | | |   |   |       +-op=NOT
        |   | | |   |   |       +-operand_list=
        |   | | |   |   |         +-GraphWildCardLabel
        |   | | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   +-head=$element_table.$element5#7
        |   | | |   +-tail=$element_table.$element10#13
        |   | | +-filter_expr=
        |   | | | +-Literal(type=BOOL, value=false)
        |   | | +-head=$element_table.$element5#7
        |   | | +-tail=$element_table.$element10#13
        |   | | +-path_hint_list=
        |   | |   +-key := Literal(type=STRING, value="path_path_2")
        |   | +-GraphPathScan
        |   | | +-column_list=$element_table.[$element11#14, b#15, $element12#16]
        |   | | +-input_scan_list=
        |   | | | +-GraphNodeScan
        |   | | | | +-column_list=[$element_table.$element11#14]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=OR
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=NOT
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | | +-GraphEdgeScan
        |   | | | | +-column_list=[$element_table.b#15]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=AND
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphLabel(parse_location=48-64, label=aml.PersonOwnAccount)
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=OR
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | |         +-GraphLabelNaryExpr
        |   | | | | |           +-op=NOT
        |   | | | | |           +-operand_list=
        |   | | | | |             +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.PersonOwnAccount]
        |   | | | | +-orientation=RIGHT
        |   | | | +-GraphNodeScan
        |   | | |   +-column_list=[$element_table.$element12#16]
        |   | | |   +-label_expr=
        |   | | |   | +-GraphLabelNaryExpr
        |   | | |   |   +-op=OR
        |   | | |   |   +-operand_list=
        |   | | |   |     +-GraphWildCardLabel
        |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   |       +-op=NOT
        |   | | |   |       +-operand_list=
        |   | | |   |         +-GraphWildCardLabel
        |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | +-head=$element_table.$element11#14
        |   | | +-tail=$element_table.$element12#16
        |   | +-GraphPathScan
        |   |   +-column_list=[$element_table.$element13#17]
        |   |   +-input_scan_list=
        |   |   | +-GraphNodeScan
        |   |   |   +-column_list=[$element_table.$element13#17]
        |   |   |   +-label_expr=
        |   |   |   | +-GraphLabelNaryExpr
        |   |   |   |   +-op=OR
        |   |   |   |   +-operand_list=
        |   |   |   |     +-GraphWildCardLabel
        |   |   |   |     +-GraphLabelNaryExpr
        |   |   |   |       +-op=NOT
        |   |   |   |       +-operand_list=
        |   |   |   |         +-GraphWildCardLabel
        |   |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   |   +-head=$element_table.$element13#17
        |   |   +-tail=$element_table.$element13#17
        |   |   +-path_hint_list=
        |   |     +-key := Literal(type=STRING, value="path_path_3")
        |   +-filter_expr=
        |     +-FunctionCall(ZetaSQL:$and(BOOL, repeated(2) BOOL) -> BOOL)
        |       +-FunctionCall(ZetaSQL:$equal(GRAPH_EDGE(aml)<accountId INT64, personId INT64>, GRAPH_EDGE(aml)<accountId INT64, personId INT64>) -> BOOL)
        |       | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#2)
        |       | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#5)
        |       +-FunctionCall(ZetaSQL:$equal(GRAPH_EDGE(aml)<accountId INT64, personId INT64>, GRAPH_EDGE(aml)<accountId INT64, personId INT64>) -> BOOL)
        |       | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#2)
        |       | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#10)
        |       +-FunctionCall(ZetaSQL:$equal(GRAPH_EDGE(aml)<accountId INT64, personId INT64>, GRAPH_EDGE(aml)<accountId INT64, personId INT64>) -> BOOL)
        |         +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#2)
        |         +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#15)
        +-shape_expr_list=
          +-accountId#18 :=
          | +-GraphGetElementProperty
          |   +-type=INT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#2)
          |   +-property=accountId(INT64)
          +-personId#19 :=
            +-GraphGetElementProperty
              +-type=INT64
              +-expr=
              | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#2)
              +-property=personId(INT64)

[SQLBUILDER_TARGET_SYNTAX_MODE standard]
[SQLBUILDER_OUTPUT]
SELECT
  aml_1.a_19 AS accountId,
  aml_1.a_20 AS personId
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        -[a_3
        IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
        (a_4
        IS (% | ! %))
        WHERE
          true
      ),
      (
        (
          (a_5
          IS (% | ! %))
          -[a_6
          IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
          (a_7
          IS (% | ! %))
        )
        WHERE
          true
      ),
      (
        (
          (a_8
          IS (% | ! %))
          -[a_9
          IS (% | ! %)]-> @{ key = "e_subpath" }
          (
            (a_10
            IS (% | ! %))
            -[a_11
            IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
            (a_12
            IS (% | ! %))
            WHERE
              true
          )
          -[a_13
          IS (% | ! %)]->
          (a_14
          IS (% | ! %))
        )
        WHERE
          false
      ),
      (a_15
      IS (% | ! %))
      -[a_16
      IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
      (a_17
      IS (% | ! %)),
      (a_18
      IS (% | ! %))
      WHERE
        (a_3 = a_6) AND (a_3 = a_11) AND (a_3 = a_16)
    COLUMNS(
      a_3.accountId AS a_19,
      a_3.personId AS a_20
    )
  ) AS aml_1;

[SQLBUILDER_TARGET_SYNTAX_MODE pipe]
[SQLBUILDER_OUTPUT]
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        -[a_3
        IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
        (a_4
        IS (% | ! %))
        WHERE
          true
      ),
      (
        (
          (a_5
          IS (% | ! %))
          -[a_6
          IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
          (a_7
          IS (% | ! %))
        )
        WHERE
          true
      ),
      (
        (
          (a_8
          IS (% | ! %))
          -[a_9
          IS (% | ! %)]-> @{ key = "e_subpath" }
          (
            (a_10
            IS (% | ! %))
            -[a_11
            IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
            (a_12
            IS (% | ! %))
            WHERE
              true
          )
          -[a_13
          IS (% | ! %)]->
          (a_14
          IS (% | ! %))
        )
        WHERE
          false
      ),
      (a_15
      IS (% | ! %))
      -[a_16
      IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
      (a_17
      IS (% | ! %)),
      (a_18
      IS (% | ! %))
      WHERE
        (a_3 = a_6) AND (a_3 = a_11) AND (a_3 = a_16)
    COLUMNS(
      a_3.accountId AS a_19,
      a_3.personId AS a_20
    )
  ) AS aml_1
|> SELECT
     aml_1.a_19 AS accountId,
     aml_1.a_20 AS personId;
==

select * from graph_table(
  aml
  MATCH ((-[b: PersonOwnAccount]-> WHERE true)), ((((-[b]->))) WHERE true), (((((-[b]-> WHERE true))) WHERE false)), (((-[b]->))), ((()))
  COLUMNS (b.*)
)

--
QueryStmt
+-output_column_list=
| +-$graph_table.accountId#14 AS accountId [INT64]
| +-$graph_table.personId#15 AS personId [INT64]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[accountId#14, personId#15]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[accountId#14, personId#15]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$element_table.[$element1#1, b#2, $element2#3, $element3#4, b#5, $element4#6, $element5#7, b#8, $element6#9, $element7#10, b#11, $element8#12, $element9#13]
        |   +-input_scan_list=
        |   | +-GraphPathScan
        |   | | +-column_list=$element_table.[$element1#1, b#2, $element2#3]
        |   | | +-input_scan_list=
        |   | | | +-GraphNodeScan
        |   | | | | +-column_list=[$element_table.$element1#1]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=OR
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=NOT
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | | +-GraphEdgeScan
        |   | | | | +-column_list=[$element_table.b#2]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=AND
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphLabel(parse_location=48-64, label=aml.PersonOwnAccount)
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=OR
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | |         +-GraphLabelNaryExpr
        |   | | | | |           +-op=NOT
        |   | | | | |           +-operand_list=
        |   | | | | |             +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.PersonOwnAccount]
        |   | | | | +-orientation=RIGHT
        |   | | | +-GraphNodeScan
        |   | | |   +-column_list=[$element_table.$element2#3]
        |   | | |   +-label_expr=
        |   | | |   | +-GraphLabelNaryExpr
        |   | | |   |   +-op=OR
        |   | | |   |   +-operand_list=
        |   | | |   |     +-GraphWildCardLabel
        |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   |       +-op=NOT
        |   | | |   |       +-operand_list=
        |   | | |   |         +-GraphWildCardLabel
        |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | +-filter_expr=
        |   | | | +-Literal(type=BOOL, value=true)
        |   | | +-head=$element_table.$element1#1
        |   | | +-tail=$element_table.$element2#3
        |   | +-GraphPathScan
        |   | | +-column_list=$element_table.[$element3#4, b#5, $element4#6]
        |   | | +-input_scan_list=
        |   | | | +-GraphPathScan
        |   | | |   +-column_list=$element_table.[$element3#4, b#5, $element4#6]
        |   | | |   +-input_scan_list=
        |   | | |   | +-GraphNodeScan
        |   | | |   | | +-column_list=[$element_table.$element3#4]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=OR
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=NOT
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   | +-GraphEdgeScan
        |   | | |   | | +-column_list=[$element_table.b#5]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=AND
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphLabel(parse_location=48-64, label=aml.PersonOwnAccount)
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |     | +-op=OR
        |   | | |   | | |     | +-operand_list=
        |   | | |   | | |     |   +-GraphWildCardLabel
        |   | | |   | | |     |   +-GraphLabelNaryExpr
        |   | | |   | | |     |     +-op=NOT
        |   | | |   | | |     |     +-operand_list=
        |   | | |   | | |     |       +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |     | +-op=OR
        |   | | |   | | |     | +-operand_list=
        |   | | |   | | |     |   +-GraphWildCardLabel
        |   | | |   | | |     |   +-GraphLabelNaryExpr
        |   | | |   | | |     |     +-op=NOT
        |   | | |   | | |     |     +-operand_list=
        |   | | |   | | |     |       +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=OR
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | |         +-GraphLabelNaryExpr
        |   | | |   | | |           +-op=NOT
        |   | | |   | | |           +-operand_list=
        |   | | |   | | |             +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.PersonOwnAccount]
        |   | | |   | | +-orientation=RIGHT
        |   | | |   | +-GraphNodeScan
        |   | | |   |   +-column_list=[$element_table.$element4#6]
        |   | | |   |   +-label_expr=
        |   | | |   |   | +-GraphLabelNaryExpr
        |   | | |   |   |   +-op=OR
        |   | | |   |   |   +-operand_list=
        |   | | |   |   |     +-GraphWildCardLabel
        |   | | |   |   |     +-GraphLabelNaryExpr
        |   | | |   |   |       +-op=NOT
        |   | | |   |   |       +-operand_list=
        |   | | |   |   |         +-GraphWildCardLabel
        |   | | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   +-head=$element_table.$element3#4
        |   | | |   +-tail=$element_table.$element4#6
        |   | | +-filter_expr=
        |   | | | +-Literal(type=BOOL, value=true)
        |   | | +-head=$element_table.$element3#4
        |   | | +-tail=$element_table.$element4#6
        |   | +-GraphPathScan
        |   | | +-column_list=$element_table.[$element5#7, b#8, $element6#9]
        |   | | +-input_scan_list=
        |   | | | +-GraphPathScan
        |   | | |   +-column_list=$element_table.[$element5#7, b#8, $element6#9]
        |   | | |   +-input_scan_list=
        |   | | |   | +-GraphNodeScan
        |   | | |   | | +-column_list=[$element_table.$element5#7]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=OR
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=NOT
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   | +-GraphEdgeScan
        |   | | |   | | +-column_list=[$element_table.b#8]
        |   | | |   | | +-label_expr=
        |   | | |   | | | +-GraphLabelNaryExpr
        |   | | |   | | |   +-op=AND
        |   | | |   | | |   +-operand_list=
        |   | | |   | | |     +-GraphLabel(parse_location=48-64, label=aml.PersonOwnAccount)
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |     | +-op=OR
        |   | | |   | | |     | +-operand_list=
        |   | | |   | | |     |   +-GraphWildCardLabel
        |   | | |   | | |     |   +-GraphLabelNaryExpr
        |   | | |   | | |     |     +-op=NOT
        |   | | |   | | |     |     +-operand_list=
        |   | | |   | | |     |       +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |     | +-op=OR
        |   | | |   | | |     | +-operand_list=
        |   | | |   | | |     |   +-GraphWildCardLabel
        |   | | |   | | |     |   +-GraphLabelNaryExpr
        |   | | |   | | |     |     +-op=NOT
        |   | | |   | | |     |     +-operand_list=
        |   | | |   | | |     |       +-GraphWildCardLabel
        |   | | |   | | |     +-GraphLabelNaryExpr
        |   | | |   | | |       +-op=OR
        |   | | |   | | |       +-operand_list=
        |   | | |   | | |         +-GraphWildCardLabel
        |   | | |   | | |         +-GraphLabelNaryExpr
        |   | | |   | | |           +-op=NOT
        |   | | |   | | |           +-operand_list=
        |   | | |   | | |             +-GraphWildCardLabel
        |   | | |   | | +-target_element_table_list=[aml.PersonOwnAccount]
        |   | | |   | | +-orientation=RIGHT
        |   | | |   | +-GraphNodeScan
        |   | | |   |   +-column_list=[$element_table.$element6#9]
        |   | | |   |   +-label_expr=
        |   | | |   |   | +-GraphLabelNaryExpr
        |   | | |   |   |   +-op=OR
        |   | | |   |   |   +-operand_list=
        |   | | |   |   |     +-GraphWildCardLabel
        |   | | |   |   |     +-GraphLabelNaryExpr
        |   | | |   |   |       +-op=NOT
        |   | | |   |   |       +-operand_list=
        |   | | |   |   |         +-GraphWildCardLabel
        |   | | |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | |   +-filter_expr=
        |   | | |   | +-Literal(type=BOOL, value=true)
        |   | | |   +-head=$element_table.$element5#7
        |   | | |   +-tail=$element_table.$element6#9
        |   | | +-filter_expr=
        |   | | | +-Literal(type=BOOL, value=false)
        |   | | +-head=$element_table.$element5#7
        |   | | +-tail=$element_table.$element6#9
        |   | +-GraphPathScan
        |   | | +-column_list=$element_table.[$element7#10, b#11, $element8#12]
        |   | | +-input_scan_list=
        |   | | | +-GraphNodeScan
        |   | | | | +-column_list=[$element_table.$element7#10]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=OR
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=NOT
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | | +-GraphEdgeScan
        |   | | | | +-column_list=[$element_table.b#11]
        |   | | | | +-label_expr=
        |   | | | | | +-GraphLabelNaryExpr
        |   | | | | |   +-op=AND
        |   | | | | |   +-operand_list=
        |   | | | | |     +-GraphLabel(parse_location=48-64, label=aml.PersonOwnAccount)
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |     | +-op=OR
        |   | | | | |     | +-operand_list=
        |   | | | | |     |   +-GraphWildCardLabel
        |   | | | | |     |   +-GraphLabelNaryExpr
        |   | | | | |     |     +-op=NOT
        |   | | | | |     |     +-operand_list=
        |   | | | | |     |       +-GraphWildCardLabel
        |   | | | | |     +-GraphLabelNaryExpr
        |   | | | | |       +-op=OR
        |   | | | | |       +-operand_list=
        |   | | | | |         +-GraphWildCardLabel
        |   | | | | |         +-GraphLabelNaryExpr
        |   | | | | |           +-op=NOT
        |   | | | | |           +-operand_list=
        |   | | | | |             +-GraphWildCardLabel
        |   | | | | +-target_element_table_list=[aml.PersonOwnAccount]
        |   | | | | +-orientation=RIGHT
        |   | | | +-GraphNodeScan
        |   | | |   +-column_list=[$element_table.$element8#12]
        |   | | |   +-label_expr=
        |   | | |   | +-GraphLabelNaryExpr
        |   | | |   |   +-op=OR
        |   | | |   |   +-operand_list=
        |   | | |   |     +-GraphWildCardLabel
        |   | | |   |     +-GraphLabelNaryExpr
        |   | | |   |       +-op=NOT
        |   | | |   |       +-operand_list=
        |   | | |   |         +-GraphWildCardLabel
        |   | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   | | +-head=$element_table.$element7#10
        |   | | +-tail=$element_table.$element8#12
        |   | +-GraphPathScan
        |   |   +-column_list=[$element_table.$element9#13]
        |   |   +-input_scan_list=
        |   |   | +-GraphNodeScan
        |   |   |   +-column_list=[$element_table.$element9#13]
        |   |   |   +-label_expr=
        |   |   |   | +-GraphLabelNaryExpr
        |   |   |   |   +-op=OR
        |   |   |   |   +-operand_list=
        |   |   |   |     +-GraphWildCardLabel
        |   |   |   |     +-GraphLabelNaryExpr
        |   |   |   |       +-op=NOT
        |   |   |   |       +-operand_list=
        |   |   |   |         +-GraphWildCardLabel
        |   |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |   |   +-head=$element_table.$element9#13
        |   |   +-tail=$element_table.$element9#13
        |   +-filter_expr=
        |     +-FunctionCall(ZetaSQL:$and(BOOL, repeated(2) BOOL) -> BOOL)
        |       +-FunctionCall(ZetaSQL:$equal(GRAPH_EDGE(aml)<accountId INT64, personId INT64>, GRAPH_EDGE(aml)<accountId INT64, personId INT64>) -> BOOL)
        |       | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#2)
        |       | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#5)
        |       +-FunctionCall(ZetaSQL:$equal(GRAPH_EDGE(aml)<accountId INT64, personId INT64>, GRAPH_EDGE(aml)<accountId INT64, personId INT64>) -> BOOL)
        |       | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#2)
        |       | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#8)
        |       +-FunctionCall(ZetaSQL:$equal(GRAPH_EDGE(aml)<accountId INT64, personId INT64>, GRAPH_EDGE(aml)<accountId INT64, personId INT64>) -> BOOL)
        |         +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#2)
        |         +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#11)
        +-shape_expr_list=
          +-accountId#14 :=
          | +-GraphGetElementProperty
          |   +-type=INT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#2)
          |   +-property=accountId(INT64)
          +-personId#15 :=
            +-GraphGetElementProperty
              +-type=INT64
              +-expr=
              | +-ColumnRef(type=GRAPH_EDGE(aml)<accountId INT64, personId INT64>, column=$element_table.b#2)
              +-property=personId(INT64)

[SQLBUILDER_TARGET_SYNTAX_MODE standard]
[SQLBUILDER_OUTPUT]
SELECT
  aml_1.a_15 AS accountId,
  aml_1.a_16 AS personId
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        -[a_3
        IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
        (a_4
        IS (% | ! %))
        WHERE
          true
      ),
      (
        (
          (a_5
          IS (% | ! %))
          -[a_6
          IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
          (a_7
          IS (% | ! %))
        )
        WHERE
          true
      ),
      (
        (
          (a_8
          IS (% | ! %))
          -[a_9
          IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
          (a_10
          IS (% | ! %))
          WHERE
            true
        )
        WHERE
          false
      ),
      (a_11
      IS (% | ! %))
      -[a_12
      IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
      (a_13
      IS (% | ! %)),
      (a_14
      IS (% | ! %))
      WHERE
        (a_3 = a_6) AND (a_3 = a_9) AND (a_3 = a_12)
    COLUMNS(
      a_3.accountId AS a_15,
      a_3.personId AS a_16
    )
  ) AS aml_1;

[SQLBUILDER_TARGET_SYNTAX_MODE pipe]
[SQLBUILDER_OUTPUT]
FROM
  GRAPH_TABLE(
    aml
    MATCH
      (
        (a_2
        IS (% | ! %))
        -[a_3
        IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
        (a_4
        IS (% | ! %))
        WHERE
          true
      ),
      (
        (
          (a_5
          IS (% | ! %))
          -[a_6
          IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
          (a_7
          IS (% | ! %))
        )
        WHERE
          true
      ),
      (
        (
          (a_8
          IS (% | ! %))
          -[a_9
          IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
          (a_10
          IS (% | ! %))
          WHERE
            true
        )
        WHERE
          false
      ),
      (a_11
      IS (% | ! %))
      -[a_12
      IS (PersonOwnAccount &(% | ! %) &(% | ! %) &(% | ! %))]->
      (a_13
      IS (% | ! %)),
      (a_14
      IS (% | ! %))
      WHERE
        (a_3 = a_6) AND (a_3 = a_9) AND (a_3 = a_12)
    COLUMNS(
      a_3.accountId AS a_15,
      a_3.personId AS a_16
    )
  ) AS aml_1
|> SELECT
     aml_1.a_15 AS accountId,
     aml_1.a_16 AS personId;

==

select * from graph_table(
  aml
  match ( -[e:Transfer]-> @{key=e_s} ((a) -> (b) WHERE a.id = e.fromAccountId))
  columns (a.id)
)

--

ERROR: Unrecognized name: e [at 3:63]
  match ( -[e:Transfer]-> @{key=e_s} ((a) -> (b) WHERE a.id = e.fromAccountId))
                                                              ^
==

select * from graph_table(
  aml
  match ( -[e:Transfer]-> ((a) -> (b) WHERE e.fromAccountId = a.id))
  columns (a.id)
)

--

ERROR: Unrecognized name: e [at 3:45]
  match ( -[e:Transfer]-> ((a) -> (b) WHERE e.fromAccountId = a.id))
                                            ^
