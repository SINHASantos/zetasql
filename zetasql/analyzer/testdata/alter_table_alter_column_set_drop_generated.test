[default language_features=MAXIMUM,+ALTER_COLUMN_DROP_GENERATED,+IDENTITY_COLUMNS,+ALTER_COLUMN_SET_GENERATED_AS_IDENTITY,+GENERATED_BY_DEFAULT]

# Simple DROP GENERATED
ALTER TABLE KeyValue ALTER COLUMN key DROP GENERATED;
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
  +-AlterColumnDropGeneratedAction(column="key")
==

# DROP GENERATED with case-insensitive column
ALTER TABLE KeyValue ALTER COLUMN KeY DROP GENERATED;
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
  +-AlterColumnDropGeneratedAction(column="KeY")
==

# DROP GENERATED with valid table IF EXISTS
ALTER TABLE IF EXISTS KeyValue ALTER COLUMN key DROP GENERATED;
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
| +-AlterColumnDropGeneratedAction(column="key")
+-is_if_exists=TRUE
==

# DROP GENERATED with invalid table IF EXISTS
ALTER TABLE IF EXISTS not_a_table ALTER COLUMN key DROP GENERATED;
--
AlterTableStmt
+-name_path=not_a_table
+-alter_action_list=
| +-AlterColumnDropGeneratedAction(column="key")
+-is_if_exists=TRUE
==

# DROP GENERATED with valid column IF EXISTS
ALTER TABLE KeyValue ALTER COLUMN IF EXISTS value DROP GENERATED;
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
  +-AlterColumnDropGeneratedAction(is_if_exists=TRUE, column="value")
==

# DROP GENERATED with invalid column IF EXISTS
ALTER TABLE KeyValue ALTER COLUMN IF EXISTS not_a_column DROP GENERATED;
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
  +-AlterColumnDropGeneratedAction(is_if_exists=TRUE, column="not_a_column")
==

# DROP GENERATED with invalid table and invalid column IF EXISTS
ALTER TABLE IF EXISTS not_a_table ALTER COLUMN IF EXISTS not_a_column
DROP GENERATED;
--
AlterTableStmt
+-name_path=not_a_table
+-alter_action_list=
| +-AlterColumnDropGeneratedAction(is_if_exists=TRUE, column="not_a_column")
+-is_if_exists=TRUE
==

# Combine DROP GENERATED with other alter column actions
ALTER TABLE KeyValue
  ALTER COLUMN key SET OPTIONS (description="new description"),
  ALTER COLUMN key DROP GENERATED;
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
  +-AlterColumnOptionsAction
  | +-column="key"
  | +-option_list=
  |   +-description := Literal(type=STRING, value="new description")
  +-AlterColumnDropGeneratedAction(column="key")
==

# Multiple DROP GENERATED actions
ALTER TABLE KeyValue
  ALTER COLUMN key DROP GENERATED,
  ALTER COLUMN value DROP GENERATED;
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
  +-AlterColumnDropGeneratedAction(column="key")
  +-AlterColumnDropGeneratedAction(column="value")
==

# DROP GENERATED with invalid table fails
ALTER TABLE not_a_table ALTER COLUMN key DROP GENERATED;
--
ERROR: Table not found: not_a_table [at 1:13]
ALTER TABLE not_a_table ALTER COLUMN key DROP GENERATED;
            ^
==

# DROP GENERATED with invalid column fails
ALTER TABLE KeyValue ALTER COLUMN not_a_column DROP GENERATED;
--
ERROR: Column not found: not_a_column [at 1:35]
ALTER TABLE KeyValue ALTER COLUMN not_a_column DROP GENERATED;
                                  ^
==

# DROP GENERATED with pseudo-column fails
ALTER TABLE EnumTable ALTER COLUMN filename DROP GENERATED;
--
ERROR: ALTER COLUMN DROP GENERATED is not supported for pseudo-column filename [at 1:36]
ALTER TABLE EnumTable ALTER COLUMN filename DROP GENERATED;
                                   ^
==

[language_features=NONE]
# Alter column DROP GENERATED value is not supported
ALTER TABLE KeyValue ALTER COLUMN foo DROP GENERATED;
--
ERROR: ALTER TABLE does not support ALTER COLUMN DROP GENERATED [at 2:22]
ALTER TABLE KeyValue ALTER COLUMN foo DROP GENERATED;
                     ^
==

# SET GENERATED: Identity Columns ALWAYS
ALTER TABLE KeyValue ALTER COLUMN key SET GENERATED AS IDENTITY();
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
  +-AlterColumnSetGeneratedAction
    +-column="key"
    +-generated_column_info=
      +-GeneratedColumnInfo
        +-identity_column_info=
          +-IdentityColumnInfo(start_with_value=1, increment_by_value=1, max_value=9223372036854775807, min_value=-9223372036854775808, cycling_enabled=FALSE)
==

# SET GENERATED: Identity Columns BY DEFAULT
ALTER TABLE KeyValue ALTER COLUMN key
SET GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 2 MAXVALUE 10 MINVALUE -1 CYCLE);
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
  +-AlterColumnSetGeneratedAction
    +-column="key"
    +-generated_column_info=
      +-GeneratedColumnInfo
        +-generated_mode=BY_DEFAULT
        +-identity_column_info=
          +-IdentityColumnInfo(start_with_value=1, increment_by_value=2, max_value=10, min_value=-1, cycling_enabled=TRUE)
==

# SET GENERATED: Identity Columns multiple valid alter column actions
[language_features=NONE,+IDENTITY_COLUMNS,+ALTER_COLUMN_SET_GENERATED_AS_IDENTITY,+COLUMN_DEFAULT_VALUE]
[no_enable_literal_replacement]
ALTER TABLE KeyValue
  ALTER COLUMN key SET GENERATED AS IDENTITY(),
  ALTER COLUMN value SET DEFAULT 'abc',
  ALTER COLUMN key SET OPTIONS (description="new description");
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
  +-AlterColumnSetGeneratedAction
  | +-column="key"
  | +-generated_column_info=
  |   +-GeneratedColumnInfo
  |     +-identity_column_info=
  |       +-IdentityColumnInfo(start_with_value=1, increment_by_value=1, max_value=9223372036854775807, min_value=-9223372036854775808, cycling_enabled=FALSE)
  +-AlterColumnSetDefaultAction
  | +-column="value"
  | +-default_value=
  |   +-ColumnDefaultValue
  |     +-expression=
  |     | +-Literal(type=STRING, value="abc")
  |     +-sql="'abc'"
  +-AlterColumnOptionsAction
    +-column="key"
    +-option_list=
      +-description := Literal(type=STRING, value="new description")
==

# SET GENERATED: Identity Columns alter table IF EXISTS (table exists) with valid values
ALTER TABLE IF EXISTS KeyValue ALTER COLUMN key
SET GENERATED AS IDENTITY(START WITH -1);
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
| +-AlterColumnSetGeneratedAction
|   +-column="key"
|   +-generated_column_info=
|     +-GeneratedColumnInfo
|       +-identity_column_info=
|         +-IdentityColumnInfo(start_with_value=-1, increment_by_value=1, max_value=9223372036854775807, min_value=-9223372036854775808, cycling_enabled=FALSE)
+-is_if_exists=TRUE
==

# SET GENERATED: Identity Columns alter table IF EXISTS (table exists) with invalid values fails
[language_features=NONE,+IDENTITY_COLUMNS,+ALTER_COLUMN_SET_GENERATED_AS_IDENTITY,+NUMERIC_TYPE]
ALTER TABLE IF EXISTS KeyValue ALTER COLUMN key
SET GENERATED AS IDENTITY(START WITH NUMERIC '123.123');
--
ERROR: START WITH value has type NUMERIC which cannot be assigned to an identity column with type INT64 [at 2:38]
SET GENERATED AS IDENTITY(START WITH NUMERIC '123.123');
                                     ^
==

# SET GENERATED: Identity Columns alter table IF EXISTS (table does NOT exist) with valid values succeeds
[language_features=NONE,+IDENTITY_COLUMNS,+ALTER_COLUMN_SET_GENERATED_AS_IDENTITY]
ALTER TABLE IF EXISTS not_a_table ALTER COLUMN key
SET GENERATED AS IDENTITY(START WITH 1);
--
AlterTableStmt
+-name_path=not_a_table
+-alter_action_list=
| +-AlterColumnSetGeneratedAction
|   +-column="key"
|   +-generated_column_info=
|     +-GeneratedColumnInfo
|       +-identity_column_info=
|         +-IdentityColumnInfo(start_with_value=1, increment_by_value=1, max_value=1, min_value=1, cycling_enabled=FALSE)
+-is_if_exists=TRUE
==

# SET GENERATED: Identity Columns alter table IF EXISTS (table does NOT exist) with invalid values fails
[language_features=NONE,+IDENTITY_COLUMNS,+ALTER_COLUMN_SET_GENERATED_AS_IDENTITY,+NUMERIC_TYPE]
ALTER TABLE IF EXISTS not_a_table ALTER COLUMN key
SET GENERATED AS IDENTITY(START WITH NUMERIC '1');
--
ERROR: Identity column attributes must be an integer value [at 2:38]
SET GENERATED AS IDENTITY(START WITH NUMERIC '1');
                                     ^
==

# SET GENERATED: Identity Columns alter column IF EXISTS (column exists) with valid values
ALTER TABLE KeyValue ALTER COLUMN IF EXISTS key
SET GENERATED AS IDENTITY(START WITH -1);
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
  +-AlterColumnSetGeneratedAction
    +-is_if_exists=TRUE
    +-column="key"
    +-generated_column_info=
      +-GeneratedColumnInfo
        +-identity_column_info=
          +-IdentityColumnInfo(start_with_value=-1, increment_by_value=1, max_value=9223372036854775807, min_value=-9223372036854775808, cycling_enabled=FALSE)
==

# SET GENERATED: Identity Columns alter column IF EXISTS (column exists) with invalid values fails
[language_features=NONE,+IDENTITY_COLUMNS,+ALTER_COLUMN_SET_GENERATED_AS_IDENTITY,+NUMERIC_TYPE]
ALTER TABLE KeyValue ALTER COLUMN IF EXISTS key
SET GENERATED AS IDENTITY(START WITH NUMERIC '123.123');
--
ERROR: START WITH value has type NUMERIC which cannot be assigned to an identity column with type INT64 [at 2:38]
SET GENERATED AS IDENTITY(START WITH NUMERIC '123.123');
                                     ^
==

# SET GENERATED: Identity Columns alter column IF EXISTS (column does NOT exist) with valid values succeeds
[language_features=NONE,+IDENTITY_COLUMNS,+ALTER_COLUMN_SET_GENERATED_AS_IDENTITY,+NUMERIC_TYPE]
ALTER TABLE KeyValue ALTER COLUMN IF EXISTS not_a_column
SET GENERATED AS IDENTITY();
--
AlterTableStmt
+-name_path=KeyValue
+-alter_action_list=
  +-AlterColumnSetGeneratedAction
    +-is_if_exists=TRUE
    +-column="not_a_column"
    +-generated_column_info=
      +-GeneratedColumnInfo
        +-identity_column_info=
          +-IdentityColumnInfo(start_with_value=1, increment_by_value=1, max_value=1, min_value=1, cycling_enabled=FALSE)
==

# SET GENERATED: Identity Columns alter column IF EXISTS (column does NOT exist) with invalid values fails
[language_features=NONE,+IDENTITY_COLUMNS,+ALTER_COLUMN_SET_GENERATED_AS_IDENTITY]
ALTER TABLE KeyValue ALTER COLUMN IF EXISTS not_a_column
SET GENERATED AS IDENTITY(INCREMENT BY 0);
--
ERROR: INCREMENT BY cannot be 0 [at 2:27]
SET GENERATED AS IDENTITY(INCREMENT BY 0);
                          ^
==

# SET GENERATED: Identity Columns alter table with non-existent table
ALTER TABLE not_a_table ALTER COLUMN key
SET GENERATED AS IDENTITY(START WITH 1);
--
ERROR: Table not found: not_a_table [at 1:13]
ALTER TABLE not_a_table ALTER COLUMN key
            ^
==

# SET GENERATED: Identity Columns alter table with non-existent column
ALTER TABLE KeyValue ALTER COLUMN not_a_column
SET GENERATED AS IDENTITY(START WITH 1);
--
ERROR: Column not found: not_a_column [at 1:35]
ALTER TABLE KeyValue ALTER COLUMN not_a_column
                                  ^
==

# SET GENERATED: Identity Columns invalid type coercion
ALTER TABLE KeyValue ALTER COLUMN key
SET GENERATED AS IDENTITY(START WITH 1.2);
--
ERROR: START WITH value has type DOUBLE which cannot be assigned to an identity column with type INT64 [at 2:38]
SET GENERATED AS IDENTITY(START WITH 1.2);
                                     ^
==

# SET GENERATED: Identity Columns multiple SET GENERATED actions fail
ALTER TABLE KeyValue
  ALTER COLUMN key SET GENERATED AS IDENTITY(),
  ALTER COLUMN key SET GENERATED AS IDENTITY(),
  ALTER COLUMN key SET OPTIONS (description="new description");
--
ERROR: ALTER TABLE does not support multiple SET GENERATED actions [at 3:3]
  ALTER COLUMN key SET GENERATED AS IDENTITY(),
  ^
==

# SET GENERATED: Identity Columns invalid START WITH and MAXVALUE
ALTER TABLE KeyValue ALTER COLUMN key
SET GENERATED AS IDENTITY(START WITH 10 MAXVALUE 9);
--
ERROR: Invalid START WITH value 10 and MAXVALUE value 9; START WITH must be less than or equal to MAXVALUE [at 2:18]
SET GENERATED AS IDENTITY(START WITH 10 MAXVALUE 9);
                 ^
==

# SET GENERATED: Identity Columns invalid START WITH and MINVALUE
ALTER TABLE KeyValue ALTER COLUMN key
SET GENERATED AS IDENTITY(start with 10 minvalue 20);
--
ERROR: Invalid START WITH value 10 and MINVALUE value 20; START WITH must be greater than or equal to MINVALUE [at 2:18]
SET GENERATED AS IDENTITY(start with 10 minvalue 20);
                 ^
==

# SET GENERATED: Identity Columns invalid INCREMENT BY
ALTER TABLE KeyValue ALTER COLUMN key
SET GENERATED AS IDENTITY(INCREMENT BY 0);
--
ERROR: INCREMENT BY cannot be 0 [at 2:27]
SET GENERATED AS IDENTITY(INCREMENT BY 0);
                          ^
==

# SET GENERATED: feature disabled
[language_features=NONE,+IDENTITY_COLUMNS]
ALTER TABLE KeyValue ALTER COLUMN key
SET GENERATED AS IDENTITY();
--
ERROR: ALTER TABLE does not support ALTER COLUMN SET GENERATED [at 1:22]
ALTER TABLE KeyValue ALTER COLUMN key
                     ^
