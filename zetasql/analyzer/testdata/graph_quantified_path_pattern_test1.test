[default language_features=NONE,+SQL_GRAPH,+SQL_GRAPH_BOUNDED_PATH_QUANTIFICATION]
[default no_test_extract_table_names]

# General bounded path quantifier
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH((a)-[b]->(c)){1, 3}
  COLUMNS(1 AS one)
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#9 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#9]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#9]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$path_scan.[$head#7, $tail#8]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$path_scan.[$head#7, $tail#8]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.b#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.c#3]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$path_scan.$head#7
        |       +-tail=$path_scan.$tail#8
        |       +-quantifier=
        |       | +-GraphPathPatternQuantifier
        |       |   +-lower_bound=
        |       |   | +-Literal(type=INT64, value=1)
        |       |   +-upper_bound=
        |       |     +-Literal(type=INT64, value=3)
        |       +-group_variable_list=
        |         +-GraphMakeArrayVariable(element=$element_table.a#1, array=$element_table.a#4)
        |         +-GraphMakeArrayVariable(element=$element_table.b#2, array=$element_table.b#5)
        |         +-GraphMakeArrayVariable(element=$element_table.c#3, array=$element_table.c#6)
        +-shape_expr_list=
          +-one#9 := Literal(type=INT64, value=1)

==

# Bounded edge quantifier
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH (a)-[b]->{1, 3}->(c)
  COLUMNS(1 AS one)
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#12 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#12]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#12]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.a#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.$element3#10, $element_table.c#11]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=[$element_table.a#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.$element3#10, $element_table.c#11]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphPathScan
        |       | | +-column_list=$path_scan.[$head#8, $tail#9]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.$element1#2]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.b#3]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.$element2#4]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-head=$path_scan.$head#8
        |       | | +-tail=$path_scan.$tail#9
        |       | | +-quantifier=
        |       | | | +-GraphPathPatternQuantifier
        |       | | |   +-lower_bound=
        |       | | |   | +-Literal(type=INT64, value=1)
        |       | | |   +-upper_bound=
        |       | | |     +-Literal(type=INT64, value=3)
        |       | | +-group_variable_list=
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.b#3, array=$element_table.b#6)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.$element3#10]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.c#11]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$element_table.a#1
        |       +-tail=$element_table.c#11
        +-shape_expr_list=
          +-one#12 := Literal(type=INT64, value=1)



==

# Multiple edge quantifiers in single match
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH(a)-[b]->(c)->{1, 3}->(d)-[e]->(f)->{2, 4}
  COLUMNS(1 AS one)
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#24 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#24]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#24]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.a#1, $element_table.b#2, $element_table.c#3, $path_scan.$head#10, $path_scan.$tail#11, $element_table.$element4#12, $element_table.d#13, $element_table.e#14, $element_table.f#15, $path_scan.$head#22, $path_scan.$tail#23]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=[$element_table.a#1, $element_table.b#2, $element_table.c#3, $path_scan.$head#10, $path_scan.$tail#11, $element_table.$element4#12, $element_table.d#13, $element_table.e#14, $element_table.f#15, $path_scan.$head#22, $path_scan.$tail#23]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.b#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.c#3]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphPathScan
        |       | | +-column_list=$path_scan.[$head#10, $tail#11]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.$element1#4]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.$element2#5]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.$element3#6]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-head=$path_scan.$head#10
        |       | | +-tail=$path_scan.$tail#11
        |       | | +-quantifier=
        |       | | | +-GraphPathPatternQuantifier
        |       | | |   +-lower_bound=
        |       | | |   | +-Literal(type=INT64, value=1)
        |       | | |   +-upper_bound=
        |       | | |     +-Literal(type=INT64, value=3)
        |       | | +-group_variable_list=
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element1#4, array=$element_table.$element1#7)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element2#5, array=$element_table.$element2#8)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element3#6, array=$element_table.$element3#9)
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.$element4#12]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.d#13]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.e#14]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.f#15]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphPathScan
        |       |   +-column_list=$path_scan.[$head#22, $tail#23]
        |       |   +-input_scan_list=
        |       |   | +-GraphNodeScan
        |       |   | | +-column_list=[$element_table.$element5#16]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   | +-GraphEdgeScan
        |       |   | | +-column_list=[$element_table.$element6#17]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       |   | | +-orientation=RIGHT
        |       |   | +-GraphNodeScan
        |       |   |   +-column_list=[$element_table.$element7#18]
        |       |   |   +-label_expr=
        |       |   |   | +-GraphLabelNaryExpr
        |       |   |   |   +-op=OR
        |       |   |   |   +-operand_list=
        |       |   |   |     +-GraphWildCardLabel
        |       |   |   |     +-GraphLabelNaryExpr
        |       |   |   |       +-op=NOT
        |       |   |   |       +-operand_list=
        |       |   |   |         +-GraphWildCardLabel
        |       |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   +-head=$path_scan.$head#22
        |       |   +-tail=$path_scan.$tail#23
        |       |   +-quantifier=
        |       |   | +-GraphPathPatternQuantifier
        |       |   |   +-lower_bound=
        |       |   |   | +-Literal(type=INT64, value=2)
        |       |   |   +-upper_bound=
        |       |   |     +-Literal(type=INT64, value=4)
        |       |   +-group_variable_list=
        |       |     +-GraphMakeArrayVariable(element=$element_table.$element5#16, array=$element_table.$element5#19)
        |       |     +-GraphMakeArrayVariable(element=$element_table.$element6#17, array=$element_table.$element6#20)
        |       |     +-GraphMakeArrayVariable(element=$element_table.$element7#18, array=$element_table.$element7#21)
        |       +-head=$element_table.a#1
        |       +-tail=$path_scan.$tail#23
        +-shape_expr_list=
          +-one#24 := Literal(type=INT64, value=1)



==

# Fixed bounded quantifier
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH((a)-[b]->(c)){3}
  COLUMNS(1 AS one)
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#9 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#9]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#9]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$path_scan.[$head#7, $tail#8]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$path_scan.[$head#7, $tail#8]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.b#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.c#3]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$path_scan.$head#7
        |       +-tail=$path_scan.$tail#8
        |       +-quantifier=
        |       | +-GraphPathPatternQuantifier
        |       |   +-lower_bound=
        |       |   | +-Literal(type=INT64, value=3)
        |       |   +-upper_bound=
        |       |     +-Literal(type=INT64, value=3)
        |       +-group_variable_list=
        |         +-GraphMakeArrayVariable(element=$element_table.a#1, array=$element_table.a#4)
        |         +-GraphMakeArrayVariable(element=$element_table.b#2, array=$element_table.b#5)
        |         +-GraphMakeArrayVariable(element=$element_table.c#3, array=$element_table.c#6)
        +-shape_expr_list=
          +-one#9 := Literal(type=INT64, value=1)



==

# Quantifier with concatenated node
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH (x)((a)-[b]->(c)){1, 3}(y)
  COLUMNS(1 AS one)
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#11 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#11]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#11]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.y#10]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.y#10]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.x#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphPathScan
        |       | | +-column_list=$path_scan.[$head#8, $tail#9]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.a#2]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.b#3]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.c#4]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-head=$path_scan.$head#8
        |       | | +-tail=$path_scan.$tail#9
        |       | | +-quantifier=
        |       | | | +-GraphPathPatternQuantifier
        |       | | |   +-lower_bound=
        |       | | |   | +-Literal(type=INT64, value=1)
        |       | | |   +-upper_bound=
        |       | | |     +-Literal(type=INT64, value=3)
        |       | | +-group_variable_list=
        |       | |   +-GraphMakeArrayVariable(element=$element_table.a#2, array=$element_table.a#5)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.b#3, array=$element_table.b#6)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.c#4, array=$element_table.c#7)
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.y#10]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$element_table.x#1
        |       +-tail=$element_table.y#10
        +-shape_expr_list=
          +-one#11 := Literal(type=INT64, value=1)



==

# Pure quantified edge
select * from graph_table(
  aml
  MATCH -[b]->{1, 3}
  COLUMNS(1 AS One)
)
--
QueryStmt
+-output_column_list=
| +-$graph_table.One#9 AS One [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.One#9]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.One#9]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$path_scan.[$head#7, $tail#8]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$path_scan.[$head#7, $tail#8]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.$element1#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.b#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.$element2#3]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$path_scan.$head#7
        |       +-tail=$path_scan.$tail#8
        |       +-quantifier=
        |       | +-GraphPathPatternQuantifier
        |       |   +-lower_bound=
        |       |   | +-Literal(type=INT64, value=1)
        |       |   +-upper_bound=
        |       |     +-Literal(type=INT64, value=3)
        |       +-group_variable_list=
        |         +-GraphMakeArrayVariable(element=$element_table.$element1#1, array=$element_table.$element1#4)
        |         +-GraphMakeArrayVariable(element=$element_table.b#2, array=$element_table.b#5)
        |         +-GraphMakeArrayVariable(element=$element_table.$element2#3, array=$element_table.$element2#6)
        +-shape_expr_list=
          +-One#9 := Literal(type=INT64, value=1)



==

# Bounds as parameter expressions
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH((a)->(c)){@test_param_int32, @test_param_int32}
  COLUMNS(1 AS one)
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#9 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#9]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#9]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$path_scan.[$head#7, $tail#8]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$path_scan.[$head#7, $tail#8]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.$element1#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.c#3]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$path_scan.$head#7
        |       +-tail=$path_scan.$tail#8
        |       +-quantifier=
        |       | +-GraphPathPatternQuantifier
        |       |   +-lower_bound=
        |       |   | +-Cast(INT32 -> INT64)
        |       |   |   +-Parameter(type=INT32, name="test_param_int32")
        |       |   +-upper_bound=
        |       |     +-Cast(INT32 -> INT64)
        |       |       +-Parameter(type=INT32, name="test_param_int32")
        |       +-group_variable_list=
        |         +-GraphMakeArrayVariable(element=$element_table.a#1, array=$element_table.a#4)
        |         +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
        |         +-GraphMakeArrayVariable(element=$element_table.c#3, array=$element_table.c#6)
        +-shape_expr_list=
          +-one#9 := Literal(type=INT64, value=1)



==

# Ensure singleton variable accesses concatenated to the quantified pattern
# is allowed.
SELECT * FROM GRAPH_TABLE(
  aml
  MATCH (x)((a)-[b]->(c)){1, 3}(y)
  COLUMNS(x.id AS src_id, y.id AS dest_id)
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.src_id#11 AS src_id [INT64]
| +-$graph_table.dest_id#12 AS dest_id [INT64]
+-query=
  +-ProjectScan
    +-column_list=$graph_table.[src_id#11, dest_id#12]
    +-input_scan=
      +-GraphTableScan
        +-column_list=$graph_table.[src_id#11, dest_id#12]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.y#10]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.y#10]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.x#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphPathScan
        |       | | +-column_list=$path_scan.[$head#8, $tail#9]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.a#2]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.b#3]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.c#4]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-head=$path_scan.$head#8
        |       | | +-tail=$path_scan.$tail#9
        |       | | +-quantifier=
        |       | | | +-GraphPathPatternQuantifier
        |       | | |   +-lower_bound=
        |       | | |   | +-Literal(type=INT64, value=1)
        |       | | |   +-upper_bound=
        |       | | |     +-Literal(type=INT64, value=3)
        |       | | +-group_variable_list=
        |       | |   +-GraphMakeArrayVariable(element=$element_table.a#2, array=$element_table.a#5)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.b#3, array=$element_table.b#6)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.c#4, array=$element_table.c#7)
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.y#10]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$element_table.x#1
        |       +-tail=$element_table.y#10
        +-shape_expr_list=
          +-src_id#11 :=
          | +-GraphGetElementProperty
          |   +-type=INT64
          |   +-expr=
          |   | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.x#1)
          |   +-property=id(INT64)
          +-dest_id#12 :=
            +-GraphGetElementProperty
              +-type=INT64
              +-expr=
              | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.y#10)
              +-property=id(INT64)



==

# Ensure that variables within a quantified pattern are treated as singleton
# vars within the bounds of that quantified pattern. (path scope)
select * from graph_table(
  aml
  MATCH ((a)-[b]->(c) WHERE a.id > 100){1, 3}
  COLUMNS (1 AS one)
)
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#9 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#9]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#9]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$path_scan.[$head#7, $tail#8]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$path_scan.[$head#7, $tail#8]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.b#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.c#3]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-filter_expr=
        |       | +-FunctionCall(ZetaSQL:$greater(INT64, INT64) -> BOOL)
        |       |   +-GraphGetElementProperty
        |       |   | +-type=INT64
        |       |   | +-expr=
        |       |   | | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
        |       |   | +-property=id(INT64)
        |       |   +-Literal(type=INT64, value=100)
        |       +-head=$path_scan.$head#7
        |       +-tail=$path_scan.$tail#8
        |       +-quantifier=
        |       | +-GraphPathPatternQuantifier
        |       |   +-lower_bound=
        |       |   | +-Literal(type=INT64, value=1)
        |       |   +-upper_bound=
        |       |     +-Literal(type=INT64, value=3)
        |       +-group_variable_list=
        |         +-GraphMakeArrayVariable(element=$element_table.a#1, array=$element_table.a#4)
        |         +-GraphMakeArrayVariable(element=$element_table.b#2, array=$element_table.b#5)
        |         +-GraphMakeArrayVariable(element=$element_table.c#3, array=$element_table.c#6)
        +-shape_expr_list=
          +-one#9 := Literal(type=INT64, value=1)



==

# Ensure that variables within a quantified pattern are treated as singleton
# vars within the bounds of that quantified pattern. (element scope)
select * from graph_table(
  aml
  MATCH ((a WHERE a.id > 10)-[b]->(c)){1, 3}
  COLUMNS (1 AS one)
)
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#9 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#9]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#9]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$path_scan.[$head#7, $tail#8]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$path_scan.[$head#7, $tail#8]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-filter_expr=
        |       | | | +-FunctionCall(ZetaSQL:$greater(INT64, INT64) -> BOOL)
        |       | | |   +-GraphGetElementProperty
        |       | | |   | +-type=INT64
        |       | | |   | +-expr=
        |       | | |   | | +-ColumnRef(type=GRAPH_NODE(aml)<age UINT32, balance UINT64, birthday DATE, data BYTES, id INT64, name STRING, syndicateData ARRAY<INT64>, syndicateId INT64, syndicateName STRING>, column=$element_table.a#1)
        |       | | |   | +-property=id(INT64)
        |       | | |   +-Literal(type=INT64, value=10)
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.b#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.c#3]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$path_scan.$head#7
        |       +-tail=$path_scan.$tail#8
        |       +-quantifier=
        |       | +-GraphPathPatternQuantifier
        |       |   +-lower_bound=
        |       |   | +-Literal(type=INT64, value=1)
        |       |   +-upper_bound=
        |       |     +-Literal(type=INT64, value=3)
        |       +-group_variable_list=
        |         +-GraphMakeArrayVariable(element=$element_table.a#1, array=$element_table.a#4)
        |         +-GraphMakeArrayVariable(element=$element_table.b#2, array=$element_table.b#5)
        |         +-GraphMakeArrayVariable(element=$element_table.c#3, array=$element_table.c#6)
        +-shape_expr_list=
          +-one#9 := Literal(type=INT64, value=1)
==

# Traversal hints within a quantified path
select * from graph_table(
  aml
  MATCH ((a)-[b]->@{key=val}(c)){1, 3}
  COLUMNS(1 AS One)
)
--
QueryStmt
+-output_column_list=
| +-$graph_table.One#9 AS One [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.One#9]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.One#9]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$path_scan.[$head#7, $tail#8]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$path_scan.[$head#7, $tail#8]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.b#2]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | | +-rhs_hint_list=
        |       | |   +-key := Literal(type=STRING, value="val")
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.c#3]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$path_scan.$head#7
        |       +-tail=$path_scan.$tail#8
        |       +-quantifier=
        |       | +-GraphPathPatternQuantifier
        |       |   +-lower_bound=
        |       |   | +-Literal(type=INT64, value=1)
        |       |   +-upper_bound=
        |       |     +-Literal(type=INT64, value=3)
        |       +-group_variable_list=
        |         +-GraphMakeArrayVariable(element=$element_table.a#1, array=$element_table.a#4)
        |         +-GraphMakeArrayVariable(element=$element_table.b#2, array=$element_table.b#5)
        |         +-GraphMakeArrayVariable(element=$element_table.c#3, array=$element_table.c#6)
        +-shape_expr_list=
          +-One#9 := Literal(type=INT64, value=1)



==

# Concatenated quantifiers
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH((a)-[b]->(c)){1, 3}((x)-[y]->(z)){1, 3}
  COLUMNS(1 AS one)
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#17 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#17]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#17]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$path_scan.[$head#7, $tail#8, $head#15, $tail#16]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=$path_scan.[$head#7, $tail#8, $head#15, $tail#16]
        |       +-input_scan_list=
        |       | +-GraphPathScan
        |       | | +-column_list=$path_scan.[$head#7, $tail#8]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.a#1]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.b#2]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.c#3]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-head=$path_scan.$head#7
        |       | | +-tail=$path_scan.$tail#8
        |       | | +-quantifier=
        |       | | | +-GraphPathPatternQuantifier
        |       | | |   +-lower_bound=
        |       | | |   | +-Literal(type=INT64, value=1)
        |       | | |   +-upper_bound=
        |       | | |     +-Literal(type=INT64, value=3)
        |       | | +-group_variable_list=
        |       | |   +-GraphMakeArrayVariable(element=$element_table.a#1, array=$element_table.a#4)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.b#2, array=$element_table.b#5)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.c#3, array=$element_table.c#6)
        |       | +-GraphPathScan
        |       |   +-column_list=$path_scan.[$head#15, $tail#16]
        |       |   +-input_scan_list=
        |       |   | +-GraphNodeScan
        |       |   | | +-column_list=[$element_table.x#9]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   | +-GraphEdgeScan
        |       |   | | +-column_list=[$element_table.y#10]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       |   | | +-orientation=RIGHT
        |       |   | +-GraphNodeScan
        |       |   |   +-column_list=[$element_table.z#11]
        |       |   |   +-label_expr=
        |       |   |   | +-GraphLabelNaryExpr
        |       |   |   |   +-op=OR
        |       |   |   |   +-operand_list=
        |       |   |   |     +-GraphWildCardLabel
        |       |   |   |     +-GraphLabelNaryExpr
        |       |   |   |       +-op=NOT
        |       |   |   |       +-operand_list=
        |       |   |   |         +-GraphWildCardLabel
        |       |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   +-head=$path_scan.$head#15
        |       |   +-tail=$path_scan.$tail#16
        |       |   +-quantifier=
        |       |   | +-GraphPathPatternQuantifier
        |       |   |   +-lower_bound=
        |       |   |   | +-Literal(type=INT64, value=1)
        |       |   |   +-upper_bound=
        |       |   |     +-Literal(type=INT64, value=3)
        |       |   +-group_variable_list=
        |       |     +-GraphMakeArrayVariable(element=$element_table.x#9, array=$element_table.x#12)
        |       |     +-GraphMakeArrayVariable(element=$element_table.y#10, array=$element_table.y#13)
        |       |     +-GraphMakeArrayVariable(element=$element_table.z#11, array=$element_table.z#14)
        |       +-head=$path_scan.$head#7
        |       +-tail=$path_scan.$tail#16
        +-shape_expr_list=
          +-one#17 := Literal(type=INT64, value=1)



==

# Quantifier within a subpath
SELECT * FROM GRAPH_TABLE(
  aml
  MATCH (a)(-[b]->{1, 3})(c)
  COLUMNS(1 AS One)
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.One#11 AS One [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.One#11]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.One#11]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.a#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.c#10]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=[$element_table.a#1, $path_scan.$head#8, $path_scan.$tail#9, $element_table.c#10]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.a#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphPathScan
        |       | | +-column_list=$path_scan.[$head#8, $tail#9]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.$element1#2]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.b#3]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.$element2#4]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-head=$path_scan.$head#8
        |       | | +-tail=$path_scan.$tail#9
        |       | | +-quantifier=
        |       | | | +-GraphPathPatternQuantifier
        |       | | |   +-lower_bound=
        |       | | |   | +-Literal(type=INT64, value=1)
        |       | | |   +-upper_bound=
        |       | | |     +-Literal(type=INT64, value=3)
        |       | | +-group_variable_list=
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.b#3, array=$element_table.b#6)
        |       | |   +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.c#10]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$element_table.a#1
        |       +-tail=$element_table.c#10
        +-shape_expr_list=
          +-One#11 := Literal(type=INT64, value=1)
==

# Begin base term optimization tests
# Possible paths in graph:
# Person Own Account || Account Transfer Account

# Last possible elements of LHS Path factor: (Account)
# Possibe nodes within quantified path: (Account)
# Final base term: (Account)
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH (x:Account)((a)-[b:Transfer]->(c)){1, 3}
  COLUMNS(1 AS one)
  )
--

QueryStmt
+-output_column_list=
| +-$graph_table.one#10 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#10]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#10]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.x#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=46-53, label=aml.Account)
        |       | | +-target_element_table_list=[aml.Account]
        |       | +-GraphPathScan
        |       |   +-column_list=$path_scan.[$head#8, $tail#9]
        |       |   +-input_scan_list=
        |       |   | +-GraphNodeScan
        |       |   | | +-column_list=[$element_table.a#2]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   | +-GraphEdgeScan
        |       |   | | +-column_list=[$element_table.b#3]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabel(parse_location=62-70, label=aml.Transfer)
        |       |   | | +-target_element_table_list=[aml.Transfer]
        |       |   | | +-orientation=RIGHT
        |       |   | +-GraphNodeScan
        |       |   |   +-column_list=[$element_table.c#4]
        |       |   |   +-label_expr=
        |       |   |   | +-GraphLabelNaryExpr
        |       |   |   |   +-op=OR
        |       |   |   |   +-operand_list=
        |       |   |   |     +-GraphWildCardLabel
        |       |   |   |     +-GraphLabelNaryExpr
        |       |   |   |       +-op=NOT
        |       |   |   |       +-operand_list=
        |       |   |   |         +-GraphWildCardLabel
        |       |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   +-head=$path_scan.$head#8
        |       |   +-tail=$path_scan.$tail#9
        |       |   +-quantifier=
        |       |   | +-GraphPathPatternQuantifier
        |       |   |   +-lower_bound=
        |       |   |   | +-Literal(type=INT64, value=1)
        |       |   |   +-upper_bound=
        |       |   |     +-Literal(type=INT64, value=3)
        |       |   +-group_variable_list=
        |       |     +-GraphMakeArrayVariable(element=$element_table.a#2, array=$element_table.a#5)
        |       |     +-GraphMakeArrayVariable(element=$element_table.b#3, array=$element_table.b#6)
        |       |     +-GraphMakeArrayVariable(element=$element_table.c#4, array=$element_table.c#7)
        |       +-head=$element_table.x#1
        |       +-tail=$path_scan.$tail#9
        +-shape_expr_list=
          +-one#10 := Literal(type=INT64, value=1)
==

# Last possible elements of LHS Path factor: (Account)
# Possibe nodes within quantified path: (Account | Person)
# Final base term: (Account | Person)
# TODO: Can be further reduced from future optimizations
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH (x:Account)((a)-[b]->(c)){1, 3}
  COLUMNS(1 AS one)
  )
--

QueryStmt
+-output_column_list=
| +-$graph_table.one#10 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#10]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#10]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.x#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=46-53, label=aml.Account)
        |       | | +-target_element_table_list=[aml.Account]
        |       | +-GraphPathScan
        |       |   +-column_list=$path_scan.[$head#8, $tail#9]
        |       |   +-input_scan_list=
        |       |   | +-GraphNodeScan
        |       |   | | +-column_list=[$element_table.a#2]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   | +-GraphEdgeScan
        |       |   | | +-column_list=[$element_table.b#3]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       |   | | +-orientation=RIGHT
        |       |   | +-GraphNodeScan
        |       |   |   +-column_list=[$element_table.c#4]
        |       |   |   +-label_expr=
        |       |   |   | +-GraphLabelNaryExpr
        |       |   |   |   +-op=OR
        |       |   |   |   +-operand_list=
        |       |   |   |     +-GraphWildCardLabel
        |       |   |   |     +-GraphLabelNaryExpr
        |       |   |   |       +-op=NOT
        |       |   |   |       +-operand_list=
        |       |   |   |         +-GraphWildCardLabel
        |       |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   +-head=$path_scan.$head#8
        |       |   +-tail=$path_scan.$tail#9
        |       |   +-quantifier=
        |       |   | +-GraphPathPatternQuantifier
        |       |   |   +-lower_bound=
        |       |   |   | +-Literal(type=INT64, value=1)
        |       |   |   +-upper_bound=
        |       |   |     +-Literal(type=INT64, value=3)
        |       |   +-group_variable_list=
        |       |     +-GraphMakeArrayVariable(element=$element_table.a#2, array=$element_table.a#5)
        |       |     +-GraphMakeArrayVariable(element=$element_table.b#3, array=$element_table.b#6)
        |       |     +-GraphMakeArrayVariable(element=$element_table.c#4, array=$element_table.c#7)
        |       +-head=$element_table.x#1
        |       +-tail=$path_scan.$tail#9
        +-shape_expr_list=
          +-one#10 := Literal(type=INT64, value=1)
==

# Last possible elements of LHS Path factor: (Account)
# Possibe nodes within quantified path: (Account)
# Final base term: (Account)
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH ((p)-[]->())((a)-[b:Transfer]->(c)){1, 3}
  COLUMNS(1 AS one)
  )
--

QueryStmt
+-output_column_list=
| +-$graph_table.one#12 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#12]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#12]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.p#1, $element_table.$element1#2, $element_table.$element2#3, $path_scan.$head#10, $path_scan.$tail#11]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=[$element_table.p#1, $element_table.$element1#2, $element_table.$element2#3, $path_scan.$head#10, $path_scan.$tail#11]
        |       +-input_scan_list=
        |       | +-GraphPathScan
        |       | | +-column_list=$element_table.[p#1, $element1#2, $element2#3]
        |       | | +-input_scan_list=
        |       | | | +-GraphNodeScan
        |       | | | | +-column_list=[$element_table.p#1]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | | +-GraphEdgeScan
        |       | | | | +-column_list=[$element_table.$element1#2]
        |       | | | | +-label_expr=
        |       | | | | | +-GraphLabelNaryExpr
        |       | | | | |   +-op=OR
        |       | | | | |   +-operand_list=
        |       | | | | |     +-GraphWildCardLabel
        |       | | | | |     +-GraphLabelNaryExpr
        |       | | | | |       +-op=NOT
        |       | | | | |       +-operand_list=
        |       | | | | |         +-GraphWildCardLabel
        |       | | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | | | +-orientation=RIGHT
        |       | | | +-GraphNodeScan
        |       | | |   +-column_list=[$element_table.$element2#3]
        |       | | |   +-label_expr=
        |       | | |   | +-GraphLabelNaryExpr
        |       | | |   |   +-op=OR
        |       | | |   |   +-operand_list=
        |       | | |   |     +-GraphWildCardLabel
        |       | | |   |     +-GraphLabelNaryExpr
        |       | | |   |       +-op=NOT
        |       | | |   |       +-operand_list=
        |       | | |   |         +-GraphWildCardLabel
        |       | | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | | +-head=$element_table.p#1
        |       | | +-tail=$element_table.$element2#3
        |       | +-GraphPathScan
        |       |   +-column_list=$path_scan.[$head#10, $tail#11]
        |       |   +-input_scan_list=
        |       |   | +-GraphNodeScan
        |       |   | | +-column_list=[$element_table.a#4]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   | +-GraphEdgeScan
        |       |   | | +-column_list=[$element_table.b#5]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabel(parse_location=63-71, label=aml.Transfer)
        |       |   | | +-target_element_table_list=[aml.Transfer]
        |       |   | | +-orientation=RIGHT
        |       |   | +-GraphNodeScan
        |       |   |   +-column_list=[$element_table.c#6]
        |       |   |   +-label_expr=
        |       |   |   | +-GraphLabelNaryExpr
        |       |   |   |   +-op=OR
        |       |   |   |   +-operand_list=
        |       |   |   |     +-GraphWildCardLabel
        |       |   |   |     +-GraphLabelNaryExpr
        |       |   |   |       +-op=NOT
        |       |   |   |       +-operand_list=
        |       |   |   |         +-GraphWildCardLabel
        |       |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   +-head=$path_scan.$head#10
        |       |   +-tail=$path_scan.$tail#11
        |       |   +-quantifier=
        |       |   | +-GraphPathPatternQuantifier
        |       |   |   +-lower_bound=
        |       |   |   | +-Literal(type=INT64, value=1)
        |       |   |   +-upper_bound=
        |       |   |     +-Literal(type=INT64, value=3)
        |       |   +-group_variable_list=
        |       |     +-GraphMakeArrayVariable(element=$element_table.a#4, array=$element_table.a#7)
        |       |     +-GraphMakeArrayVariable(element=$element_table.b#5, array=$element_table.b#8)
        |       |     +-GraphMakeArrayVariable(element=$element_table.c#6, array=$element_table.c#9)
        |       +-head=$element_table.p#1
        |       +-tail=$path_scan.$tail#11
        +-shape_expr_list=
          +-one#12 := Literal(type=INT64, value=1)
==

# Last possible elements of LHS Path factor: (Account)
# Possibe nodes within quantified path: (Account)
# Final base term: (Account)
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH (x:Account)-[b:Transfer]->{1, 3}
  COLUMNS(1 AS one)
  )
--

QueryStmt
+-output_column_list=
| +-$graph_table.one#10 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#10]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#10]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.x#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=46-53, label=aml.Account)
        |       | | +-target_element_table_list=[aml.Account]
        |       | +-GraphPathScan
        |       |   +-column_list=$path_scan.[$head#8, $tail#9]
        |       |   +-input_scan_list=
        |       |   | +-GraphNodeScan
        |       |   | | +-column_list=[$element_table.$element1#2]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   | +-GraphEdgeScan
        |       |   | | +-column_list=[$element_table.b#3]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabel(parse_location=58-66, label=aml.Transfer)
        |       |   | | +-target_element_table_list=[aml.Transfer]
        |       |   | | +-orientation=RIGHT
        |       |   | +-GraphNodeScan
        |       |   |   +-column_list=[$element_table.$element2#4]
        |       |   |   +-label_expr=
        |       |   |   | +-GraphLabelNaryExpr
        |       |   |   |   +-op=OR
        |       |   |   |   +-operand_list=
        |       |   |   |     +-GraphWildCardLabel
        |       |   |   |     +-GraphLabelNaryExpr
        |       |   |   |       +-op=NOT
        |       |   |   |       +-operand_list=
        |       |   |   |         +-GraphWildCardLabel
        |       |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   +-head=$path_scan.$head#8
        |       |   +-tail=$path_scan.$tail#9
        |       |   +-quantifier=
        |       |   | +-GraphPathPatternQuantifier
        |       |   |   +-lower_bound=
        |       |   |   | +-Literal(type=INT64, value=1)
        |       |   |   +-upper_bound=
        |       |   |     +-Literal(type=INT64, value=3)
        |       |   +-group_variable_list=
        |       |     +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
        |       |     +-GraphMakeArrayVariable(element=$element_table.b#3, array=$element_table.b#6)
        |       |     +-GraphMakeArrayVariable(element=$element_table.$element2#4, array=$element_table.$element2#7)
        |       +-head=$element_table.x#1
        |       +-tail=$path_scan.$tail#9
        +-shape_expr_list=
          +-one#10 := Literal(type=INT64, value=1)
==

# Last possible elements of LHS Path factor: (Account)
# Possibe nodes within quantified path: (Account | Person)
# Final base term: (Account | Person)
# TODO: Can be further reduced from future optimizations
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH (x:Account)->{1, 3}
  COLUMNS(1 AS one)
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#10 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#10]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#10]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |       +-column_list=[$element_table.x#1, $path_scan.$head#8, $path_scan.$tail#9]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.x#1]
        |       | | +-label_expr=
        |       | | | +-GraphLabel(parse_location=46-53, label=aml.Account)
        |       | | +-target_element_table_list=[aml.Account]
        |       | +-GraphPathScan
        |       |   +-column_list=$path_scan.[$head#8, $tail#9]
        |       |   +-input_scan_list=
        |       |   | +-GraphNodeScan
        |       |   | | +-column_list=[$element_table.$element1#2]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   | +-GraphEdgeScan
        |       |   | | +-column_list=[$element_table.$element2#3]
        |       |   | | +-label_expr=
        |       |   | | | +-GraphLabelNaryExpr
        |       |   | | |   +-op=OR
        |       |   | | |   +-operand_list=
        |       |   | | |     +-GraphWildCardLabel
        |       |   | | |     +-GraphLabelNaryExpr
        |       |   | | |       +-op=NOT
        |       |   | | |       +-operand_list=
        |       |   | | |         +-GraphWildCardLabel
        |       |   | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       |   | | +-orientation=RIGHT
        |       |   | +-GraphNodeScan
        |       |   |   +-column_list=[$element_table.$element3#4]
        |       |   |   +-label_expr=
        |       |   |   | +-GraphLabelNaryExpr
        |       |   |   |   +-op=OR
        |       |   |   |   +-operand_list=
        |       |   |   |     +-GraphWildCardLabel
        |       |   |   |     +-GraphLabelNaryExpr
        |       |   |   |       +-op=NOT
        |       |   |   |       +-operand_list=
        |       |   |   |         +-GraphWildCardLabel
        |       |   |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       |   +-head=$path_scan.$head#8
        |       |   +-tail=$path_scan.$tail#9
        |       |   +-quantifier=
        |       |   | +-GraphPathPatternQuantifier
        |       |   |   +-lower_bound=
        |       |   |   | +-Literal(type=INT64, value=1)
        |       |   |   +-upper_bound=
        |       |   |     +-Literal(type=INT64, value=3)
        |       |   +-group_variable_list=
        |       |     +-GraphMakeArrayVariable(element=$element_table.$element1#2, array=$element_table.$element1#5)
        |       |     +-GraphMakeArrayVariable(element=$element_table.$element2#3, array=$element_table.$element2#6)
        |       |     +-GraphMakeArrayVariable(element=$element_table.$element3#4, array=$element_table.$element3#7)
        |       +-head=$element_table.x#1
        |       +-tail=$path_scan.$tail#9
        +-shape_expr_list=
          +-one#10 := Literal(type=INT64, value=1)
==

# (b/344986161): Cross join between quantified paths should not have equality
# join condition.
SELECT one FROM GRAPH_TABLE(
  aml
  MATCH ((a)-[b]->(c)){1},((d)-[e]->(f)){2}
  COLUMNS(1 AS one)
  )
--
QueryStmt
+-output_column_list=
| +-$graph_table.one#17 AS one [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$graph_table.one#17]
    +-input_scan=
      +-GraphTableScan
        +-column_list=[$graph_table.one#17]
        +-property_graph=aml
        +-input_scan=
        | +-GraphScan
        |   +-column_list=$path_scan.[$head#7, $tail#8, $head#15, $tail#16]
        |   +-input_scan_list=
        |     +-GraphPathScan
        |     | +-column_list=$path_scan.[$head#7, $tail#8]
        |     | +-input_scan_list=
        |     | | +-GraphNodeScan
        |     | | | +-column_list=[$element_table.a#1]
        |     | | | +-label_expr=
        |     | | | | +-GraphLabelNaryExpr
        |     | | | |   +-op=OR
        |     | | | |   +-operand_list=
        |     | | | |     +-GraphWildCardLabel
        |     | | | |     +-GraphLabelNaryExpr
        |     | | | |       +-op=NOT
        |     | | | |       +-operand_list=
        |     | | | |         +-GraphWildCardLabel
        |     | | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |     | | +-GraphEdgeScan
        |     | | | +-column_list=[$element_table.b#2]
        |     | | | +-label_expr=
        |     | | | | +-GraphLabelNaryExpr
        |     | | | |   +-op=OR
        |     | | | |   +-operand_list=
        |     | | | |     +-GraphWildCardLabel
        |     | | | |     +-GraphLabelNaryExpr
        |     | | | |       +-op=NOT
        |     | | | |       +-operand_list=
        |     | | | |         +-GraphWildCardLabel
        |     | | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |     | | | +-orientation=RIGHT
        |     | | +-GraphNodeScan
        |     | |   +-column_list=[$element_table.c#3]
        |     | |   +-label_expr=
        |     | |   | +-GraphLabelNaryExpr
        |     | |   |   +-op=OR
        |     | |   |   +-operand_list=
        |     | |   |     +-GraphWildCardLabel
        |     | |   |     +-GraphLabelNaryExpr
        |     | |   |       +-op=NOT
        |     | |   |       +-operand_list=
        |     | |   |         +-GraphWildCardLabel
        |     | |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |     | +-head=$path_scan.$head#7
        |     | +-tail=$path_scan.$tail#8
        |     | +-quantifier=
        |     | | +-GraphPathPatternQuantifier
        |     | |   +-lower_bound=
        |     | |   | +-Literal(type=INT64, value=1)
        |     | |   +-upper_bound=
        |     | |     +-Literal(type=INT64, value=1)
        |     | +-group_variable_list=
        |     |   +-GraphMakeArrayVariable(element=$element_table.a#1, array=$element_table.a#4)
        |     |   +-GraphMakeArrayVariable(element=$element_table.b#2, array=$element_table.b#5)
        |     |   +-GraphMakeArrayVariable(element=$element_table.c#3, array=$element_table.c#6)
        |     +-GraphPathScan
        |       +-column_list=$path_scan.[$head#15, $tail#16]
        |       +-input_scan_list=
        |       | +-GraphNodeScan
        |       | | +-column_list=[$element_table.d#9]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       | +-GraphEdgeScan
        |       | | +-column_list=[$element_table.e#10]
        |       | | +-label_expr=
        |       | | | +-GraphLabelNaryExpr
        |       | | |   +-op=OR
        |       | | |   +-operand_list=
        |       | | |     +-GraphWildCardLabel
        |       | | |     +-GraphLabelNaryExpr
        |       | | |       +-op=NOT
        |       | | |       +-operand_list=
        |       | | |         +-GraphWildCardLabel
        |       | | +-target_element_table_list=[aml.PersonOwnAccount,aml.Transfer]
        |       | | +-orientation=RIGHT
        |       | +-GraphNodeScan
        |       |   +-column_list=[$element_table.f#11]
        |       |   +-label_expr=
        |       |   | +-GraphLabelNaryExpr
        |       |   |   +-op=OR
        |       |   |   +-operand_list=
        |       |   |     +-GraphWildCardLabel
        |       |   |     +-GraphLabelNaryExpr
        |       |   |       +-op=NOT
        |       |   |       +-operand_list=
        |       |   |         +-GraphWildCardLabel
        |       |   +-target_element_table_list=[aml.Account,aml.Person,aml.Syndicate]
        |       +-head=$path_scan.$head#15
        |       +-tail=$path_scan.$tail#16
        |       +-quantifier=
        |       | +-GraphPathPatternQuantifier
        |       |   +-lower_bound=
        |       |   | +-Literal(type=INT64, value=2)
        |       |   +-upper_bound=
        |       |     +-Literal(type=INT64, value=2)
        |       +-group_variable_list=
        |         +-GraphMakeArrayVariable(element=$element_table.d#9, array=$element_table.d#12)
        |         +-GraphMakeArrayVariable(element=$element_table.e#10, array=$element_table.e#13)
        |         +-GraphMakeArrayVariable(element=$element_table.f#11, array=$element_table.f#14)
        +-shape_expr_list=
          +-one#17 := Literal(type=INT64, value=1)
