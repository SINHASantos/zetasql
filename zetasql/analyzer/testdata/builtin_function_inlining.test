# Tests the builtin function inliner
[default enabled_ast_rewrites=ALL,-WITH_EXPR]
[default language_features=MAXIMUM,+SAFE_FUNCTION_CALL,+INLINE_LAMBDA_ARGUMENT,+LATERAL_JOIN]
[enabled_ast_rewrites=ALL,{{|-WITH_EXPR}}]
SELECT
  {{SAFE.|}}builtin_rewrites_to_lateral_join(CAST(a + rand() AS INT64))
FROM (SELECT 1 AS a);
--
ALTERNATION GROUPS:
    SAFE.
    -WITH_EXPR,SAFE.
--
QueryStmt
+-output_column_list=
| +-$query.$col1#2 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#2]
    +-expr_list=
    | +-$col1#2 :=
    |   +-FunctionCall({SAFE_ERROR_MODE} sample_functions:builtin_rewrites_to_lateral_join(INT64 arg) -> INT64)
    |     +-Cast(DOUBLE -> INT64)
    |       +-FunctionCall(ZetaSQL:$add(DOUBLE, DOUBLE) -> DOUBLE)
    |         +-Cast(INT64 -> DOUBLE)
    |         | +-ColumnRef(type=INT64, column=$subquery1.a#1)
    |         +-FunctionCall(ZetaSQL:rand() -> DOUBLE)
    +-input_scan=
      +-ProjectScan
        +-column_list=[$subquery1.a#1]
        +-expr_list=
        | +-a#1 := Literal(type=INT64, value=1)
        +-input_scan=
          +-SingleRowScan

[REWRITTEN AST]
QueryStmt
+-output_column_list=
| +-$query.$col1#2 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#2]
    +-expr_list=
    | +-$col1#2 :=
    |   +-SubqueryExpr
    |     +-type=INT64
    |     +-subquery_type=SCALAR
    |     +-parameter_list=
    |     | +-ColumnRef(type=INT64, column=$subquery1.a#1)
    |     +-subquery=
    |       +-ProjectScan
    |         +-column_list=[$expr_subquery.$col1#9]
    |         +-expr_list=
    |         | +-$col1#9 :=
    |         |   +-FunctionCall(ZetaSQL:iferror(INT64, INT64) -> INT64)
    |         |     +-SubqueryExpr
    |         |     | +-type=INT64
    |         |     | +-subquery_type=SCALAR
    |         |     | +-parameter_list=
    |         |     | | +-ColumnRef(type=INT64, column=$subquery1.arg#3)
    |         |     | +-subquery=
    |         |     |   +-ProjectScan
    |         |     |     +-column_list=[$expr_subquery.$col1#8]
    |         |     |     +-expr_list=
    |         |     |     | +-$col1#8 :=
    |         |     |     |   +-FunctionCall(ZetaSQL:$add(INT64, INT64) -> INT64)
    |         |     |     |     +-ColumnRef(type=INT64, column=$subquery1.arg#3, is_correlated=TRUE)
    |         |     |     |     +-ColumnRef(type=INT64, column=t1.x#4)
    |         |     |     +-input_scan=
    |         |     |       +-JoinScan
    |         |     |         +-column_list=[t1.x#4, $subquery2.b#7]
    |         |     |         +-left_scan=
    |         |     |         | +-ProjectScan
    |         |     |         |   +-column_list=[t1.x#4]
    |         |     |         |   +-expr_list=
    |         |     |         |   | +-x#4 := Literal(type=INT64, value=1)
    |         |     |         |   +-input_scan=
    |         |     |         |     +-SingleRowScan
    |         |     |         +-right_scan=
    |         |     |         | +-ProjectScan
    |         |     |         |   +-column_list=[$subquery2.b#7]
    |         |     |         |   +-input_scan=
    |         |     |         |     +-ProjectScan
    |         |     |         |       +-column_list=[$subquery2.b#7]
    |         |     |         |       +-expr_list=
    |         |     |         |       | +-b#7 :=
    |         |     |         |       |   +-SubqueryExpr
    |         |     |         |       |     +-type=BOOL
    |         |     |         |       |     +-subquery_type=SCALAR
    |         |     |         |       |     +-parameter_list=
    |         |     |         |       |     | +-ColumnRef(type=INT64, column=$subquery1.arg#3, is_correlated=TRUE)
    |         |     |         |       |     | +-ColumnRef(type=INT64, column=t1.x#4, is_correlated=TRUE)
    |         |     |         |       |     | +-ColumnRef(type=INT64, column=$subquery3.y#5)
    |         |     |         |       |     +-subquery=
    |         |     |         |       |       +-ProjectScan
    |         |     |         |       |         +-column_list=[$expr_subquery.$col1#6]
    |         |     |         |       |         +-expr_list=
    |         |     |         |       |         | +-$col1#6 :=
    |         |     |         |       |         |   +-FunctionCall(ZetaSQL:$greater(INT64, INT64) -> BOOL)
    |         |     |         |       |         |     +-FunctionCall(ZetaSQL:$add(INT64, INT64) -> INT64)
    |         |     |         |       |         |     | +-ColumnRef(type=INT64, column=$subquery3.y#5, is_correlated=TRUE)
    |         |     |         |       |         |     | +-ColumnRef(type=INT64, column=$subquery1.arg#3, is_correlated=TRUE)
    |         |     |         |       |         |     +-ColumnRef(type=INT64, column=t1.x#4, is_correlated=TRUE)
    |         |     |         |       |         +-input_scan=
    |         |     |         |       |           +-SingleRowScan
    |         |     |         |       +-input_scan=
    |         |     |         |         +-ProjectScan
    |         |     |         |           +-column_list=[$subquery3.y#5]
    |         |     |         |           +-expr_list=
    |         |     |         |           | +-y#5 := Literal(type=INT64, value=1)
    |         |     |         |           +-input_scan=
    |         |     |         |             +-SingleRowScan
    |         |     |         +-is_lateral=TRUE
    |         |     |         +-parameter_list=
    |         |     |           +-ColumnRef(type=INT64, column=$subquery1.arg#3, is_correlated=TRUE)
    |         |     |           +-ColumnRef(type=INT64, column=t1.x#4)
    |         |     +-Literal(type=INT64, value=NULL, has_explicit_type=TRUE)
    |         +-input_scan=
    |           +-ProjectScan
    |             +-column_list=[$subquery1.arg#3]
    |             +-expr_list=
    |             | +-arg#3 :=
    |             |   +-Cast(DOUBLE -> INT64)
    |             |     +-FunctionCall(ZetaSQL:$add(DOUBLE, DOUBLE) -> DOUBLE)
    |             |       +-Cast(INT64 -> DOUBLE)
    |             |       | +-ColumnRef(type=INT64, column=$subquery1.a#1, is_correlated=TRUE)
    |             |       +-FunctionCall(ZetaSQL:rand() -> DOUBLE)
    |             +-input_scan=
    |               +-SingleRowScan
    +-input_scan=
      +-ProjectScan
        +-column_list=[$subquery1.a#1]
        +-expr_list=
        | +-a#1 := Literal(type=INT64, value=1)
        +-input_scan=
          +-SingleRowScan
--
ALTERNATION GROUPS:
    <empty>
    -WITH_EXPR,
--
QueryStmt
+-output_column_list=
| +-$query.$col1#2 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#2]
    +-expr_list=
    | +-$col1#2 :=
    |   +-FunctionCall(sample_functions:builtin_rewrites_to_lateral_join(INT64 arg) -> INT64)
    |     +-Cast(DOUBLE -> INT64)
    |       +-FunctionCall(ZetaSQL:$add(DOUBLE, DOUBLE) -> DOUBLE)
    |         +-Cast(INT64 -> DOUBLE)
    |         | +-ColumnRef(type=INT64, column=$subquery1.a#1)
    |         +-FunctionCall(ZetaSQL:rand() -> DOUBLE)
    +-input_scan=
      +-ProjectScan
        +-column_list=[$subquery1.a#1]
        +-expr_list=
        | +-a#1 := Literal(type=INT64, value=1)
        +-input_scan=
          +-SingleRowScan

[REWRITTEN AST]
QueryStmt
+-output_column_list=
| +-$query.$col1#2 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#2]
    +-expr_list=
    | +-$col1#2 :=
    |   +-SubqueryExpr
    |     +-type=INT64
    |     +-subquery_type=SCALAR
    |     +-parameter_list=
    |     | +-ColumnRef(type=INT64, column=$subquery1.a#1)
    |     +-subquery=
    |       +-ProjectScan
    |         +-column_list=[$expr_subquery.$col1#9]
    |         +-expr_list=
    |         | +-$col1#9 :=
    |         |   +-SubqueryExpr
    |         |     +-type=INT64
    |         |     +-subquery_type=SCALAR
    |         |     +-parameter_list=
    |         |     | +-ColumnRef(type=INT64, column=$subquery1.arg#3)
    |         |     +-subquery=
    |         |       +-ProjectScan
    |         |         +-column_list=[$expr_subquery.$col1#8]
    |         |         +-expr_list=
    |         |         | +-$col1#8 :=
    |         |         |   +-FunctionCall(ZetaSQL:$add(INT64, INT64) -> INT64)
    |         |         |     +-ColumnRef(type=INT64, column=$subquery1.arg#3, is_correlated=TRUE)
    |         |         |     +-ColumnRef(type=INT64, column=t1.x#4)
    |         |         +-input_scan=
    |         |           +-JoinScan
    |         |             +-column_list=[t1.x#4, $subquery2.b#7]
    |         |             +-left_scan=
    |         |             | +-ProjectScan
    |         |             |   +-column_list=[t1.x#4]
    |         |             |   +-expr_list=
    |         |             |   | +-x#4 := Literal(type=INT64, value=1)
    |         |             |   +-input_scan=
    |         |             |     +-SingleRowScan
    |         |             +-right_scan=
    |         |             | +-ProjectScan
    |         |             |   +-column_list=[$subquery2.b#7]
    |         |             |   +-input_scan=
    |         |             |     +-ProjectScan
    |         |             |       +-column_list=[$subquery2.b#7]
    |         |             |       +-expr_list=
    |         |             |       | +-b#7 :=
    |         |             |       |   +-SubqueryExpr
    |         |             |       |     +-type=BOOL
    |         |             |       |     +-subquery_type=SCALAR
    |         |             |       |     +-parameter_list=
    |         |             |       |     | +-ColumnRef(type=INT64, column=$subquery1.arg#3, is_correlated=TRUE)
    |         |             |       |     | +-ColumnRef(type=INT64, column=t1.x#4, is_correlated=TRUE)
    |         |             |       |     | +-ColumnRef(type=INT64, column=$subquery3.y#5)
    |         |             |       |     +-subquery=
    |         |             |       |       +-ProjectScan
    |         |             |       |         +-column_list=[$expr_subquery.$col1#6]
    |         |             |       |         +-expr_list=
    |         |             |       |         | +-$col1#6 :=
    |         |             |       |         |   +-FunctionCall(ZetaSQL:$greater(INT64, INT64) -> BOOL)
    |         |             |       |         |     +-FunctionCall(ZetaSQL:$add(INT64, INT64) -> INT64)
    |         |             |       |         |     | +-ColumnRef(type=INT64, column=$subquery3.y#5, is_correlated=TRUE)
    |         |             |       |         |     | +-ColumnRef(type=INT64, column=$subquery1.arg#3, is_correlated=TRUE)
    |         |             |       |         |     +-ColumnRef(type=INT64, column=t1.x#4, is_correlated=TRUE)
    |         |             |       |         +-input_scan=
    |         |             |       |           +-SingleRowScan
    |         |             |       +-input_scan=
    |         |             |         +-ProjectScan
    |         |             |           +-column_list=[$subquery3.y#5]
    |         |             |           +-expr_list=
    |         |             |           | +-y#5 := Literal(type=INT64, value=1)
    |         |             |           +-input_scan=
    |         |             |             +-SingleRowScan
    |         |             +-is_lateral=TRUE
    |         |             +-parameter_list=
    |         |               +-ColumnRef(type=INT64, column=$subquery1.arg#3, is_correlated=TRUE)
    |         |               +-ColumnRef(type=INT64, column=t1.x#4)
    |         +-input_scan=
    |           +-ProjectScan
    |             +-column_list=[$subquery1.arg#3]
    |             +-expr_list=
    |             | +-arg#3 :=
    |             |   +-Cast(DOUBLE -> INT64)
    |             |     +-FunctionCall(ZetaSQL:$add(DOUBLE, DOUBLE) -> DOUBLE)
    |             |       +-Cast(INT64 -> DOUBLE)
    |             |       | +-ColumnRef(type=INT64, column=$subquery1.a#1, is_correlated=TRUE)
    |             |       +-FunctionCall(ZetaSQL:rand() -> DOUBLE)
    |             +-input_scan=
    |               +-SingleRowScan
    +-input_scan=
      +-ProjectScan
        +-column_list=[$subquery1.a#1]
        +-expr_list=
        | +-a#1 := Literal(type=INT64, value=1)
        +-input_scan=
          +-SingleRowScan
